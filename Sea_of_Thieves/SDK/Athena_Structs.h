#pragma once

/**
 * Name: Sea_of_Thieves
 * Version: 9505844
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum Athena.EHealthChangedReason
	 */
	enum class EHealthChangedReason : uint8_t
	{
		NoChange                     = 0,
		Test                         = 1,
		Reset                        = 2,
		CannonProjectile             = 3,
		CannonBallSplashDamage       = 4,
		FallDamage                   = 5,
		HealedFromFood               = 6,
		Drowning                     = 7,
		DamagedBySwimmingCreature    = 8,
		StruckByLightning            = 9,
		Blunderbuss_Default          = 10,
		Pistol_Default               = 11,
		EyeOfReach_Default           = 12,
		Cutlass                      = 13,
		GunpowderBarrelExplosion     = 14,
		IngestedByKrakenTentacle     = 15,
		PowerSlammedByKrakenTentacle = 16,
		StarvedToDeath               = 17,
		SkeletonFormsHeal            = 18,
		Venom                        = 19,
		Fire                         = 20,
		Emote                        = 21,
		TinySharkBite                = 22,
		SunkenCurseSelfHeal          = 23,
		SunkenCurseDamage            = 24,
		TinySharkRespawn             = 25,
		Lava                         = 26,
		Boiling                      = 27,
		StateTransfer                = 28,
		Fragile                      = 29,
		Rainfall                     = 30,
		Submerged                    = 31,
		LiquidProjectile             = 32,
		Dry                          = 33,
		StrainDamage                 = 34,
		VolcanoInstantKill           = 35,
		VolcanicRock                 = 36,
		DevilsShroud                 = 37,
		Regeneration                 = 38,
		HarpoonProjectile            = 39,
		Mechanism                    = 40,
		KnockbackAIAbility           = 41,
		SpikePit                     = 42,
		ChestOfRage                  = 43,
		Scalded                      = 44,
		Geyser                       = 45,
		Flamethrower                 = 46,
		AshenLordFireBreath          = 47,
		AshenWindsSkull              = 48,
		AshenWindsSkullCharge        = 49,
		Revive                       = 50,
		HealedByAbility              = 51,
		Shocked                      = 52,
		Siren                        = 53,
		KrakenBite                   = 54,
		Firework                     = 55,
		Sleeping                     = 56,
		DestroyAllShipAI             = 57,
		LighthouseBeam               = 58,
		MAX                          = 59,
		MAX01                        = 60
	};

	/**
	 * Enum Athena.EShipPartCustomizationErrorCode
	 */
	enum class EShipPartCustomizationErrorCode : uint8_t
	{
		AlreadyInProgress = 0,
		FailedToCustomize = 1,
		InvalidParameters = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.ERequestState
	 */
	enum class ERequestState : uint8_t
	{
		Invalid   = 0,
		Waiting   = 1,
		Complete  = 2,
		Timeout   = 3,
		Cancelled = 4,
		MAX       = 5
	};

	/**
	 * Enum Athena.EPointSelectionMethod
	 */
	enum class EPointSelectionMethod : uint8_t
	{
		GetRandom = 0,
		GetFirst  = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.ESpaceType
	 */
	enum class ESpaceType : uint8_t
	{
		WorldSpace = 0,
		LocalSpace = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EWaterState
	 */
	enum class EWaterState : uint8_t
	{
		Empty         = 0,
		Transitioning = 1,
		Full          = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EProjectileCollisionResponse
	 */
	enum class EProjectileCollisionResponse : uint8_t
	{
		Ignore = 0,
		Block  = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.ESprintLockReason
	 */
	enum class ESprintLockReason : uint8_t
	{
		WieldedItem       = 0,
		WieldedItemAction = 1,
		Environment       = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.ESwimAttackableType
	 */
	enum class ESwimAttackableType : uint8_t
	{
		TakesDamage = 0,
		SmallItem   = 1,
		LargeItem   = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.ECharacterGender
	 */
	enum class ECharacterGender : uint8_t
	{
		Unspecified = 0,
		Male        = 1,
		Female      = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EAllianceStatus
	 */
	enum class EAllianceStatus : uint8_t
	{
		IsInAlliance    = 0,
		IsNotInAlliance = 1,
		MAX             = 2
	};

	/**
	 * Enum Athena.ENPCCustomAnimationState
	 */
	enum class ENPCCustomAnimationState : uint8_t
	{
		None              = 0,
		InOneShot         = 1,
		InContinuousIn    = 2,
		InContinuousLoopA = 3,
		InContinuousLoopB = 4,
		InContinuousOut   = 5,
		MAX               = 6
	};

	/**
	 * Enum Athena.EAthenaNPCObjectSlot
	 */
	enum class EAthenaNPCObjectSlot : uint8_t
	{
		Slot     = 0,
		Slot01   = 1,
		Slot02   = 2,
		Slot03   = 3,
		Slot04   = 4,
		Slot05   = 5,
		Slot06   = 6,
		Slot07   = 7,
		Slot08   = 8,
		Slot09   = 9,
		Slot_MAX = 10
	};

	/**
	 * Enum Athena.EAthenaNPCSpawnHand
	 */
	enum class EAthenaNPCSpawnHand : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum Athena.EAnimNotifyUnderwaterMode
	 */
	enum class EAnimNotifyUnderwaterMode : uint8_t
	{
		AutoDetect  = 0,
		AlwaysUnder = 1,
		AlwaysAbove = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EMeleeSpecialState
	 */
	enum class EMeleeSpecialState : uint8_t
	{
		None      = 0,
		Lunge     = 1,
		Knockback = 2,
		Stunned   = 3,
		Dodge     = 4,
		MAX       = 5,
		MAX01     = 6
	};

	/**
	 * Enum Athena.ESkeletonShipCaptainDockedAnimationState
	 */
	enum class ESkeletonShipCaptainDockedAnimationState : uint8_t
	{
		None      = 0,
		Taunt     = 1,
		Ram       = 2,
		RamImpact = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.ESkeletonActiveAnimSystem
	 */
	enum class ESkeletonActiveAnimSystem : uint8_t
	{
		Sensing     = 0,
		EmoteAction = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.ESkeletonEmoteActionState
	 */
	enum class ESkeletonEmoteActionState : uint8_t
	{
		None  = 0,
		Taunt = 1,
		Cheer = 2,
		MAX   = 3
	};

	/**
	 * Enum Athena.ESkeletonSensingState
	 */
	enum class ESkeletonSensingState : uint8_t
	{
		None            = 0,
		InitialReaction = 1,
		Searching       = 2,
		AlertingOthers  = 3,
		Pursuit         = 4,
		MAX             = 5
	};

	/**
	 * Enum Athena.EKnockbackAnimDirection
	 */
	enum class EKnockbackAnimDirection : uint8_t
	{
		Forwards  = 0,
		Backwards = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EStunAnimationType
	 */
	enum class EStunAnimationType : uint8_t
	{
		None                        = 0,
		Normal                      = 1,
		ShadowSkeletonLightExposure = 2,
		SkeletonDrunk               = 3,
		SkeletonDance               = 4,
		SkeletonSleep               = 5,
		MAX                         = 6
	};

	/**
	 * Enum Athena.EArmOverlayState
	 */
	enum class EArmOverlayState : uint8_t
	{
		Idle                          = 0,
		Locomotion                    = 1,
		Swimming                      = 2,
		Turning                       = 3,
		JumpingStart                  = 4,
		JumpingCycle                  = 5,
		JumpingPreImpact              = 6,
		JumpingLandLight              = 7,
		Equipping                     = 8,
		UnEquipping                   = 9,
		OneShotAction                 = 10,
		ContinuousActionIn            = 11,
		ContinuousActionCycle         = 12,
		ContinuousActionOut           = 13,
		ContinuousActionLocomotion    = 14,
		ContinuousActionJumpStart     = 15,
		ContinuousActionJumpCycle     = 16,
		ContinuousActionJumpPreImpact = 17,
		ContinuousActionJumpLandLight = 18,
		ContinuousActionSwimming      = 19,
		ComplexOneShotWarmUp          = 20,
		ComplexOneShotAction          = 21,
		ComplexOneShotRecover         = 22,
		BlockingInto                  = 23,
		BlockingLocomotion            = 24,
		BlockingFeedbackA             = 25,
		BlockingFeedbackB             = 26,
		BlockingOutOf                 = 27,
		Force_FullBody                = 28,
		Force_UpperBody               = 29,
		Force_2H                      = 30,
		MAX                           = 31
	};

	/**
	 * Enum Athena.EOceanCrawlerAIType
	 */
	enum class EOceanCrawlerAIType : uint8_t
	{
		OceanCrawler = 0,
		Crab         = 1,
		Eel          = 2,
		Hermit       = 3,
		MAX          = 4
	};

	/**
	 * Enum Athena.ECharacterSwimmingMode
	 */
	enum class ECharacterSwimmingMode : uint8_t
	{
		Surface   = 0,
		Submerged = 1,
		Total     = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EAICharacterMaxSpeedModificationReason
	 */
	enum class EAICharacterMaxSpeedModificationReason : uint8_t
	{
		SkeletonFormsConstant = 0,
		SkeletonFormsEffects  = 1,
		SkeletonLimpCurse     = 2,
		MAX                   = 3
	};

	/**
	 * Enum Athena.EVoyageLocationType
	 */
	enum class EVoyageLocationType : uint8_t
	{
		Fixed   = 0,
		Random  = 1,
		Closest = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EVoyageDisplayState
	 */
	enum class EVoyageDisplayState : uint8_t
	{
		Default  = 0,
		Proposed = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EOverlapType
	 */
	enum class EOverlapType : uint8_t
	{
		PhysX          = 0,
		SimpleOverlaps = 1,
		Ticking        = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.ECharacterFootImpactType
	 */
	enum class ECharacterFootImpactType : uint8_t
	{
		None = 0,
		Walk = 1,
		Jump = 2,
		Pace = 3,
		MAX  = 4
	};

	/**
	 * Enum Athena.EFlameColourType
	 */
	enum class EFlameColourType : uint8_t
	{
		Light = 0,
		FX    = 1,
		Glow  = 2,
		Flame = 3,
		MAX   = 4
	};

	/**
	 * Enum Athena.EQuestBookPageRenderingMode
	 */
	enum class EQuestBookPageRenderingMode : uint8_t
	{
		NoPagesRendered                             = 0,
		DrawLeftPageAsCurrentOnly                   = 1,
		DrawLeftPageAsPreviousAndRightPageAsCurrent = 2,
		DrawLeftPageAsCurrentAndRightPageAsNext     = 3,
		MAX                                         = 4
	};

	/**
	 * Enum Athena.EBT_ShipOwnership
	 */
	enum class EBT_ShipOwnership : uint8_t
	{
		Any      = 0,
		Crew     = 1,
		Alliance = 2,
		AI       = 3,
		EBT_MAX  = 4
	};

	/**
	 * Enum Athena.ECannonInteractionState
	 */
	enum class ECannonInteractionState : uint8_t
	{
		AllInteractions              = 0,
		AimingEnabledLoadingDisabled = 1,
		LoadingEnabledAimingDisabled = 2,
		NoInteractions               = 3,
		MAX                          = 4
	};

	/**
	 * Enum Athena.EShipCurseTag
	 */
	enum class EShipCurseTag : uint8_t
	{
		None    = 0,
		Ballast = 1,
		Barrel  = 2,
		Capstan = 3,
		Helm    = 4,
		Rigging = 5,
		Peace   = 6,
		MAX     = 7
	};

	/**
	 * Enum Athena.ECurseTag
	 */
	enum class ECurseTag : uint8_t
	{
		None                                       = 0,
		ToggleInteractionsForCapstan               = 1,
		ToggleInteractionsForShipStorageContainers = 2,
		ToggleInteractionsForRigging               = 3,
		ToggleInteractionsForShipCannons           = 4,
		ToggleLockOnWheel                          = 5,
		MAX                                        = 6
	};

	/**
	 * Enum Athena.EShipSurfacingState
	 */
	enum class EShipSurfacingState : uint8_t
	{
		Sailing   = 0,
		Surfacing = 1,
		Diving    = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EContainerType
	 */
	enum class EContainerType : uint8_t
	{
		None    = 0,
		Bucket  = 1,
		Stomach = 2,
		Kraken  = 3,
		Total   = 4,
		MAX     = 5
	};

	/**
	 * Enum Athena.EThrowableLiquidType
	 */
	enum class EThrowableLiquidType : uint8_t
	{
		Empty        = 0,
		Water        = 1,
		Vomit        = 2,
		BoilingWater = 3,
		Total        = 4,
		MAX          = 5
	};

	/**
	 * Enum Athena.EBucketProjectileDestination
	 */
	enum class EBucketProjectileDestination : uint8_t
	{
		Ahead     = 0,
		AtWielder = 1,
		Max       = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EBucketState
	 */
	enum class EBucketState : uint8_t
	{
		Idle             = 0,
		Scooping         = 1,
		Throwing         = 2,
		DrenchingWielder = 3,
		Max              = 4,
		Pad              = 5,
		MAX              = 6
	};

	/**
	 * Enum Athena.ELocationGeneratorSampleType
	 */
	enum class ELocationGeneratorSampleType : uint8_t
	{
		None                 = 0,
		Usable               = 1,
		Unusable_NoContact   = 2,
		Unusable_SurfaceType = 3,
		Unusable_Proximity   = 4,
		Unusable_Slope       = 5,
		Unusable_BelowWater  = 6,
		MAX                  = 7
	};

	/**
	 * Enum Athena.EBurrowEruptState
	 */
	enum class EBurrowEruptState : uint8_t
	{
		Dormant = 0,
		Erupt   = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EHasBeenWieldedState
	 */
	enum class EHasBeenWieldedState : uint8_t
	{
		InitialState      = 0,
		HasNotBeenWielded = 1,
		HasBeenWielded    = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.ECarouselPirateBodyshapeDirection
	 */
	enum class ECarouselPirateBodyshapeDirection : uint8_t
	{
		None = 0,
		N    = 1,
		NW   = 2,
		W    = 3,
		SW   = 4,
		S    = 5,
		SE   = 6,
		E    = 7,
		NE   = 8,
		MAX  = 9
	};

	/**
	 * Enum Athena.EFogBankType
	 */
	enum class EFogBankType : uint8_t
	{
		Default = 0,
		Haunted = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EPlayerMusicState
	 */
	enum class EPlayerMusicState : uint8_t
	{
		InCave                      = 0,
		InPuzzleVault               = 1,
		InsideShip                  = 2,
		Fishing                     = 3,
		KrakenEncounter             = 4,
		MusicZone_PriorityHigh      = 5,
		MusicZone_PriorityMed       = 6,
		MusicZone_PriorityLow       = 7,
		NoMusicState                = 8,
		OnBountyQuestPreAction      = 9,
		OnBountyQuestAction         = 10,
		OnBountyFortAnticipation    = 11,
		OnBountyFortPreAction       = 12,
		OnBountyFortAction          = 13,
		OnSeaFortAnticipation       = 14,
		OnSeaFortPreAction          = 15,
		OnSeaFortAction             = 16,
		OnIsland                    = 17,
		OnIslandNearCompany         = 18,
		OutAtSea                    = 19,
		ServerMigration             = 20,
		Shipwreck                   = 21,
		SkellyShipEncounter         = 22,
		SkellyShipEmergentEncounter = 23,
		TinySharkEncounter          = 24,
		TinySharkEncounterSpecial   = 25,
		UnderWater                  = 26,
		InDeepSeaRegion             = 27,
		MAX                         = 28
	};

	/**
	 * Enum Athena.ECharacterSocketCollisionResultType
	 */
	enum class ECharacterSocketCollisionResultType : uint8_t
	{
		CollisionsOnly             = 0,
		NonCollisionsOnly          = 1,
		CollisionsAndNonCollisions = 2,
		MAX                        = 3
	};

	/**
	 * Enum Athena.ECharacterSocketCollisionTraceType
	 */
	enum class ECharacterSocketCollisionTraceType : uint8_t
	{
		WorldUp         = 0,
		WorldDown       = 1,
		WorldLeft       = 2,
		WorldRight      = 3,
		TravelForwards  = 4,
		TravelBackwards = 5,
		MAX             = 6
	};

	/**
	 * Enum Athena.ERageState
	 */
	enum class ERageState : uint8_t
	{
		Disabled     = 0,
		Dormant      = 1,
		RageBuilding = 2,
		Steaming     = 3,
		OnFire       = 4,
		MAX          = 5
	};

	/**
	 * Enum Athena.EUIInputFocusType
	 */
	enum class EUIInputFocusType : uint8_t
	{
		None             = 0,
		MouseCaptureOnly = 1,
		FullCapture      = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.EVirtualKeyboardTextUsage
	 */
	enum class EVirtualKeyboardTextUsage : uint8_t
	{
		TextChat    = 0,
		PetName     = 1,
		GenericText = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EScoreReason
	 */
	enum class EScoreReason : uint8_t
	{
		None            = 0,
		SoldChest       = 1,
		SoldStolenChest = 2,
		CrewShipSunk    = 3,
		DownedOpponent  = 4,
		KilledOpponent  = 5,
		ChestDugUp      = 6,
		MastHit         = 7,
		CapstanHit      = 8,
		WheelHit        = 9,
		HullHit         = 10,
		MAX             = 11
	};

	/**
	 * Enum Athena.ESpecialEvents
	 */
	enum class ESpecialEvents : uint8_t
	{
		None           = 0,
		StartBlinds    = 1,
		Leaderboard    = 2,
		TavernCeremony = 3,
		MAX            = 4
	};

	/**
	 * Enum Athena.EContestStagePivot
	 */
	enum class EContestStagePivot : uint8_t
	{
		Beginning   = 0,
		Quater      = 1,
		HalfTime    = 2,
		ThirdQuater = 3,
		End         = 4,
		MAX         = 5
	};

	/**
	 * Enum Athena.EContestEventStages
	 */
	enum class EContestEventStages : uint8_t
	{
		Staging     = 0,
		Contest     = 1,
		PostContest = 2,
		Reward      = 3,
		MAX         = 4
	};

	/**
	 * Enum Athena.EMuteState
	 */
	enum class EMuteState : uint8_t
	{
		NotMuted               = 0,
		VoiceMuted             = 1,
		ChatMuted              = 2,
		VoiceAndChatMuted      = 3,
		NonVerbalMuted         = 4,
		VoiceAndNonVerbalMuted = 5,
		ChatAndNonVerbalMuted  = 6,
		AllMuted               = 7,
		MAX                    = 8
	};

	/**
	 * Enum Athena.ECrewSpawnState
	 */
	enum class ECrewSpawnState : uint8_t
	{
		Invalid               = 0,
		Onboarding            = 1,
		AtDock                = 2,
		OnShip                = 3,
		AtSinkLocation        = 4,
		AtMermaid             = 5,
		InBrig                = 6,
		InHideout             = 7,
		InContestTavern       = 8,
		AtProgressionLocation = 9,
		MAX                   = 10
	};

	/**
	 * Enum Athena.ESirenTridentProjectileState
	 */
	enum class ESirenTridentProjectileState : uint8_t
	{
		None   = 0,
		Small  = 1,
		Medium = 2,
		Large  = 3,
		MAX    = 4,
		MAX01  = 5
	};

	/**
	 * Enum Athena.EProjectileLauncherMechanismTargetMode
	 */
	enum class EProjectileLauncherMechanismTargetMode : uint8_t
	{
		TargetLocations    = 0,
		ShipsAndWatercraft = 1,
		MAX                = 2
	};

	/**
	 * Enum Athena.EDamageTargetType
	 */
	enum class EDamageTargetType : uint8_t
	{
		Player = 0,
		Ship   = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.EDiggingState
	 */
	enum class EDiggingState : uint8_t
	{
		Initial          = 0,
		BeingDug         = 1,
		WaitingForPickup = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.EDrunkennessType
	 */
	enum class EDrunkennessType : uint8_t
	{
		FromDrinkingAlcohol = 0,
		FromDrunkenChest    = 1,
		NumTypes            = 2,
		MAX                 = 3
	};

	/**
	 * Enum Athena.EConeWeightingMethod
	 */
	enum class EConeWeightingMethod : uint8_t
	{
		Weighted = 0,
		Absolute = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EShipHullDamageType
	 */
	enum class EShipHullDamageType : uint8_t
	{
		Landscape   = 0,
		RammingSpur = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EFogState
	 */
	enum class EFogState : uint8_t
	{
		NotSetUpYet     = 0,
		SetUp           = 1,
		FadingIn        = 2,
		Active          = 3,
		FadingOut       = 4,
		SeekingNewValue = 5,
		MAX             = 6
	};

	/**
	 * Enum Athena.EGlintCondition
	 */
	enum class EGlintCondition : uint8_t
	{
		OnShip                       = 0,
		Floating                     = 1,
		SpawnedAsSunkenSalvage       = 2,
		SpawnedAsTallTaleQuestItem   = 3,
		SpawnedAsTreasureVaultReward = 4,
		MAX                          = 5
	};

	/**
	 * Enum Athena.EHarpoonLauncherReelingState
	 */
	enum class EHarpoonLauncherReelingState : uint8_t
	{
		NotReeling    = 0,
		ReelingIn     = 1,
		ReelingLocked = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EHarpoonLauncherRetractReason
	 */
	enum class EHarpoonLauncherRetractReason : uint8_t
	{
		Default             = 0,
		PlayerInstigated    = 1,
		TetherLengthExeeded = 2,
		MAX                 = 3
	};

	/**
	 * Enum Athena.EHarpoonProjectileState
	 */
	enum class EHarpoonProjectileState : uint8_t
	{
		Docked   = 0,
		InFlight = 1,
		Attached = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EHoleState
	 */
	enum class EHoleState : uint8_t
	{
		Alive = 0,
		Dead  = 1,
		MAX   = 2
	};

	/**
	 * Enum Athena.ELeakEffectState
	 */
	enum class ELeakEffectState : uint8_t
	{
		Off                   = 0,
		LeakingWater          = 1,
		LeakingWaterPlugged   = 2,
		LeakingBubbles        = 3,
		LeakingBubblesPlugged = 4,
		MAX                   = 5
	};

	/**
	 * Enum Athena.ELeakState
	 */
	enum class ELeakState : uint8_t
	{
		Open    = 0,
		Plugged = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EShipLeakerUpdateType
	 */
	enum class EShipLeakerUpdateType : uint8_t
	{
		Iterative = 0,
		ForceAll  = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EVaultAudioSettings
	 */
	enum class EVaultAudioSettings : uint8_t
	{
		Default       = 0,
		NoWater       = 1,
		NoMusic       = 2,
		TreasureVault = 3,
		MAX           = 4
	};

	/**
	 * Enum Athena.EInventoryManipulatorAutoEquipPolicy
	 */
	enum class EInventoryManipulatorAutoEquipPolicy : uint8_t
	{
		LastIn                     = 0,
		MatchingItemDescIfPossible = 1,
		RawMeatLast                = 2,
		MAX                        = 3
	};

	/**
	 * Enum Athena.EActionQueueEntryStatus
	 */
	enum class EActionQueueEntryStatus : uint8_t
	{
		Unset     = 0,
		Set       = 1,
		Playing   = 2,
		Completed = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EProjectileSpawnedState
	 */
	enum class EProjectileSpawnedState : uint8_t
	{
		NotSpawned = 0,
		Spawned    = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.ELightningHitTarget
	 */
	enum class ELightningHitTarget : uint8_t
	{
		RandomLocation         = 0,
		Player                 = 1,
		NearPlayer             = 2,
		Ship                   = 3,
		ShipNearMiss           = 4,
		HighPriorityPlayer     = 5,
		EnemyGhostShip         = 6,
		EnemyGhostShipNearMiss = 7,
		Total                  = 8,
		MAX                    = 9
	};

	/**
	 * Enum Athena.ELoadoutPersistence
	 */
	enum class ELoadoutPersistence : uint8_t
	{
		Temporary  = 0,
		Persistent = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.ELPVAdaptationType
	 */
	enum class ELPVAdaptationType : uint8_t
	{
		Full           = 0,
		CutTranslation = 1,
		None           = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EForceBillowingState
	 */
	enum class EForceBillowingState : uint8_t
	{
		NoOverride         = 0,
		ForceFullyBillowed = 1,
		ForceNoBillow      = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.EPlayerAbandonedReason
	 */
	enum class EPlayerAbandonedReason : uint8_t
	{
		None                    = 0,
		NoCrewShip              = 1,
		FarFromShipAndOnLand    = 2,
		FarFromShipInWater      = 3,
		OnShip                  = 4,
		CloseEnoughToCrewShip   = 5,
		OnWatercraft            = 6,
		CloseEnoughToWatercraft = 7,
		InTheDeepSea            = 8,
		MAX                     = 9
	};

	/**
	 * Enum Athena.EPlayerAbandoned
	 */
	enum class EPlayerAbandoned : uint8_t
	{
		Yes      = 0,
		No       = 1,
		DontKnow = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EWalletBalanceStatus
	 */
	enum class EWalletBalanceStatus : uint8_t
	{
		Unknown = 0,
		Valid   = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EOverlapShapeType
	 */
	enum class EOverlapShapeType : uint8_t
	{
		Mesh = 0,
		Box  = 1,
		MAX  = 2
	};

	/**
	 * Enum Athena.EMusicalTriggerState
	 */
	enum class EMusicalTriggerState : uint8_t
	{
		NotActive                    = 0,
		PreparingToActivateMechanism = 1,
		MechanismActivated           = 2,
		MAX                          = 3
	};

	/**
	 * Enum Athena.ENonVerbalRadialCategory
	 */
	enum class ENonVerbalRadialCategory : uint8_t
	{
		QuickAccess      = 0,
		Strategy         = 1,
		WieldedItem      = 2,
		ControlledObject = 3,
		Invalid          = 4,
		MAX              = 5
	};

	/**
	 * Enum Athena.ENPCIdleVariantType
	 */
	enum class ENPCIdleVariantType : uint8_t
	{
		Standard = 0,
		Inactive = 1,
		Interact = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.ETutorialDialogOption
	 */
	enum class ETutorialDialogOption : uint8_t
	{
		None                                      = 0,
		ReturnToStrangerCompanyVoyageDialogOption = 1,
		ReturnToStrangerTallTaleDialogOption      = 2,
		ReturnToStrangerGoItAloneDialogOption     = 3,
		MAX                                       = 4
	};

	/**
	 * Enum Athena.ETutorialDialogStep
	 */
	enum class ETutorialDialogStep : uint8_t
	{
		None                                = 0,
		StartedTalkedToMysteriousStranger   = 1,
		FinishedTalkingToMysteriousStranger = 2,
		MAX                                 = 3
	};

	/**
	 * Enum Athena.EPiratePreviewSkeletonCurseMode
	 */
	enum class EPiratePreviewSkeletonCurseMode : uint8_t
	{
		KeepPirateAsIs           = 0,
		ForceRemoveSkeletonCurse = 1,
		ForceApplySkeletonCurse  = 2,
		MAX                      = 3
	};

	/**
	 * Enum Athena.EStartGameNarrativeMediaSize
	 */
	enum class EStartGameNarrativeMediaSize : uint8_t
	{
		Undefined = 0,
		Default   = 1,
		LargeWide = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EStartGameNarrativePositionY
	 */
	enum class EStartGameNarrativePositionY : uint8_t
	{
		Undefined = 0,
		Top       = 1,
		Middle    = 2,
		Bottom    = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EStartGameNarrativePositionX
	 */
	enum class EStartGameNarrativePositionX : uint8_t
	{
		Undefined = 0,
		Left      = 1,
		Middle    = 2,
		Right     = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EMockShipConnectionPartType
	 */
	enum class EMockShipConnectionPartType : uint8_t
	{
		HoistToMast = 0,
		AngleToMast = 1,
		Total       = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EPLSectionType
	 */
	enum class EPLSectionType : uint8_t
	{
		Module = 0,
		Link   = 1,
		Count  = 2,
		MAX    = 3
	};

	/**
	 * Enum Athena.EPiratePreviewRTTState
	 */
	enum class EPiratePreviewRTTState : uint8_t
	{
		Uninitialized    = 0,
		Busy             = 1,
		ReadyToCapture   = 2,
		CompletedCapture = 3,
		MAX              = 4
	};

	/**
	 * Enum Athena.ECompanyStatus
	 */
	enum class ECompanyStatus : uint8_t
	{
		Invalid = 0,
		Pending = 1,
		Valid   = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EPlayerCurseTag
	 */
	enum class EPlayerCurseTag : uint8_t
	{
		None     = 0,
		Limping  = 1,
		Poisoned = 2,
		Drunk    = 3,
		Silenced = 4,
		Dancing  = 5,
		Sleeping = 6,
		Vomit    = 7,
		MAX      = 8
	};

	/**
	 * Enum Athena.ERefreshEntitlementBehaviour
	 */
	enum class ERefreshEntitlementBehaviour : uint8_t
	{
		TryUsingCachedServicesEntitlements = 0,
		FullRefresh                        = 1,
		MAX                                = 2
	};

	/**
	 * Enum Athena.EPlayerHeroStatsSuccess
	 */
	enum class EPlayerHeroStatsSuccess : uint8_t
	{
		Success                     = 0,
		Success_Zero                = 1,
		NotAutonomousProxy          = 2,
		NoLocalUser                 = 3,
		PlayerIdInvalid             = 4,
		NoClientData                = 5,
		StartOfSessionValueNotSet   = 6,
		NoServerData                = 7,
		NoHeroStatData              = 8,
		OnlineStatsPtrNull          = 9,
		OnlineStats_UnknownError    = 10,
		OnlineStats_InvalidStatId   = 11,
		OnlineStats_InvalidArgument = 12,
		OnlineStats_InvalidUser     = 13,
		MAX                         = 14
	};

	/**
	 * Enum Athena.EPremiumCatalogOfferType
	 */
	enum class EPremiumCatalogOfferType : uint8_t
	{
		Undefined = 0,
		Tab       = 1,
		BundleSet = 2,
		ItemSet   = 3,
		Cards     = 4,
		Item      = 5,
		Offer     = 6,
		MAX       = 7
	};

	/**
	 * Enum Athena.ECatalogOfferAvailability
	 */
	enum class ECatalogOfferAvailability : uint8_t
	{
		Available    = 0,
		AlreadyOwned = 1,
		Locked       = 2,
		Info         = 3,
		Hide         = 4,
		Unaffordable = 5,
		MAX          = 6
	};

	/**
	 * Enum Athena.EPremiumStoreLandingPageItemType
	 */
	enum class EPremiumStoreLandingPageItemType : uint8_t
	{
		Bundle = 0,
		Set    = 1,
		Cards  = 2,
		Item   = 3,
		MAX    = 4
	};

	/**
	 * Enum Athena.EProjectileLauncherMechanismMode
	 */
	enum class EProjectileLauncherMechanismMode : uint8_t
	{
		OneShot    = 0,
		Continuous = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EProjectileWeaponFireType
	 */
	enum class EProjectileWeaponFireType : uint8_t
	{
		Aiming  = 0,
		HipFire = 1,
		MAX     = 2,
		MAX01   = 3
	};

	/**
	 * Enum Athena.EProjectileWeaponType
	 */
	enum class EProjectileWeaponType : uint8_t
	{
		Pistol      = 0,
		Blunderbuss = 1,
		EyeOfReach  = 2,
		MAX         = 3,
		MAX01       = 4
	};

	/**
	 * Enum Athena.EProjectileWeaponState
	 */
	enum class EProjectileWeaponState : uint8_t
	{
		Equipping         = 0,
		Idle              = 1,
		Aiming            = 2,
		Recoil            = 3,
		Reloading         = 4,
		InterruptedReload = 5,
		MAX               = 6
	};

	/**
	 * Enum Athena.EPuzzleStatueActivatedMechanismType
	 */
	enum class EPuzzleStatueActivatedMechanismType : uint8_t
	{
		Generic        = 0,
		WaterLevelUp   = 1,
		WaterLevelDown = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EReactionSequenceState
	 */
	enum class EReactionSequenceState : uint8_t
	{
		None                      = 0,
		BeginSuccessfulSequence   = 1,
		BeginUnsuccessfulSequence = 2,
		EndSuccessfulSequence     = 3,
		EndUnsuccessfulSequence   = 4,
		Reset                     = 5,
		Cancelled                 = 6,
		MAX                       = 7,
		MAX01                     = 8
	};

	/**
	 * Enum Athena.EAllocationStrategy
	 */
	enum class EAllocationStrategy : uint8_t
	{
		Normal       = 0,
		LowPriority  = 1,
		NonAllocated = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.EShadowAIFormState
	 */
	enum class EShadowAIFormState : uint8_t
	{
		Invalid = 0,
		Light   = 1,
		Dark    = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EShipBuilderState
	 */
	enum class EShipBuilderState : uint8_t
	{
		Idle             = 0,
		LoadingTemplate  = 1,
		CustomizingParts = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.EShipBuilderErrorCode
	 */
	enum class EShipBuilderErrorCode : uint8_t
	{
		AlreadyInProgress       = 0,
		AssetLoadingFailure     = 1,
		FailedToSpawnActor      = 2,
		FailedToBuildParts      = 3,
		InvalidParameter        = 4,
		InvalidShipDesc         = 5,
		Cancelled               = 6,
		SpawnedActorWasNotAShip = 7,
		MAX                     = 8
	};

	/**
	 * Enum Athena.EShipParticleParam
	 */
	enum class EShipParticleParam : uint8_t
	{
		None       = 0,
		DeckWater  = 1,
		FloodLevel = 2,
		Total      = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EPurchaseRequestFailureReason
	 */
	enum class EPurchaseRequestFailureReason : uint8_t
	{
		ServiceUnavailable     = 0,
		OfferUnavailable       = 1,
		InsufficientFunds      = 2,
		RequestTimeout         = 3,
		PurchaseAlreadyPending = 4,
		MAX                    = 5
	};

	/**
	 * Enum Athena.EShovelState
	 */
	enum class EShovelState : uint8_t
	{
		Idle     = 0,
		Exhuming = 1,
		Burying  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EAthenaSafeZoneEnum
	 */
	enum class EAthenaSafeZoneEnum : uint8_t
	{
		NONE                 = 0,
		MAINWORLD_SAFEZONE   = 1,
		TRIBUTEPEAK_SAFEZONE = 2,
		MAX                  = 3
	};

	/**
	 * Enum Athena.EShroudBreakerActivationStateEnum
	 */
	enum class EShroudBreakerActivationStateEnum : uint8_t
	{
		DEACTIVE = 0,
		STAGE    = 1,
		STAGE01  = 2,
		STAGE02  = 3,
		STAGE03  = 4,
		MAX      = 5
	};

	/**
	 * Enum Athena.EDoorState
	 */
	enum class EDoorState : uint8_t
	{
		Closed    = 0,
		Triggered = 1,
		Opening   = 2,
		Open      = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.ESkellyFortType
	 */
	enum class ESkellyFortType : uint8_t
	{
		Default = 0,
		Damned  = 1,
		Max     = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EDamnedFortAudioState
	 */
	enum class EDamnedFortAudioState : uint8_t
	{
		Inactive               = 0,
		BattleMusic            = 1,
		BattleMusicWithCaptain = 2,
		Finished               = 3,
		MAX                    = 4,
		MAX01                  = 5
	};

	/**
	 * Enum Athena.EStaggerReason
	 */
	enum class EStaggerReason : uint8_t
	{
		Drunk      = 0,
		Earthquake = 1,
		NumReasons = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EStunnedActionStateItemWielding
	 */
	enum class EStunnedActionStateItemWielding : uint8_t
	{
		Allowed    = 0,
		Disallowed = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EStunnedActionStateDurationType
	 */
	enum class EStunnedActionStateDurationType : uint8_t
	{
		Definite   = 0,
		Indefinite = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.ERitualState
	 */
	enum class ERitualState : uint8_t
	{
		Disabled  = 0,
		PrePrimed = 1,
		Primed    = 2,
		Stopped   = 3,
		Started   = 4,
		Complete  = 5,
		MAX       = 6
	};

	/**
	 * Enum Athena.ESwimmingCreatureType
	 */
	enum class ESwimmingCreatureType : uint8_t
	{
		SwimmingCreature = 0,
		Shark            = 1,
		TinyShark        = 2,
		Siren            = 3,
		MAX              = 4
	};

	/**
	 * Enum Athena.ESelectionPolicy
	 */
	enum class ESelectionPolicy : uint8_t
	{
		Random  = 0,
		Closest = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EAISpawnerShutdownPolicy
	 */
	enum class EAISpawnerShutdownPolicy : uint8_t
	{
		SpawnerShutsDownWhenPlayersNoLongerTracked = 0,
		SpawnerShutsDownWhenStepEnd                = 1,
		MAX                                        = 2
	};

	/**
	 * Enum Athena.EAILifeTimePolicy
	 */
	enum class EAILifeTimePolicy : uint8_t
	{
		SpawnWhenVoyageParticipantsEnterDespawnWhenAllLeave                   = 0,
		SpawnWhenVoyageParticipantsEnterDespawnWhenAllVoyageParticipantsLeave = 1,
		SpawnWhenAnyEnterDespawnWhenAllLeave                                  = 2,
		MAX                                                                   = 3
	};

	/**
	 * Enum Athena.EStepsTriggerState
	 */
	enum class EStepsTriggerState : uint8_t
	{
		Closed  = 0,
		Opening = 1,
		Open    = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.ETinVoyageDifficulty
	 */
	enum class ETinVoyageDifficulty : uint8_t
	{
		Easy   = 0,
		Medium = 1,
		Hard   = 2,
		MAX    = 3
	};

	/**
	 * Enum Athena.ETreasureRoomState
	 */
	enum class ETreasureRoomState : uint8_t
	{
		Inactive   = 0,
		Waiting    = 1,
		Combat     = 2,
		CombatOver = 3,
		Aftermath  = 4,
		MAX        = 5
	};

	/**
	 * Enum Athena.EItemSpawnType
	 */
	enum class EItemSpawnType : uint8_t
	{
		None          = 0,
		Scaffolding   = 1,
		Reward        = 2,
		PressurePlate = 3,
		MAX           = 4
	};

	/**
	 * Enum Athena.EContestType
	 */
	enum class EContestType : uint8_t
	{
		Race  = 0,
		PVP   = 1,
		PVQ   = 2,
		MAX   = 3,
		MAX01 = 4
	};

	/**
	 * Enum Athena.EMatchmakingServerType
	 */
	enum class EMatchmakingServerType : uint8_t
	{
		Adventure = 0,
		Contest   = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EMurkWaterModifierZoneState
	 */
	enum class EMurkWaterModifierZoneState : uint8_t
	{
		Active       = 0,
		Inactive     = 1,
		Activating   = 2,
		Deactivating = 3,
		MAX          = 4
	};

	/**
	 * Enum Athena.EWeepingState
	 */
	enum class EWeepingState : uint8_t
	{
		Weeping = 0,
		Calm    = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EWheelFractureLabel
	 */
	enum class EWheelFractureLabel : uint8_t
	{
		West  = 0,
		East  = 1,
		South = 2,
		MAX   = 3
	};

	/**
	 * Enum Athena.EAudioGameState
	 */
	enum class EAudioGameState : uint8_t
	{
		None                      = 0,
		InGame                    = 1,
		InFrontendWrapper         = 2,
		InFrontendMatineeSequence = 3,
		MAX                       = 4
	};

	/**
	 * Enum Athena.ELocalGameChatStatus
	 */
	enum class ELocalGameChatStatus : uint8_t
	{
		Undefined       = 0,
		NoMicrophone    = 1,
		MicrophoneMuted = 2,
		InPartyChat     = 3,
		Ready           = 4,
		MAX             = 5
	};

	/**
	 * Enum Athena.EVoiceChatAudioDevice
	 */
	enum class EVoiceChatAudioDevice : uint8_t
	{
		None    = 0,
		Headset = 1,
		Kinect  = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EBootflowError
	 */
	enum class EBootflowError : uint8_t
	{
		None                                                     = 0,
		Unknown                                                  = 1,
		AthenaGameInstanceFailedToConnectToServer                = 2,
		AthenaGameInstanceActiveConnectionToServerLost           = 3,
		AthenaGameInstanceActiveConnectionToServerTimedOut       = 4,
		AthenaGameInstanceInitialConnectionToServerTimedOut      = 5,
		AthenaGameInstancePendingConnectionToServerTimedOut      = 6,
		AthenaGameInstancePendingConnectionToServerLost          = 7,
		AthenaGameInstanceGameVersionMismatch                    = 8,
		AthenaGameInstanceGenericDisconnectMessage               = 9,
		AthenaGameInstanceNetDriverFailure                       = 10,
		AthenaGameInstanceInvalidFeatureConfig                   = 11,
		AthenaGameInstanceRPCSpamDetected                        = 12,
		AthenaGameInstancePlayerDeemedInactive                   = 13,
		AthenaGameInstanceInvalidServerURL                       = 14,
		AthenaGameInstanceGameAssetMismatch                      = 15,
		AthenaGameInstanceGenericTravelError                     = 16,
		AthenaGameInstanceCrewMigrationRequested                 = 17,
		AthenaGameInstanceCrewSessionLost                        = 18,
		AthenaGameInstanceServerShuttingDown                     = 19,
		ClientBootflowPrimaryPlayerSignedOut                     = 20,
		ClientBootflowPlayerSuspendedGame                        = 21,
		ClientBootflowLostConnectionToXboxLive                   = 22,
		ClientBootflowEthernetConnectionUnplugged                = 23,
		ClientEvicted                                            = 24,
		ClientInGameStateWasIdleForTooLong                       = 25,
		ClientInGameStateUnableToFindLocalUserId                 = 26,
		ClientInGameStateUnableToObtainLocalPlayerInterface      = 27,
		ClientInGameStateStopMatchmakingFailed                   = 28,
		ClientJoinServerStateFailed                              = 29,
		CrewMatchmakingStateLocalUserHasInvalidId                = 30,
		CrewMatchmakingStateUnableToObtainLocalUserId            = 31,
		CrewMatchmakingStateUnableToObtainLocalPlayerInterface   = 32,
		CrewMatchmakingStateMatchmakingFailed                    = 33,
		CrewSessionStateUnableToObtainLocalUserId                = 34,
		CrewSessionStateUnableToObtainLocalPlayerInterface       = 35,
		CrewSessionStateFailedToCreateCrewSession                = 36,
		CrewSessionOnSessionLost                                 = 37,
		DiscoveryServiceStateRequestFailedNotAuthorized          = 38,
		DiscoveryServiceStateRequestFailed                       = 39,
		EmblemDefinitionRetrievalFailed                          = 40,
		EngageStateInviteHadInvalidControllerId                  = 41,
		EngageStateNoLocalPlayerFound                            = 42,
		EntryLevelStateFailedToLoadDefaultMap                    = 43,
		EntryLevelStateFailed                                    = 44,
		LoadLevelStateTimeout                                    = 45,
		LoadLevelStateFailed                                     = 46,
		LoadUserSettingsStateFailed                              = 47,
		LoginTokenExchangePlayerFailedFlightingCheck             = 48,
		LoginTokenExchangePlayerFailedOtherTitleCheck            = 49,
		LoginTokenExchangeFailed                                 = 50,
		LoginTokenExchangeFailedPlayerBannedPerm                 = 51,
		LoginTokenExchangeFailedPlayerBannedTemp                 = 52,
		LoginTokenExchangeFailedSteamError                       = 53,
		LoginTokenExchangeFailedSteamIncorrectAppToken           = 54,
		LoginTokenExchangeFailedSteamTokenInvalid                = 55,
		LoginTokenExchangeFailedSteamUnlicensed                  = 56,
		LoginTokenExchangeFailedSteamMissingXuid                 = 57,
		LoginTokenExchangeFailedSteamBadApiResponse              = 58,
		LoginTokenExchangeFailedSteamUnreachableEndpoint         = 59,
		LoginTokenExchangeFailedTitleVersionInvalid              = 60,
		SelectUserStateFailedToShowSignInUI                      = 61,
		SelectUserStateFailedToObtainValidControllerId           = 62,
		SelectUserStateFailedToObtainValidLocalPlayer            = 63,
		SelectUserStateNotConnectedToLive                        = 64,
		SelectUserStateNotSignedInWhileUnattended                = 65,
		SelectUserStateUserDoesNotHaveUniqueNetId                = 66,
		SelectUserStateUserDidNotSignIn                          = 67,
		SelectUserStateUserIsGuest                               = 68,
		SelectUserStateInsufficientPrivilegesToPlay              = 69,
		SelectUserStateInvalidIdentityInterface                  = 70,
		ServerMatchmakingStateSandboxDisabled                    = 71,
		ServerMatchmakingStateUnableToObtainCrewId               = 72,
		ServerMatchmakingStateUnableToObtainLocalPlayerInterface = 73,
		ServerMatchmakingStateInvalidPirateIdentity              = 74,
		ServerMatchmakingStateNoServersAvailable                 = 75,
		ServerMatchmakingStateInvalidMatchmakingResponse         = 76,
		ServerMatchmakingStateInvalidResponse                    = 77,
		ServerMatchmakingStateMatchmakingTimedOut                = 78,
		ServerMatchmakingStateUnexpectedResult                   = 79,
		ServerMatchmakingStateJoinRefused                        = 80,
		ServerMatchmakingStateUnsupportedVersion                 = 81,
		ServerAtMatchmakingCapacity                              = 82,
		ServerShuttingDownWhilstMigrationIsOngoing               = 83,
		SetupConfigurationServiceStateConfigServiceRequestFailed = 84,
		SetupCrewSessionStateFailedToJoinCrewSession             = 85,
		SetupCrewSessionStateFailedToCreateCrewSession           = 86,
		SetupServiceBridgeStateFailed                            = 87,
		SetupTelemetryDispatcherStateFailed                      = 88,
		CrewSessionHandlerJoinFailedAsCrewIsFull                 = 89,
		CrewSessionHandlerJoinFailedAsCrewDoesntExist            = 90,
		CrewSessionHandlerJoinFailedAsCouldNotRetrieveAddress    = 91,
		CrewSessionHandlerJoinFailedAsUnknownErrorOccurred       = 92,
		PirateSelectionStateUnableToObtainLocalPlayerInterface   = 93,
		PirateSelectionStateUnableToRetrievePirates              = 94,
		PirateSelectionStateUnableToCreatePirate                 = 95,
		PirateSelectionStateUnableToReRollPirate                 = 96,
		SessionSelectInvalidSessionTypeSpecified                 = 97,
		InvitePrivilegesCheckFailed                              = 98,
		InviteUnableToRetrieveSession                            = 99,
		InviteSessionXboxPadOnly                                 = 100,
		InviteSessionNoBannedData                                = 101,
		InviteSessionFull                                        = 102,
		InviteSessionUnknownFailure                              = 103,
		InviteSessionNoTransferHandle                            = 104,
		InviteSessionUnableToFindTargetSession                   = 105,
		InviteSessionIsNotJoinable                               = 106,
		FailedToEnumerateEntitlements                            = 107,
		WhatsNewArticleRetrievalStateInvalidIdentityInterface    = 108,
		FailedToFetchExistingSessions                            = 109,
		FailedToDisconnectFromServiceBridge                      = 110,
		LobbySesssionHandlerFailedToCreateLobbySession           = 111,
		LobbySesssionHandlerFailedToJoinLobbySession             = 112,
		LobbySessionHandlerJoinFailedAsUnknownErrorOccurred      = 113,
		LobbySessionHandlerJoinFailedAsCouldNotRetrieveAddress   = 114,
		LobbySessionHandlerJoinFailedAsSessionIsFull             = 115,
		LobbySessionHandlerJoinFailedAsSessionDoesntExist        = 116,
		LobbySessionInviteIsNotJoinable                          = 117,
		CreatorModeSessionStateFailedToCreateLobbySession        = 118,
		CreatorModeSessionStateFailedToJoinLobbySession          = 119,
		CreatorModeSessionStateFailedToAdoptCrewSession          = 120,
		CreatorModeSessionStateFailedToLeaveLobbySession         = 121,
		CreatorModeSessionStateFailedToRegisterCrewsOnService    = 122,
		CreatorModeSessionStateFailedToReplicateCrewsFromService = 123,
		LobbySessionCrewlessPlayer                               = 124,
		StampSwapDiscoveryRequestFailed                          = 125,
		StampSwapDiscoveryRequestFailedNotAuthorized             = 126,
		StampSwapLoginTokenExchangeFailed                        = 127,
		StampSwapLoginTokenExchangeFailedPlayerBannedPerm        = 128,
		StampSwapLoginTokenExchangeFailedPlayerBannedTemp        = 129,
		StampSwapLoginTokenExchangeFailedSteamError              = 130,
		StampSwapLoginTokenExchangeFailedSteamIncorrectAppToken  = 131,
		StampSwapLoginTokenExchangeFailedSteamTokenInvalid       = 132,
		StampSwapLoginTokenExchangeFailedSteamUnlicensed         = 133,
		StampSwapLoginTokenExchangeFailedTitleVersionInvalid     = 134,
		StampSwapLoginTokenExchangePlayerFailedFlightingCheck    = 135,
		StampSwapLoginTokenExchangePlayerFailedOtherTitleCheck   = 136,
		StampSwapSetupServiceBridgeFailed                        = 137,
		StampSwapFailedToDisconnectFromServiceBridge             = 138,
		LoginTokenExchangeFailedUWPLicenseMissing                = 139,
		LoginTokenExchangeFailedUWPInvalidLicense                = 140,
		LoginTokenExchangeFailedUWPReplayLicense                 = 141,
		LoginTokenExchangeFailedUWPInvalidLicenseCertificate     = 142,
		LoginTokenExchangeFailedUWPNoSuitableProductLicense      = 143,
		LoginTokenExchangeFailedUWPMissingSandboxClaim           = 144,
		LoginTokenExchangeFailedClockSkew                        = 145,
		LoginTokenExchangeFailedInvalidDeviceType                = 146,
		TestFailed                                               = 147,
		TestNetworkError                                         = 148,
		Max                                                      = 149,
		MAX                                                      = 150
	};

	/**
	 * Enum Athena.EBootflowErrorPriority
	 */
	enum class EBootflowErrorPriority : uint8_t
	{
		High        = 0,
		AboveNormal = 1,
		Normal      = 2,
		BelowNormal = 3,
		Low         = 4,
		MAX         = 5
	};

	/**
	 * Enum Athena.ECreativeLobbyState
	 */
	enum class ECreativeLobbyState : uint8_t
	{
		Open           = 0,
		ReadyToSetSail = 1,
		Count          = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.ECreationMode
	 */
	enum class ECreationMode : uint8_t
	{
		Invalid = 0,
		Create  = 1,
		Join    = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EStoreAsyncResult
	 */
	enum class EStoreAsyncResult : uint8_t
	{
		Unknown                                       = 0,
		GetAccessTokenInvalidHttpRequest              = 1,
		GetAccessTokenTimeout                         = 2,
		GetAccessTokenCancelled                       = 3,
		GetAccessTokenFailure                         = 4,
		GetPurchaseRedemptionTokenInterfaceInvalid    = 5,
		GetPurchaseRedemptionTokenOnlineStoreFailure  = 6,
		GetPurchaseRedemptionTokenFailure             = 7,
		PostPurchaseRedemptionTokenInvalidHttpRequest = 8,
		PostPurchaseRedemptionTokenCancelled          = 9,
		PostPurchaseRedemptionTokenTimeout            = 10,
		PostPurchaseRedemptionTokenFailure            = 11,
		Success                                       = 12,
		MAX                                           = 13
	};

	/**
	 * Enum Athena.EWaitForLoadingScreenSubState
	 */
	enum class EWaitForLoadingScreenSubState : uint8_t
	{
		Invalid                               = 0,
		CacheLoadingScreenDataAssetParams     = 1,
		CacheLoadingScreenLoadingScreenParams = 2,
		CacheLoadingScreenContent             = 3,
		Complete                              = 4,
		MAX                                   = 5
	};

	/**
	 * Enum Athena.EStreamingPlatform
	 */
	enum class EStreamingPlatform : uint8_t
	{
		Twitch  = 0,
		Mixer   = 1,
		YouTube = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EWaterPuzzleAlterationEndingState
	 */
	enum class EWaterPuzzleAlterationEndingState : uint8_t
	{
		Invalid  = 0,
		Normal   = 1,
		MaxToMax = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EMeleeAttackMoveCorrectionReason
	 */
	enum class EMeleeAttackMoveCorrectionReason : uint8_t
	{
		NotSpecified  = 0,
		SpedUpTooSoon = 1,
		MAX           = 2
	};

	/**
	 * Enum Athena.EInteractableOverlayActionType
	 */
	enum class EInteractableOverlayActionType : uint8_t
	{
		None     = 0,
		Activate = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EServerTeleportAckReason
	 */
	enum class EServerTeleportAckReason : uint8_t
	{
		Invalid  = 0,
		Complete = 1,
		Timeout  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EVirtualKeyboardInputScope
	 */
	enum class EVirtualKeyboardInputScope : uint8_t
	{
		Alphanumeric    = 0,
		Default         = 1,
		Email           = 2,
		Number          = 3,
		Password        = 4,
		Search          = 5,
		TelephoneNumber = 6,
		Url             = 7,
		MAX             = 8
	};

	/**
	 * Enum Athena.EReputationNavigationAction
	 */
	enum class EReputationNavigationAction : uint8_t
	{
		Company       = 0,
		Commendations = 1,
		Ledger        = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EServerCameraFadeAckReason
	 */
	enum class EServerCameraFadeAckReason : uint8_t
	{
		Invalid  = 0,
		Complete = 1,
		Timeout  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EConsumeEntitlementFailureReason
	 */
	enum class EConsumeEntitlementFailureReason : uint8_t
	{
		ServiceUnavailable = 0,
		ItemNotFound       = 1,
		RequestTimeout     = 2,
		PreconditionFailed = 3,
		Unknown            = 4,
		MAX                = 5
	};

	/**
	 * Enum Athena.EQuestGenAssetSuffix
	 */
	enum class EQuestGenAssetSuffix : uint8_t
	{
		Default     = 0,
		Underground = 1,
		AISpawn     = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EPurchaseOfferFailureReason
	 */
	enum class EPurchaseOfferFailureReason : uint8_t
	{
		ServiceUnavailable = 0,
		OfferUnavailable   = 1,
		InsufficientFunds  = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.EHttpRequestTelemetryResult
	 */
	enum class EHttpRequestTelemetryResult : uint8_t
	{
		None      = 0,
		Completed = 1,
		Failed    = 2,
		Cancelled = 3,
		Aborted   = 4,
		MAX       = 5
	};

	/**
	 * Enum Athena.EServerMatchmakingFailureReason
	 */
	enum class EServerMatchmakingFailureReason : uint8_t
	{
		NoServersAvailable              = 0,
		CrewServerRequestBeingProcessed = 1,
		CrewBeingMigrated               = 2,
		SandboxDisabled                 = 3,
		MAX                             = 4
	};

	/**
	 * Enum Athena.EStoreRemoteServiceFutureStatus
	 */
	enum class EStoreRemoteServiceFutureStatus : uint8_t
	{
		Unknown    = 0,
		NotStarted = 1,
		Failed     = 2,
		Succeeded  = 3,
		Cancelled  = 4,
		TimedOut   = 5,
		MAX        = 6
	};

	/**
	 * Enum Athena.EServerEnvironmentShutdownStatus
	 */
	enum class EServerEnvironmentShutdownStatus : uint8_t
	{
		NotSet     = 0,
		Starting   = 1,
		StandingBy = 2,
		Active     = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EPreLoginDeniedReason
	 */
	enum class EPreLoginDeniedReason : uint8_t
	{
		None                  = 0,
		PirateRetreival       = 1,
		EntitlementsRetrieval = 2,
		MPSDValidation        = 3,
		CrewNoLongerOnServer  = 4,
		CrewAssignmentFailed  = 5,
		AuthTokenValidation   = 6,
		UWPJoinAttemptRefusal = 7,
		MAX                   = 8
	};

	/**
	 * Enum Athena.EFriendStatus
	 */
	enum class EFriendStatus : uint8_t
	{
		None    = 0,
		Online  = 1,
		Offline = 2,
		Away    = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.ESlidingDoorDirection
	 */
	enum class ESlidingDoorDirection : uint8_t
	{
		Up      = 0,
		Down    = 1,
		Forward = 2,
		Back    = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.ESlidingDoorState
	 */
	enum class ESlidingDoorState : uint8_t
	{
		Closing = 0,
		Closed  = 1,
		Opening = 2,
		Open    = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.ESwingDoorState
	 */
	enum class ESwingDoorState : uint8_t
	{
		Closing = 0,
		Closed  = 1,
		Opening = 2,
		Open    = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.ENPCOnSurfaceDespawnReason
	 */
	enum class ENPCOnSurfaceDespawnReason : uint8_t
	{
		PlayersLeftShip           = 0,
		ShipSinking               = 1,
		ChangingLocation          = 2,
		CurrentLocationUnderWater = 3,
		ChangingState             = 4,
		Hiding                    = 5,
		ManningCannon             = 6,
		CurrentLocationOnFire     = 7,
		BeingPermanentlyDestroyed = 8,
		MAX                       = 9
	};

	/**
	 * Enum Athena.ENPCOnSurfaceFloodedLevel
	 */
	enum class ENPCOnSurfaceFloodedLevel : uint8_t
	{
		Empty            = 0,
		LowerDeckFlooded = 1,
		MidDeckFlooded   = 2,
		Sunk             = 3,
		MAX              = 4
	};

	/**
	 * Enum Athena.EOpenableItemState
	 */
	enum class EOpenableItemState : uint8_t
	{
		Open   = 0,
		Closed = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.ETradeRouteMapTextIdentifier
	 */
	enum class ETradeRouteMapTextIdentifier : uint8_t
	{
		Misc        = 0,
		Vessel      = 1,
		Origin      = 2,
		Destination = 3,
		MAX         = 4
	};

	/**
	 * Enum Athena.ELoadPersistance
	 */
	enum class ELoadPersistance : uint8_t
	{
		Permanent    = 0,
		FrontEndOnly = 1,
		CallbackOnly = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.EDelayLoadPhase
	 */
	enum class EDelayLoadPhase : uint8_t
	{
		Boot                   = 0,
		FeatureConfigAvailable = 1,
		FrontEnd               = 2,
		EngageState            = 3,
		PreloadGame            = 4,
		InGame                 = 5,
		Count                  = 6,
		MAX                    = 7
	};

	/**
	 * Enum Athena.ETelemetryPlatformId
	 */
	enum class ETelemetryPlatformId : uint8_t
	{
		Undefined = 0,
		Aoelus    = 1,
		Xbox      = 2,
		Windows   = 3,
		SteamDeck = 4,
		DevPC     = 5,
		MAX       = 6
	};

	/**
	 * Enum Athena.ERequestEntitlementBehaviour
	 */
	enum class ERequestEntitlementBehaviour : uint8_t
	{
		Default      = 0,
		ForceRefresh = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EEntitlementConsumptionState
	 */
	enum class EEntitlementConsumptionState : uint8_t
	{
		Failed    = 0,
		Succeeded = 1,
		TimedOut  = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EEntitlementStatus
	 */
	enum class EEntitlementStatus : uint8_t
	{
		Unknown             = 0,
		Invalid             = 1,
		UsableButUnverified = 2,
		UsableAndVerfied    = 3,
		MAX                 = 4
	};

	/**
	 * Enum Athena.EProgressStyle
	 */
	enum class EProgressStyle : uint8_t
	{
		Circle       = 0,
		Square       = 1,
		Hexagon      = 2,
		Diamond      = 3,
		SeaDogs      = 4,
		HuntersCall  = 5,
		ReapersBones = 6,
		FactionG     = 7,
		FactionB     = 8,
		MAX          = 9
	};

	/**
	 * Enum Athena.EWieldAnimationGraph
	 */
	enum class EWieldAnimationGraph : uint8_t
	{
		ThirdPerson = 0,
		FirstPerson = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EWieldAnimationLocation
	 */
	enum class EWieldAnimationLocation : uint8_t
	{
		Left                        = 0,
		Right                       = 1,
		Floating                    = 2,
		LF_CAMERA_IK_HAND__Skeleton = 3,
		RT_CAMERA_IK_HAND__Skeleton = 4,
		LF_IK_HAND__Skeleton        = 5,
		RT_IK_HAND__Skeleton        = 6,
		Total                       = 7,
		MAX                         = 8
	};

	/**
	 * Enum Athena.ECharacterHitReactionAnimType
	 */
	enum class ECharacterHitReactionAnimType : uint8_t
	{
		Full     = 0,
		Flinch   = 1,
		None     = 2,
		Override = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.EFacialPriority
	 */
	enum class EFacialPriority : uint8_t
	{
		Low      = 0,
		Medium   = 1,
		High     = 2,
		MustPlay = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.ELocomotionType
	 */
	enum class ELocomotionType : uint8_t
	{
		Standard = 0,
		Limp     = 1,
		Drunk    = 2,
		PegLeg   = 3,
		Combat   = 4,
		HotCoals = 5,
		MAX      = 6,
		MAX01    = 7
	};

	/**
	 * Enum Athena.EStairAnimations
	 */
	enum class EStairAnimations : uint8_t
	{
		UpLeft    = 0,
		UpRight   = 1,
		DownLeft  = 2,
		DownRight = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EArmOverlayFlags
	 */
	enum class EArmOverlayFlags : uint8_t
	{
		RightArmOnly   = 0,
		FullBody       = 1,
		UpperBody      = 2,
		UpperBodyLeft  = 3,
		UpperBodyRight = 4,
		TwoHanded      = 5,
		MAX            = 6
	};

	/**
	 * Enum Athena.EInputControllerTypeRemote
	 */
	enum class EInputControllerTypeRemote : uint8_t
	{
		GamePad  = 0,
		Keyboard = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EInputControllerType
	 */
	enum class EInputControllerType : uint8_t
	{
		GamePad  = 0,
		Keyboard = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EAimSensitivitySettingCategory
	 */
	enum class EAimSensitivitySettingCategory : uint8_t
	{
		Invalid            = 0,
		Blunderbuss        = 1,
		Flintlock          = 2,
		EyeOfReach         = 3,
		Spyglass           = 4,
		TridentOfDarkTides = 5,
		MAX                = 6
	};

	/**
	 * Enum Athena.FPerformanceCounterOptions
	 */
	enum class EFPerformanceCounterOptions : uint8_t
	{
		FPerformanceCounterOptions_None                           = 0,
		FPerformanceCounterOptions_FPS                            = 1,
		FPerformanceCounterOptions_Ping                           = 2,
		FPerformanceCounterOptions_FPSAndPing                     = 3,
		FPerformanceCounterOptions_FPerformanceCounterOptions_MAX = 4
	};

	/**
	 * Enum Athena.FVsyncOptions
	 */
	enum class EFVsyncOptions : uint8_t
	{
		FVsyncOptions_Off               = 0,
		FVsyncOptions_On                = 1,
		FVsyncOptions_COUNT             = 2,
		FVsyncOptions_FVsyncOptions_MAX = 3
	};

	/**
	 * Enum Athena.FPersistentUserGameSettingsDetail
	 */
	enum class EFPersistentUserGameSettingsDetail : uint8_t
	{
		FPersistentUserGameSettingsDetail_Min                                   = 0,
		FPersistentUserGameSettingsDetail_Low                                   = 1,
		FPersistentUserGameSettingsDetail_Medium                                = 2,
		FPersistentUserGameSettingsDetail_High                                  = 3,
		FPersistentUserGameSettingsDetail_Ultra                                 = 4,
		FPersistentUserGameSettingsDetail_Recommended                           = 5,
		FPersistentUserGameSettingsDetail_COUNT                                 = 6,
		FPersistentUserGameSettingsDetail_FPersistentUserGameSettingsDetail_MAX = 7
	};

	/**
	 * Enum Athena.ESettingsChangeInstigator
	 */
	enum class ESettingsChangeInstigator : uint8_t
	{
		Player       = 0,
		Programmatic = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EBindingSet
	 */
	enum class EBindingSet : uint8_t
	{
		ActionBindings = 0,
		AxisBindings   = 1,
		MAX            = 2
	};

	/**
	 * Enum Athena.EGameSettingType
	 */
	enum class EGameSettingType : uint8_t
	{
		Bool    = 0,
		Float   = 1,
		Int     = 2,
		INVALID = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.EDitherFadeSetting
	 */
	enum class EDitherFadeSetting : uint8_t
	{
		FadeIn  = 0,
		FadeOut = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EFadeInOnStart
	 */
	enum class EFadeInOnStart : uint8_t
	{
		FadeIn  = 0,
		FadeOut = 1,
		None    = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.ELightTemplateType
	 */
	enum class ELightTemplateType : uint8_t
	{
		PointLight = 0,
		SpotLight  = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EServerAsyncLoadingAckReason
	 */
	enum class EServerAsyncLoadingAckReason : uint8_t
	{
		Invalid  = 0,
		Complete = 1,
		Timeout  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EConditionalStatType
	 */
	enum class EConditionalStatType : uint8_t
	{
		PlayerOnly                                    = 0,
		WholeCrew                                     = 1,
		WholeCrewButLegendsOnly                       = 2,
		CrewAndAlliance                               = 3,
		AllianceOnly                                  = 4,
		WholeCrewButOnlyThoseWearingTheSkeletonCurse  = 5,
		WholeCrewButOnlyThoseWearingTheGhostCurse     = 6,
		WholeCrewButOnlyThoseUnlockedTheSkeletonCurse = 7,
		WholeCrewButOnlyThoseUnlockedTheGhostCurse    = 8,
		AllPlayersWearingTheSkeletonCurseInRange      = 9,
		AllPlayersWearingTheGhostCurseInRange         = 10,
		MAX                                           = 11
	};

	/**
	 * Enum Athena.EStatConditionTarget
	 */
	enum class EStatConditionTarget : uint8_t
	{
		PlayerPawn        = 0,
		ObjectOfInterest  = 1,
		ObjectOfInterest2 = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.EAllPlayersStatShouldSendToOwner
	 */
	enum class EAllPlayersStatShouldSendToOwner : uint8_t
	{
		SendToOwner      = 0,
		DoNotSendToOwner = 1,
		MAX              = 2
	};

	/**
	 * Enum Athena.EAllPlayersStatEventTypes
	 */
	enum class EAllPlayersStatEventTypes : uint8_t
	{
		SendToAllPlayersWearingGhostCurseWithinRange    = 0,
		SendToAllPlayersWearingSkeletonCurseWithinRange = 1,
		MAX                                             = 2
	};

	/**
	 * Enum Athena.ECrewStatEventTypes
	 */
	enum class ECrewStatEventTypes : uint8_t
	{
		SendToWholeCrew                       = 0,
		OnlySendToPirateLegends               = 1,
		OnlySendToPlayersWearingGhostCurse    = 2,
		OnlySendToPlayersWearingSkeletonCurse = 3,
		MAX                                   = 4
	};

	/**
	 * Enum Athena.EStatEventsWasFiredFromConditionalStatsServiceState
	 */
	enum class EStatEventsWasFiredFromConditionalStatsServiceState : uint8_t
	{
		WasNotFired = 0,
		WasFired    = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EPlayerStatsOperator
	 */
	enum class EPlayerStatsOperator : uint8_t
	{
		Sum     = 0,
		Replace = 1,
		Minimum = 2,
		Maximum = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.EPlayerStatsType
	 */
	enum class EPlayerStatsType : uint8_t
	{
		Int    = 0,
		Double = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.EShipLocation
	 */
	enum class EShipLocation : uint8_t
	{
		TOP_DECK                      = 0,
		MID_DECK                      = 1,
		BOTTOM_DECK                   = 2,
		HATCH_BACK_LEFT               = 3,
		HATCH_BACK_RIGHT              = 4,
		HATCH_FRONT_LEFT              = 5,
		HATCH_FRONT_RIGHT             = 6,
		CABIN_FRONT_DOOR              = 7,
		CABIN_SIDE_DOOR               = 8,
		TOP_DECK_BOW_PLANE            = 9,
		TOP_DECK_HATCH_PLANE          = 10,
		TOP_DECK_WHEEL_PLANE          = 11,
		MAP_DECK_FRONT_PLANE          = 12,
		MAP_DECK_TABLE_PLANE          = 13,
		MAP_DECK_REARSTAIRS_PLANE     = 14,
		BRIG_DECK_BRIG_PLANE          = 15,
		BRIG_DECK_STAIRS_PLANE        = 16,
		AITARGET_OFFSET_TO_EXTENTS    = 17,
		AITARGET_EXTENTS              = 18,
		AITARGET_ABOVE_DECK_OFFSET    = 19,
		AITARGET_ABOVE_DECK_EXTENTS   = 20,
		AITARGET_MID_DECK_OFFSET      = 21,
		AITARGET_MID_DECK_EXTENTS     = 22,
		AITARGET_LOWER_DECK_OFFSET    = 23,
		AITARGET_LOWER_DECK_EXTENTS   = 24,
		AI_KRAKEN_TENTACLE            = 25,
		CAPTAINS_TABLE_SPAWN_LOCATION = 26,
		MAX                           = 27
	};

	/**
	 * Enum Athena.EToggleOrHoldMode
	 */
	enum class EToggleOrHoldMode : uint8_t
	{
		Off    = 0,
		Hold   = 1,
		Toggle = 2,
		MAX    = 3
	};

	/**
	 * Enum Athena.EUseSingleStick
	 */
	enum class EUseSingleStick : uint8_t
	{
		Off        = 0,
		LeftStick  = 1,
		RightStick = 2,
		SwapSticks = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.ECameraLookatAnimationType
	 */
	enum class ECameraLookatAnimationType : uint8_t
	{
		Default  = 0,
		Wheel    = 1,
		Capstan  = 2,
		Sail     = 3,
		Tentacle = 4,
		Ladder   = 5,
		Sitting  = 6,
		MAX      = 7
	};

	/**
	 * Enum Athena.ELookAtRotationType
	 */
	enum class ELookAtRotationType : uint8_t
	{
		Rate = 0,
		Raw  = 1,
		MAX  = 2
	};

	/**
	 * Enum Athena.EEmoteSequenceType
	 */
	enum class EEmoteSequenceType : uint8_t
	{
		Continuous = 0,
		OneShot    = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EWalletCurrencyId
	 */
	enum class EWalletCurrencyId : uint8_t
	{
		Undefined     = 0,
		Gold          = 1,
		WaywardTokens = 2,
		Premium       = 3,
		MAX           = 4
	};

	/**
	 * Enum Athena.EWalletBalanceRequestFailureReason
	 */
	enum class EWalletBalanceRequestFailureReason : uint8_t
	{
		ServiceUnavailable = 0,
		RequestTimeout     = 1,
		PendingRequest     = 2,
		RequestCancelled   = 3,
		MAX                = 4
	};

	/**
	 * Enum Athena.EWalletTransactionRequestFailureReason
	 */
	enum class EWalletTransactionRequestFailureReason : uint8_t
	{
		ServiceUnavailable        = 0,
		PendingRequest            = 1,
		RequestCancelled          = 2,
		InvalidPirateIdentity     = 3,
		InvalidTransactionRequest = 4,
		MAX                       = 5
	};

	/**
	 * Enum Athena.EStyleModifiers
	 */
	enum class EStyleModifiers : uint8_t
	{
		Hide       = 0,
		Emblem     = 1,
		Brig       = 2,
		Accessible = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EPossessionsChestType
	 */
	enum class EPossessionsChestType : uint8_t
	{
		Unknown                        = 0,
		EquipmentChest                 = 1,
		ClothingChest                  = 2,
		VanityChest                    = 3,
		ArmoryChest                    = 4,
		ShipCustomizationChest         = 5,
		ShipFlagCustomizationChest     = 6,
		PetChest                       = 7,
		CaptainsShipCustomizationChest = 8,
		TrinketChest                   = 9,
		MAX                            = 10
	};

	/**
	 * Enum Athena.EChestEntitlementActionType
	 */
	enum class EChestEntitlementActionType : uint8_t
	{
		Equip       = 0,
		Unequip     = 1,
		Clear       = 2,
		Randomise   = 3,
		RadialEquip = 4,
		MAX         = 5
	};

	/**
	 * Enum Athena.EMenuNavigationAction
	 */
	enum class EMenuNavigationAction : uint8_t
	{
		EscapeMenu        = 0,
		QuickMenu         = 1,
		VoteToScuttleShip = 2,
		Unsupported       = 3,
		MAX               = 4
	};

	/**
	 * Enum Athena.EShopOfferAvailability
	 */
	enum class EShopOfferAvailability : uint8_t
	{
		Available    = 0,
		AlreadyOwned = 1,
		Locked       = 2,
		Info         = 3,
		Hide         = 4,
		MAX          = 5
	};

	/**
	 * Enum Athena.EShopType
	 */
	enum class EShopType : uint8_t
	{
		Invalid                = 0,
		ShipWright_Liveries    = 1,
		ShipWright_Decorations = 2,
		ShipWright_Trinkets    = 3,
		MAX                    = 4,
		MAX01                  = 5
	};

	/**
	 * Enum Athena.EMultiShopType
	 */
	enum class EMultiShopType : uint8_t
	{
		Invalid    = 0,
		ShipWright = 1,
		MAX        = 2,
		MAX01      = 3
	};

	/**
	 * Enum Athena.EPreventDamageTypeLockReasons
	 */
	enum class EPreventDamageTypeLockReasons : uint8_t
	{
		IsFiredOutOfACannon = 0,
		AIStrategy          = 1,
		Form                = 2,
		IsHiddenInObject    = 3,
		ExternalController  = 4,
		MAX                 = 5
	};

	/**
	 * Enum Athena.ERegenerationState
	 */
	enum class ERegenerationState : uint8_t
	{
		Regenerating = 0,
		Stopped      = 1,
		Paused       = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.ETeleportActionStateStage
	 */
	enum class ETeleportActionStateStage : uint8_t
	{
		Uninitialised                            = 0,
		Started                                  = 1,
		CharacterFadeCompleteCondition           = 2,
		PreTeleport                              = 3,
		CrewShipSpawnedIfPlayerIsInBrigCondition = 4,
		TeleportCompleteCondition                = 5,
		AsyncLoadCompleteCondition               = 6,
		ActorsRelevantSpawnCondition             = 7,
		PlayerCreatedOnClientSpawnCondition      = 8,
		PlayerLoadoutReceivedSpawnCondition      = 9,
		PlayerEntitlementReceivedSpawnCondition  = 10,
		ClientConditionsCompleteCondition        = 11,
		CharacterReadyForContestRespawnCondition = 12,
		PostTeleport                             = 13,
		Ended                                    = 14,
		MAX                                      = 15
	};

	/**
	 * Enum Athena.ETeleportActionStateReason
	 */
	enum class ETeleportActionStateReason : uint8_t
	{
		Uninitialised                               = 0,
		Test                                        = 1,
		Cheat                                       = 2,
		LeaveConcealingObject                       = 3,
		TeleportPlayerToSafety                      = 4,
		SinkingShip                                 = 5,
		Mermaid                                     = 6,
		RespawnStatue                               = 7,
		ReturnToShip                                = 8,
		PanicTeleport_FoundAssociatedLocation       = 9,
		PanicTeleport_NotFoundAssociatedLocation    = 10,
		PanicTeleport_NoAssociatedLocationsProvided = 11,
		TeleportTriggerObject                       = 12,
		SentToBrig                                  = 13,
		HideOutEntered                              = 14,
		HideOutLeftToSpecificExitPoint              = 15,
		HideOutLeftWithNoExitPoint                  = 16,
		ContestTeleportPlayerToShipOnRestart        = 17,
		DebugTeleportCrewStep                       = 18,
		EnterTunnelOfTheDamned                      = 19,
		ExitTunnelOfTheDamned                       = 20,
		SpawnPlayer                                 = 21,
		SpawnGhost                                  = 22,
		TeleportPlayerFromSafeZone                  = 23,
		TaleProgressStatue                          = 24,
		MAX                                         = 25
	};

	/**
	 * Enum Athena.ETeleportTransformSpace
	 */
	enum class ETeleportTransformSpace : uint8_t
	{
		World          = 0,
		RelativeToBase = 1,
		MAX            = 2
	};

	/**
	 * Enum Athena.ETeleportActionStateConditions
	 */
	enum class ETeleportActionStateConditions : uint8_t
	{
		AllConditions = 0,
		NoConditions  = 1,
		MAX           = 2
	};

	/**
	 * Enum Athena.ETeleportActionStateFadeType
	 */
	enum class ETeleportActionStateFadeType : uint8_t
	{
		Fade        = 0,
		FadeEndOnly = 1,
		NoFade      = 2,
		MAX         = 3
	};

	/**
	 * Enum Athena.EAttitudeTowardActor
	 */
	enum class EAttitudeTowardActor : uint8_t
	{
		Friendly = 0,
		Neutral  = 1,
		Hostile  = 2,
		Alliance = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.ECharacterType
	 */
	enum class ECharacterType : uint8_t
	{
		Ghost     = 0,
		Character = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.ETeleportNotificationSource
	 */
	enum class ETeleportNotificationSource : uint8_t
	{
		TeleportState       = 0,
		WaitingToSpawnState = 1,
		MAX                 = 2
	};

	/**
	 * Enum Athena.ETrackedActorType
	 */
	enum class ETrackedActorType : uint8_t
	{
		Unknown                    = 0,
		AI_Fauna                   = 1,
		AI_GhostShip_Captain       = 2,
		AI_GhostShip_MiniBoss      = 3,
		AI_GhostShip_Grunt         = 4,
		AI_Kraken                  = 5,
		AI_Megalodon               = 6,
		AI_OceanCrawler_Crab       = 7,
		AI_OceanCrawler_Eel        = 8,
		AI_OceanCrawler_Hermit     = 9,
		AI_Pets                    = 10,
		AI_Pets_Wielded            = 11,
		AI_Phantom                 = 12,
		AI_Siren                   = 13,
		AI_Shark                   = 14,
		AI_Ship_Aggressive_Large   = 15,
		AI_Ship_Aggressive_Small   = 16,
		AI_Ship_Battle_Large       = 17,
		AI_Ship_Battle_Small       = 18,
		AI_Ship_Passive_Large      = 19,
		AI_Ship_Passive_Small      = 20,
		AI_Skeleton                = 21,
		AI_SwimmingCreature        = 22,
		AshenLordCloud             = 23,
		BarrelsOfPlenty            = 24,
		Booty                      = 25,
		Booty_AshenWindsSkull      = 26,
		Booty_ReapersChest         = 27,
		BuoyantActor               = 28,
		BurnedFragment             = 29,
		Consumable                 = 30,
		Earthquake                 = 31,
		FireworkExplosion          = 32,
		FireworkProjectile         = 33,
		FishingFish                = 34,
		FogBank                    = 35,
		Geyser                     = 36,
		Ghostship_Flameheart_Cloud = 37,
		Haunted_Fort               = 38,
		Mermaid                    = 39,
		MessageInABottle           = 40,
		NPC                        = 41,
		Player                     = 42,
		Pouch_Ammo                 = 43,
		Pouch_Doubloons            = 44,
		Pouch_Gold                 = 45,
		Rowboat                    = 46,
		Rowboat_Cannon             = 47,
		Rowboat_Harpoon            = 48,
		Ship_Large                 = 49,
		Ship_Medium                = 50,
		Ship_Small                 = 51,
		ShipCloud                  = 52,
		Shipwreck                  = 53,
		Shipwreck_Graveyard        = 54,
		ShortRangeMarker           = 55,
		SkeletonThrone             = 56,
		SkullCloud                 = 57,
		Spire                      = 58,
		StatueThreat               = 59,
		StorageContainer           = 60,
		StorageContainerBuoyant    = 61,
		Storm                      = 62,
		SuperHeatedWater           = 63,
		Volcano                    = 64,
		WreckDebris_Land           = 65,
		WreckDebris_Sea            = 66,
		MAX                        = 67,
		MAX01                      = 68
	};

	/**
	 * Enum Athena.ETrackedOwnerType
	 */
	enum class ETrackedOwnerType : uint8_t
	{
		Unknown               = 0,
		Consumable            = 1,
		Booty                 = 2,
		Booty_ReapersChest    = 3,
		Booty_AshenWindsSkull = 4,
		BarrelsOfPlenty       = 5,
		WreckDebris_Land      = 6,
		WreckDebris_Sea       = 7,
		BurnedFragment        = 8,
		MAX                   = 9
	};

	/**
	 * Enum Athena.EVfxCustomLocalSpaceMode
	 */
	enum class EVfxCustomLocalSpaceMode : uint8_t
	{
		Default             = 0,
		ShipSpaceAutoLocal  = 1,
		ShipSpaceAutoPlayer = 2,
		ShipSpaceAutoWorld  = 3,
		MAX                 = 4
	};

	/**
	 * Enum Athena.EVfxRegion
	 */
	enum class EVfxRegion : uint8_t
	{
		None         = 0,
		ShipExterior = 1,
		ShipInterior = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.EVfxUnderwaterUsage
	 */
	enum class EVfxUnderwaterUsage : uint8_t
	{
		AboveWater = 0,
		UnderWater = 1,
		Both       = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EShipAlignmentType
	 */
	enum class EShipAlignmentType : uint8_t
	{
		None                = 0,
		AlignedToShip       = 1,
		AlignedToShipXYOnly = 2,
		MAX                 = 3
	};

	/**
	 * Enum Athena.EShipState
	 */
	enum class EShipState : uint8_t
	{
		PlainSailing             = 0,
		GrindingToHalt           = 1,
		Lowering                 = 2,
		ReduceWaterOcclusionZone = 3,
		KeelingOver              = 4,
		KeeledOver               = 5,
		FinalSinking             = 6,
		Dead                     = 7,
		MAX                      = 8
	};

	/**
	 * Enum Athena.EBowSplashTickReturnType
	 */
	enum class EBowSplashTickReturnType : uint8_t
	{
		NoEffectsPlayed = 0,
		SFXOnly         = 1,
		SFXAndVFX       = 2,
		MAX             = 3
	};

	/**
	 * Enum Athena.EShipAnnouncementAlignment
	 */
	enum class EShipAnnouncementAlignment : uint8_t
	{
		None        = 0,
		Emissary    = 1,
		TheFeared   = 2,
		GoldSeeker  = 3,
		Hunter      = 4,
		TheIllFated = 5,
		Rogue       = 6,
		Voyager     = 7,
		Protector   = 8,
		Servant     = 9,
		MAX         = 10
	};

	/**
	 * Enum Athena.EShipPartCustomizationState
	 */
	enum class EShipPartCustomizationState : uint8_t
	{
		Idle             = 0,
		SearchingForPart = 1,
		CustomizingPart  = 2,
		RegisteringPart  = 3,
		MAX              = 4
	};

	/**
	 * Enum Athena.EShipDynamicsAnchoredState
	 */
	enum class EShipDynamicsAnchoredState : uint8_t
	{
		Unknown = 0,
		Raised  = 1,
		Lowered = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EAllianceNotificationType
	 */
	enum class EAllianceNotificationType : uint8_t
	{
		Joined          = 0,
		Formed          = 1,
		Left            = 2,
		Disbanded       = 3,
		OtherCrewJoined = 4,
		OtherCrewLeft   = 5,
		MAX             = 6
	};

	/**
	 * Enum Athena.EAllianceJoinStatus
	 */
	enum class EAllianceJoinStatus : uint8_t
	{
		CannotJoinAlliance = 0,
		CanJoinAlliance    = 1,
		IsInAlliance       = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.ELoadableState
	 */
	enum class ELoadableState : uint8_t
	{
		Unloaded  = 0,
		Unloading = 1,
		Loading   = 2,
		Loaded    = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.ECharacterDeathType
	 */
	enum class ECharacterDeathType : uint8_t
	{
		Invalid                                          = 0,
		Killed                                           = 1,
		Despawn                                          = 2,
		OwnershipRemoved                                 = 3,
		NoGameStatePresentDuringPostInitializeComponents = 4,
		MAX                                              = 5
	};

	/**
	 * Enum Athena.EPlayerActivityType
	 */
	enum class EPlayerActivityType : uint8_t
	{
		None              = 0,
		Bailing           = 1,
		Cannon            = 2,
		Cannon_END        = 3,
		Capstan           = 4,
		Capstan_END       = 5,
		CarryingBooty     = 6,
		CarryingBooty_END = 7,
		Dead              = 8,
		Dead_END          = 9,
		Digging           = 10,
		Dousing           = 11,
		EmptyingBucket    = 12,
		Harpoon           = 13,
		Harpoon_END       = 14,
		LoseHealth        = 15,
		Repairing         = 16,
		Sails             = 17,
		Sails_END         = 18,
		UndoingRepair     = 19,
		Wheel             = 20,
		Wheel_END         = 21,
		MAX               = 22,
		MAX01             = 23
	};

	/**
	 * Enum Athena.ERadialMenuInputModality
	 */
	enum class ERadialMenuInputModality : uint8_t
	{
		None     = 0,
		Keyboard = 1,
		Gamepad  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.ERadialInventoryType
	 */
	enum class ERadialInventoryType : uint8_t
	{
		None    = 0,
		Item    = 1,
		Map     = 2,
		Phrases = 3,
		Emotes  = 4,
		MAX     = 5
	};

	/**
	 * Enum Athena.EDockableSocketOverlapUpdates
	 */
	enum class EDockableSocketOverlapUpdates : uint8_t
	{
		AllowUpdate = 0,
		BlockUpdate = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EActionDisplayPriority
	 */
	enum class EActionDisplayPriority : uint8_t
	{
		Primary   = 0,
		Secondary = 1,
		Tertiary  = 2,
		Total     = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EInteractableState
	 */
	enum class EInteractableState : uint8_t
	{
		Interactable         = 0,
		DisableDescribe      = 1,
		DisabledDontDescribe = 2,
		MAX                  = 3
	};

	/**
	 * Enum Athena.ETooltipHighlightType
	 */
	enum class ETooltipHighlightType : uint8_t
	{
		Active    = 0,
		GreyedOut = 1,
		None      = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.ETooltipSpinnerType
	 */
	enum class ETooltipSpinnerType : uint8_t
	{
		None     = 0,
		Progress = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EItemUseSpeed
	 */
	enum class EItemUseSpeed : uint8_t
	{
		Default  = 0,
		Custom   = 1,
		Custom01 = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EMaxMoveSpeedScalarReason
	 */
	enum class EMaxMoveSpeedScalarReason : uint8_t
	{
		Digging       = 0,
		Limping       = 1,
		UsingItem     = 2,
		Stunned       = 3,
		MeleeBlocking = 4,
		Testing       = 5,
		Environment   = 6,
		NumReasons    = 7,
		MAX           = 8
	};

	/**
	 * Enum Athena.EWieldableItemAnimVariant
	 */
	enum class EWieldableItemAnimVariant : uint8_t
	{
		Default  = 0,
		Variant1 = 1,
		Variant2 = 2,
		Variant3 = 3,
		Variant4 = 4,
		MAX      = 5,
		MAX01    = 6
	};

	/**
	 * Enum Athena.EWieldableItemBlockingAnimState
	 */
	enum class EWieldableItemBlockingAnimState : uint8_t
	{
		Main     = 0,
		Feedback = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EWieldableItemComplexOneShotLookUpType
	 */
	enum class EWieldableItemComplexOneShotLookUpType : uint8_t
	{
		Combo   = 0,
		Heavy   = 1,
		Special = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EWieldableItemComplexOneShotAnimType
	 */
	enum class EWieldableItemComplexOneShotAnimType : uint8_t
	{
		MeleeComboAttack = 0,
		MeleeHeavyAttack = 1,
		MAX              = 2
	};

	/**
	 * Enum Athena.EWieldableItemSize
	 */
	enum class EWieldableItemSize : uint8_t
	{
		Small = 0,
		Large = 1,
		MAX   = 2
	};

	/**
	 * Enum Athena.EWieldableItemVisibilityReason
	 */
	enum class EWieldableItemVisibilityReason : uint8_t
	{
		Animation     = 0,
		Interpolation = 1,
		BlocksView    = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EItemType
	 */
	enum class EItemType : uint8_t
	{
		Weapon  = 0,
		Item    = 1,
		Quest   = 2,
		Invalid = 3,
		MAX     = 4
	};

	/**
	 * Enum Athena.EWieldItemReturnCode
	 */
	enum class EWieldItemReturnCode : uint8_t
	{
		Success           = 0,
		NoAuthority       = 1,
		UnableToDisplace  = 2,
		InvalidItem       = 3,
		WaitingForUnstash = 4,
		MAX               = 5
	};

	/**
	 * Enum Athena.EDropItemReturnCode
	 */
	enum class EDropItemReturnCode : uint8_t
	{
		NothingToDrop      = 0,
		Success            = 1,
		DroppingProhibited = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.EStowMethod
	 */
	enum class EStowMethod : uint8_t
	{
		Unequip = 0,
		Stash   = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EStashReason
	 */
	enum class EStashReason : uint8_t
	{
		Locomotion     = 0,
		Jumping        = 1,
		Docking        = 2,
		Sprinting      = 3,
		Using          = 4,
		Dead           = 5,
		SpawnOrDespawn = 6,
		AIPartsChange  = 7,
		Emote          = 8,
		MAX            = 9
	};

	/**
	 * Enum Athena.ECanAddItemQueryResult
	 */
	enum class ECanAddItemQueryResult : uint8_t
	{
		Success  = 0,
		SlotFull = 1,
		Invalid  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EItemActionState
	 */
	enum class EItemActionState : uint8_t
	{
		Idle       = 0,
		Starting   = 1,
		Performing = 2,
		Stopping   = 3,
		Cooldown   = 4,
		Resetting  = 5,
		MAX        = 6
	};

	/**
	 * Enum Athena.EItemActionType
	 */
	enum class EItemActionType : uint8_t
	{
		OneShot    = 0,
		WindUp     = 1,
		Continuous = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EItemUseStoppedReason
	 */
	enum class EItemUseStoppedReason : uint8_t
	{
		Stopped     = 0,
		Interrupted = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EPerspectiveTypes
	 */
	enum class EPerspectiveTypes : uint8_t
	{
		FirstPerson = 0,
		ThirdPerson = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EItemLifetimeManagement
	 */
	enum class EItemLifetimeManagement : uint8_t
	{
		Automatic = 0,
		Manual    = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EItemRepresentation
	 */
	enum class EItemRepresentation : uint8_t
	{
		None       = 0,
		Wielded    = 1,
		WorldProxy = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EDoubleActionItemPriority
	 */
	enum class EDoubleActionItemPriority : uint8_t
	{
		None      = 0,
		Primary   = 1,
		Secondary = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EContinuousUseID
	 */
	enum class EContinuousUseID : uint8_t
	{
		In  = 0,
		Out = 1,
		MAX = 2
	};

	/**
	 * Enum Athena.EContinuousUseOverride
	 */
	enum class EContinuousUseOverride : uint8_t
	{
		None           = 0,
		ForcePrimary   = 1,
		ForceSecondary = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EItemPassiveState
	 */
	enum class EItemPassiveState : uint8_t
	{
		Idle       = 0,
		Locomotion = 1,
		Jumping    = 2,
		Turning    = 3,
		Swimming   = 4,
		MAX        = 5
	};

	/**
	 * Enum Athena.EActionRelevancy
	 */
	enum class EActionRelevancy : uint8_t
	{
		Primary      = 0,
		PrimaryAlt   = 1,
		Secondary    = 2,
		SecondaryAlt = 3,
		MAX          = 4
	};

	/**
	 * Enum Athena.EBlendedFadeState
	 */
	enum class EBlendedFadeState : uint8_t
	{
		FadingIn  = 0,
		FadingOut = 1,
		Active    = 2,
		Idle      = 3,
		MAX       = 4
	};

	/**
	 * Enum Athena.EShelterUpdateOption
	 */
	enum class EShelterUpdateOption : uint8_t
	{
		Never           = 0,
		OnStartUp       = 1,
		WithinRainZones = 2,
		Always          = 3,
		MAX             = 4
	};

	/**
	 * Enum Athena.ESubmergedState
	 */
	enum class ESubmergedState : uint8_t
	{
		Surfaced           = 0,
		PartiallySubmerged = 1,
		FullySubmerged     = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.EControllableObjectType
	 */
	enum class EControllableObjectType : uint8_t
	{
		None              = 0,
		Wheel             = 1,
		CapstanArm        = 2,
		Pulley            = 3,
		SailHoist         = 4,
		SailAngle         = 5,
		Cannon            = 6,
		MapTable          = 7,
		KeyedInstrument   = 8,
		Tentacle          = 9,
		Ladder            = 10,
		SkeletonShipWheel = 11,
		Oars              = 12,
		RowboatSeat       = 13,
		Seat              = 14,
		Bed               = 15,
		HarpoonLauncher   = 16,
		WaterPump         = 17,
		WaterSlide        = 18,
		Book              = 19,
		MAX               = 20
	};

	/**
	 * Enum Athena.ELadderType
	 */
	enum class ELadderType : uint8_t
	{
		Generic       = 0,
		BoatSide      = 1,
		BoatCrowsnest = 2,
		ClamberSpot   = 3,
		MAX           = 4
	};

	/**
	 * Enum Athena.ELadderTransitionMode
	 */
	enum class ELadderTransitionMode : uint8_t
	{
		OnTop     = 0,
		OffTop    = 1,
		OnBottom  = 2,
		OffBottom = 3,
		Max       = 4,
		MAX       = 5
	};

	/**
	 * Enum Athena.EMeleeWeaponMovementSpeed
	 */
	enum class EMeleeWeaponMovementSpeed : uint8_t
	{
		Default        = 0,
		SlightlySlowed = 1,
		Slowed         = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EMeleeAttackInterruptReason
	 */
	enum class EMeleeAttackInterruptReason : uint8_t
	{
		Stopping = 0,
		Comboing = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EMeleeWeaponAttackType
	 */
	enum class EMeleeWeaponAttackType : uint8_t
	{
		Combo   = 0,
		Heavy   = 1,
		Special = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.ESpawnedItemSource
	 */
	enum class ESpawnedItemSource : uint8_t
	{
		None                = 0,
		Quest               = 1,
		Shipwreck           = 2,
		FloatingAtSea       = 3,
		Island              = 4,
		SkellyFort          = 5,
		AIShip              = 6,
		Megalodon           = 7,
		KrakenTentacle      = 8,
		SunkenCurseArtefact = 9,
		EmergentCaptain     = 10,
		PlayerShip          = 11,
		AggressiveGhostShip = 12,
		Siren               = 13,
		SunkenKingdom       = 14,
		BuriedByPlayer      = 15,
		OceanCrawlers       = 16,
		MAX                 = 17
	};

	/**
	 * Enum Athena.EAmmoEffectState
	 */
	enum class EAmmoEffectState : uint8_t
	{
		Idle       = 0,
		Processing = 1,
		Stopped    = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.ETreasureMapVerticalAlignment
	 */
	enum class ETreasureMapVerticalAlignment : uint8_t
	{
		Top    = 0,
		Centre = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.ETreasureMapHorizontalAlignment
	 */
	enum class ETreasureMapHorizontalAlignment : uint8_t
	{
		Left   = 0,
		Centre = 1,
		Right  = 2,
		MAX    = 3
	};

	/**
	 * Enum Athena.ECompassDirections
	 */
	enum class ECompassDirections : uint8_t
	{
		North            = 0,
		NorthByNorthEast = 1,
		NorthEast        = 2,
		EastByNorthEast  = 3,
		East             = 4,
		EastBySouthEast  = 5,
		SouthEast        = 6,
		SouthBySouthEast = 7,
		South            = 8,
		SouthBySouthWest = 9,
		SouthWest        = 10,
		WestBySouthWest  = 11,
		West             = 12,
		WestByNorthWest  = 13,
		NorthWest        = 14,
		NorthByNorthWest = 15,
		NumDirections    = 16,
		MAX              = 17
	};

	/**
	 * Enum Athena.EDefenderLootLevel
	 */
	enum class EDefenderLootLevel : uint8_t
	{
		NotDefended = 0,
		NoLoot      = 1,
		Low         = 2,
		Medium      = 3,
		High        = 4,
		MAX         = 5
	};

	/**
	 * Enum Athena.ERewardType
	 */
	enum class ERewardType : uint8_t
	{
		XP              = 0,
		Gold            = 1,
		Entitlement     = 2,
		WaywardTokens   = 3,
		Level           = 4,
		Emblem          = 5,
		Achievement     = 6,
		PremiumCurrency = 7,
		SeasonXP        = 8,
		Null            = 9,
		MAX             = 10
	};

	/**
	 * Enum Athena.ERewardRequestFailureReason
	 */
	enum class ERewardRequestFailureReason : uint8_t
	{
		FailedToProcess = 0,
		TimedOut        = 1,
		Unknown         = 2,
		MAX             = 3
	};

	/**
	 * Enum Athena.ERewardDestinationType
	 */
	enum class ERewardDestinationType : uint8_t
	{
		Player   = 0,
		Crew     = 1,
		Alliance = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EQuestMapIcon
	 */
	enum class EQuestMapIcon : uint8_t
	{
		Unknown               = 0,
		XMarksTheSpot         = 1,
		Riddle                = 2,
		Bounty                = 3,
		Merchant              = 4,
		MessageInABottle      = 5,
		CargoRun              = 6,
		SkeletonOrder         = 7,
		Emissary              = 8,
		Wayfinder             = 9,
		MerchantClue          = 10,
		Fishing               = 11,
		TreasureBuriedByYou   = 12,
		TreasureBuriedByOther = 13,
		Checklist             = 14,
		MAX                   = 15
	};

	/**
	 * Enum Athena.EQuestType
	 */
	enum class EQuestType : uint8_t
	{
		Unknown        = 0,
		XMarksTheSpot  = 1,
		Riddle         = 2,
		Bounty         = 3,
		Merchant       = 4,
		CargoRun       = 5,
		Tale           = 6,
		Matchmake      = 7,
		EmergantVoyage = 8,
		Reward         = 9,
		Staging        = 10,
		MAX            = 11
	};

	/**
	 * Enum Athena.EShowVoyageBannersState
	 */
	enum class EShowVoyageBannersState : uint8_t
	{
		Show     = 0,
		DontShow = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EEmergentVoyageSource
	 */
	enum class EEmergentVoyageSource : uint8_t
	{
		Unknown               = 0,
		MessageInABottle      = 1,
		SkeletonOrder         = 2,
		Emissary              = 3,
		CoralMessageInABottle = 4,
		MAX                   = 5
	};

	/**
	 * Enum Athena.EQuestStatus
	 */
	enum class EQuestStatus : uint8_t
	{
		Pending    = 0,
		Starting   = 1,
		InProgress = 2,
		Complete   = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EVoyageChangeReason
	 */
	enum class EVoyageChangeReason : uint8_t
	{
		Unknown              = 0,
		PreviousWasCompleted = 1,
		PreviousWasCancelled = 2,
		MAX                  = 3
	};

	/**
	 * Enum Athena.EQuestResultFromDig
	 */
	enum class EQuestResultFromDig : uint8_t
	{
		None      = 0,
		Chest     = 1,
		QuestItem = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EVoyageJoinStatus
	 */
	enum class EVoyageJoinStatus : uint8_t
	{
		Other          = 0,
		Start          = 1,
		JoinInProgress = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EVoyageLeaveStatus
	 */
	enum class EVoyageLeaveStatus : uint8_t
	{
		Other          = 0,
		Completed      = 1,
		Cancelled      = 2,
		QuitInProgress = 3,
		Migrated       = 4,
		MAX            = 5
	};

	/**
	 * Enum Athena.EVoyageChapterProgressionType
	 */
	enum class EVoyageChapterProgressionType : uint8_t
	{
		DrivenByAnyQuestCompletion      = 0,
		DrivenBySpecificQuestCompletion = 1,
		MAX                             = 2
	};

	/**
	 * Enum Athena.EQuestDistributionMethod
	 */
	enum class EQuestDistributionMethod : uint8_t
	{
		AllAtOnce     = 0,
		PerChapter    = 1,
		FixedChapters = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EQuestLocationSelectionMethod
	 */
	enum class EQuestLocationSelectionMethod : uint8_t
	{
		NoRepetitionWithinVoyage           = 0,
		NoRepetitionWithinAdjacentChapters = 1,
		AllIslandsAvailable                = 2,
		MAX                                = 3
	};

	/**
	 * Enum Athena.EQuestPoolSelectionMethod
	 */
	enum class EQuestPoolSelectionMethod : uint8_t
	{
		Sequential = 0,
		Random     = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.ERiddleActions
	 */
	enum class ERiddleActions : uint8_t
	{
		RaiseLanternAnyone      = 0,
		PlayAnyInstrumentAnyone = 1,
		Dig                     = 2,
		LookAtMap               = 3,
		NumActions              = 4,
		MAX                     = 5
	};

	/**
	 * Enum Athena.ELandmarkUniqueness
	 */
	enum class ELandmarkUniqueness : uint8_t
	{
		Unique    = 0,
		NonUnique = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.ELandmarkVagueness
	 */
	enum class ELandmarkVagueness : uint8_t
	{
		Vague    = 0,
		NonVague = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EEventRunLocation
	 */
	enum class EEventRunLocation : uint8_t
	{
		Client          = 0,
		Server          = 1,
		ClientAndServer = 2,
		MAX             = 3
	};

	/**
	 * Enum Athena.EItemLoadoutDestroyBehaviour
	 */
	enum class EItemLoadoutDestroyBehaviour : uint8_t
	{
		DoNotDestroy = 0,
		Destroy      = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EEncounterListenerType
	 */
	enum class EEncounterListenerType : uint8_t
	{
		None   = 0,
		Ship   = 1,
		Player = 2,
		Count  = 3,
		MAX    = 4
	};

	/**
	 * Enum Athena.EEncounterMobility
	 */
	enum class EEncounterMobility : uint8_t
	{
		Static = 0,
		Mobile = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.EEncounterDimensions
	 */
	enum class EEncounterDimensions : uint8_t
	{
		ThreeDimensions = 0,
		TwoDimensions   = 1,
		MAX             = 2
	};

	/**
	 * Enum Athena.EEncounterType
	 */
	enum class EEncounterType : uint8_t
	{
		None                                 = 0,
		Storm                                = 1,
		BarrelsOfPlenty                      = 2,
		ShipSighting                         = 3,
		ShipEncounter                        = 4,
		ShipwreckEventSighting               = 5,
		ShipwreckEventEncounter              = 6,
		ShipwreckAmbientSighting             = 7,
		ShipwreckAmbientEncounter            = 8,
		SkellyFortSighting                   = 9,
		SkellyFortEncounter                  = 10,
		SkellyFortLegendaryFortSighting      = 11,
		SkellyFortLegendaryFortEncounter     = 12,
		KrakenSighting                       = 13,
		KrakenEncounter                      = 14,
		TinySharkSighting                    = 15,
		TinySharkEncounter                   = 16,
		AIShipSighting                       = 17,
		AIShipEncounter                      = 18,
		FogBank                              = 19,
		BoxOfSecrets                         = 20,
		ReapersChest                         = 21,
		EmergentCaptain                      = 22,
		AncientSkelly                        = 23,
		AshenLordSighting                    = 24,
		AshenLordEncounter                   = 25,
		AggressiveGhostShipsAmbientSighting  = 26,
		AggressiveGhostShipsAmbientEncounter = 27,
		AggressiveGhostShipsEventSighting    = 28,
		AggressiveGhostShipsEventEncounter   = 29,
		SunkenKingdomTreasurySighting        = 30,
		SunkenKingdomTreasuryEncounter       = 31,
		SeaFortSighting                      = 32,
		SeaFortEncounter                     = 33,
		Count                                = 34,
		MAX                                  = 35
	};

	/**
	 * Enum Athena.ENPCDisplayNameType
	 */
	enum class ENPCDisplayNameType : uint8_t
	{
		NPCAndIsland = 0,
		NPCOnly      = 1,
		IslandOnly   = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.ENPCChatType
	 */
	enum class ENPCChatType : uint8_t
	{
		Chat      = 0,
		Subtitles = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EReapersMarkTrackedBootyItemType
	 */
	enum class EReapersMarkTrackedBootyItemType : uint8_t
	{
		None                 = 0,
		GenericBooty         = 1,
		FOTDKey              = 2,
		ReapersBounty        = 3,
		DoubloonReapersChest = 4,
		LegendaryFortKey     = 5,
		MAX                  = 6
	};

	/**
	 * Enum Athena.EReapersMarkTrackedVoyageType
	 */
	enum class EReapersMarkTrackedVoyageType : uint8_t
	{
		None              = 0,
		NonAllianceVoyage = 1,
		AllianceVoyage    = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.EIslandTextureSourceType
	 */
	enum class EIslandTextureSourceType : uint8_t
	{
		TreasureMap = 0,
		WorldMap    = 1,
		MAX         = 2
	};

	/**
	 * Enum Athena.EWorldMapShipType
	 */
	enum class EWorldMapShipType : uint8_t
	{
		None                 = 0,
		IsInAlliance         = 1,
		IsOwnedShip          = 2,
		IsContestShip        = 3,
		IsReapersTrackedShip = 4,
		IsInTunnel           = 5,
		IsInFaction          = 6,
		IsFactionMaxRank     = 7,
		IsInvadingShip       = 8,
		MAX                  = 9
	};

	/**
	 * Enum Athena.ERiddleActionLocationOffsets
	 */
	enum class ERiddleActionLocationOffsets : uint8_t
	{
		PerformActionAtLocation                           = 0,
		PerformActionAtCompassDirectionOffsetFromLocation = 1,
		MAX                                               = 2
	};

	/**
	 * Enum Athena.ERiddleLocations
	 */
	enum class ERiddleLocations : uint8_t
	{
		NotOnIsland               = 0,
		UniqueNonVagueLandmark    = 1,
		UniqueVagueLandmark       = 2,
		NonUniqueNonVagueLandmark = 3,
		Island                    = 4,
		MAX                       = 5
	};

	/**
	 * Enum Athena.EFeedableType
	 */
	enum class EFeedableType : uint8_t
	{
		None  = 0,
		Meat  = 1,
		Fruit = 2,
		Bait  = 3,
		MAX   = 4
	};

	/**
	 * Enum Athena.EFaunaAnimationSnakeAttackDirection
	 */
	enum class EFaunaAnimationSnakeAttackDirection : uint8_t
	{
		Forwards  = 0,
		Backwards = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.EFaunaAnimationStartledLevel
	 */
	enum class EFaunaAnimationStartledLevel : uint8_t
	{
		None = 0,
		Low  = 1,
		High = 2,
		MAX  = 3
	};

	/**
	 * Enum Athena.EFaunaAnimationLocation
	 */
	enum class EFaunaAnimationLocation : uint8_t
	{
		Land       = 0,
		Sea        = 1,
		Underwater = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EFaunaAnimationState
	 */
	enum class EFaunaAnimationState : uint8_t
	{
		Idle       = 0,
		Locomotion = 1,
		Impact     = 2,
		DyingLoop  = 3,
		Death      = 4,
		Special    = 5,
		MAX        = 6
	};

	/**
	 * Enum Athena.InventoryAction
	 */
	enum class EInventoryAction : uint8_t
	{
		InventoryAction_Take                = 0,
		InventoryAction_Stow                = 1,
		InventoryAction_InventoryAction_MAX = 2
	};

	/**
	 * Enum Athena.InventoryItemState
	 */
	enum class EInventoryItemState : uint8_t
	{
		InventoryItemState_Default                = 0,
		InventoryItemState_Locked                 = 1,
		InventoryItemState_InventoryItemState_MAX = 2
	};

	/**
	 * Enum Athena.EFlameOfFateType
	 */
	enum class EFlameOfFateType : uint8_t
	{
		Default         = 0,
		Cursed          = 1,
		DiedByShark     = 2,
		DiedByVolcano   = 3,
		DiedBySkeleton  = 4,
		DiedByLightning = 5,
		DiedByVenom     = 6,
		DiedByPlayer    = 7,
		MAX             = 8,
		MAX01           = 9
	};

	/**
	 * Enum Athena.ELockAnimationState
	 */
	enum class ELockAnimationState : uint8_t
	{
		None            = 0,
		InterpolatingIn = 1,
		Unlocking       = 2,
		MAX             = 3
	};

	/**
	 * Enum Athena.ECollectorsChestMaterial
	 */
	enum class ECollectorsChestMaterial : uint8_t
	{
		Wood  = 0,
		Stone = 1,
		MAX   = 2
	};

	/**
	 * Enum Athena.EMermaidState
	 */
	enum class EMermaidState : uint8_t
	{
		Rising       = 0,
		Idle         = 1,
		Disappearing = 2,
		MAX          = 3
	};

	/**
	 * Enum Athena.ERomeBeaconAttachType
	 */
	enum class ERomeBeaconAttachType : uint8_t
	{
		Ship   = 0,
		Player = 1,
		MAX    = 2,
		MAX01  = 3
	};

	/**
	 * Enum Athena.EBootyStorageMaterialState
	 */
	enum class EBootyStorageMaterialState : uint8_t
	{
		Empty   = 0,
		Partial = 1,
		Full    = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.ETransientCampfireStateChange
	 */
	enum class ETransientCampfireStateChange : uint8_t
	{
		Extinguished = 0,
		WoodAdded    = 1,
		Ignited      = 2,
		Stoked       = 3,
		BurnedDown   = 4,
		MAX          = 5
	};

	/**
	 * Enum Athena.EStickinessType
	 */
	enum class EStickinessType : uint8_t
	{
		DontStick        = 0,
		StickTemporarily = 1,
		StickForever     = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.ENotificationType
	 */
	enum class ENotificationType : uint8_t
	{
		Chat             = 0,
		Server           = 1,
		FormattedChat    = 2,
		STTChat          = 3,
		EmoteDescription = 4,
		MAX              = 5
	};

	/**
	 * Enum Athena.ECutsceneActivatonState
	 */
	enum class ECutsceneActivatonState : uint8_t
	{
		Enabled         = 0,
		Disabled        = 1,
		Active          = 2,
		FinishedPlaying = 3,
		Decommissioned  = 4,
		MAX             = 5
	};

	/**
	 * Enum Athena.ENamedPointCollectionSearchTag
	 */
	enum class ENamedPointCollectionSearchTag : uint8_t
	{
		None                             = 0,
		PirateLegendsVoyage              = 1,
		PirateLegends_HauntedFort        = 2,
		PirateLegends_HauntedIsland      = 3,
		PirateLegends_LyingMap           = 4,
		PirateLegends_PictureMap         = 5,
		PirateLegends_ShipwreckGraveyard = 6,
		PirateLegends_ZoomMap            = 7,
		MAX                              = 8
	};

	/**
	 * Enum Athena.ENamedPointGroupSearchTag
	 */
	enum class ENamedPointGroupSearchTag : uint8_t
	{
		None              = 0,
		ItemSpawnLocation = 1,
		ItemBuryLocation  = 2,
		Exclude           = 3,
		MAX               = 4
	};

	/**
	 * Enum Athena.EWheelAnimationType
	 */
	enum class EWheelAnimationType : uint8_t
	{
		SmallTurn     = 0,
		LeftTurnMid   = 1,
		LeftTurnFast  = 2,
		RightTurnMid  = 3,
		RightTurnFast = 4,
		MAX           = 5
	};

	/**
	 * Enum Athena.EWheelDirection
	 */
	enum class EWheelDirection : uint8_t
	{
		Any           = 0,
		Anticlockwise = 1,
		Clockwise     = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.EVoyageDifficultyScope
	 */
	enum class EVoyageDifficultyScope : uint8_t
	{
		Tale     = 0,
		Standard = 1,
		Emergent = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EMastDamageState
	 */
	enum class EMastDamageState : uint8_t
	{
		Intact     = 0,
		Secured    = 1,
		Upright    = 2,
		FreeToMove = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EMastType
	 */
	enum class EMastType : uint8_t
	{
		Front = 0,
		Main  = 1,
		Rear  = 2,
		MAX   = 3
	};

	/**
	 * Enum Athena.ERowBraking
	 */
	enum class ERowBraking : uint8_t
	{
		None       = 0,
		BrakeLeft  = 1,
		BrakeRight = 2,
		BrakeBoth  = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EHitRegShotType
	 */
	enum class EHitRegShotType : uint8_t
	{
		Invalid          = 0,
		HitScanShot      = 1,
		TimeOfFlightShot = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.EHitRegSnapshotDisagreementType
	 */
	enum class EHitRegSnapshotDisagreementType : uint8_t
	{
		NoDisagreement                 = 0,
		DifferentComponentsOnSameActor = 1,
		DifferentActors                = 2,
		DesynchronizedData             = 3,
		MAX                            = 4
	};

	/**
	 * Enum Athena.EStormEffectLockReasons
	 */
	enum class EStormEffectLockReasons : uint8_t
	{
		InsideExclusionVolume   = 0,
		AccessibilityToggledOff = 1,
		MAX                     = 2
	};

	/**
	 * Enum Athena.ERespawnPointOrientation
	 */
	enum class ERespawnPointOrientation : uint8_t
	{
		None    = 0,
		North   = 1,
		South   = 2,
		West    = 3,
		East    = 4,
		Outward = 5,
		Inward  = 6,
		Random  = 7,
		MAX     = 8
	};

	/**
	 * Enum Athena.EContestState
	 */
	enum class EContestState : uint8_t
	{
		Idle        = 0,
		Staging     = 1,
		Contest     = 2,
		PostContest = 3,
		Reward      = 4,
		MAX         = 5
	};

	/**
	 * Enum Athena.EContestScoreId
	 */
	enum class EContestScoreId : uint8_t
	{
		Undefined = 0,
		Silver    = 1,
		MAX       = 2
	};

	/**
	 * Enum Athena.DrowningState
	 */
	enum class EDrowningState : uint8_t
	{
		DrowningState_NotDrowning       = 0,
		DrowningState_Drowning          = 1,
		DrowningState_Gulping           = 2,
		DrowningState_ResetDrowning     = 3,
		DrowningState_DrowningState_MAX = 4
	};

	/**
	 * Enum Athena.EMechanismActionActivationMode
	 */
	enum class EMechanismActionActivationMode : uint8_t
	{
		Any = 0,
		All = 1,
		MAX = 2
	};

	/**
	 * Enum Athena.EMechanismActionState
	 */
	enum class EMechanismActionState : uint8_t
	{
		Active   = 0,
		Inactive = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EMechanismActionType
	 */
	enum class EMechanismActionType : uint8_t
	{
		OneShot    = 0,
		Continuous = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EMechanismTriggerState
	 */
	enum class EMechanismTriggerState : uint8_t
	{
		Active   = 0,
		Inactive = 1,
		Disabled = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EMechanismTriggerType
	 */
	enum class EMechanismTriggerType : uint8_t
	{
		OneShot    = 0,
		Continuous = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EAnimatedMechanismTickCost
	 */
	enum class EAnimatedMechanismTickCost : uint8_t
	{
		Low  = 0,
		High = 1,
		MAX  = 2
	};

	/**
	 * Enum Athena.EMechanismAnimationEventType
	 */
	enum class EMechanismAnimationEventType : uint8_t
	{
		OneShot    = 0,
		Continuous = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.ETimedDoorCheckpointState
	 */
	enum class ETimedDoorCheckpointState : uint8_t
	{
		Lowering = 0,
		Jammed   = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.ETimedDoorState
	 */
	enum class ETimedDoorState : uint8_t
	{
		Lowering = 0,
		Closed   = 1,
		Opening  = 2,
		Jammed   = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.ESimpleAnimatedMechanismActionMode
	 */
	enum class ESimpleAnimatedMechanismActionMode : uint8_t
	{
		OneShot              = 0,
		OneShotRetriggerable = 1,
		Continuous           = 2,
		MAX                  = 3
	};

	/**
	 * Enum Athena.ECollisionShapeType
	 */
	enum class ECollisionShapeType : uint8_t
	{
		Sphere = 0,
		Box    = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.ESwitchMechanismTriggerRandomSelectionMode
	 */
	enum class ESwitchMechanismTriggerRandomSelectionMode : uint8_t
	{
		Any          = 0,
		InactiveOnly = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EVFXMechanismAnimationEventMode
	 */
	enum class EVFXMechanismAnimationEventMode : uint8_t
	{
		FixedRelativeOffset                = 0,
		FixedMechanismVFXComponentLocation = 1,
		AttachedToSceneComponent           = 2,
		MAX                                = 3
	};

	/**
	 * Enum Athena.EOverrideState
	 */
	enum class EOverrideState : uint8_t
	{
		Free             = 0,
		StartingOverride = 1,
		EndingOverride   = 2,
		Overridden       = 3,
		MAX              = 4
	};

	/**
	 * Enum Athena.EEventRoomState
	 */
	enum class EEventRoomState : uint8_t
	{
		Inactive  = 0,
		Waiting   = 1,
		Active    = 2,
		Completed = 3,
		Aftermath = 4,
		MAX       = 5
	};

	/**
	 * Enum Athena.EWreckSpawnBlockType
	 */
	enum class EWreckSpawnBlockType : uint8_t
	{
		AlwaysBlock       = 0,
		NeverBlock        = 1,
		PotentialBlockage = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.EWreckSpawnCheckFlag
	 */
	enum class EWreckSpawnCheckFlag : uint8_t
	{
		None                            = 0,
		Players                         = 1,
		Ships                           = 2,
		AmbientWrecks                   = 3,
		CustomWrecks                    = 4,
		Islands                         = 5,
		AmbientWrecksWithNearPlayers    = 6,
		AmbientWrecksWithoutNearPlayers = 7,
		SeaRocks                        = 8,
		MAX                             = 9
	};

	/**
	 * Enum Athena.EBaitType
	 */
	enum class EBaitType : uint8_t
	{
		NoBait     = 0,
		EarthWorms = 1,
		Grubs      = 2,
		Leeches    = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EFishSize
	 */
	enum class EFishSize : uint8_t
	{
		Medium = 0,
		Large  = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.EFishSpawnTimeOfDay
	 */
	enum class EFishSpawnTimeOfDay : uint8_t
	{
		AnyTime   = 0,
		OnlyDay   = 1,
		OnlyNight = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EFishAnimationState
	 */
	enum class EFishAnimationState : uint8_t
	{
		SwimmingLoop = 0,
		Fighting     = 1,
		Tired        = 2,
		Escaped      = 3,
		Caught       = 4,
		MAX          = 5
	};

	/**
	 * Enum Athena.EFishingFishState
	 */
	enum class EFishingFishState : uint8_t
	{
		NotSet                         = 0,
		RisingFromTheDepths            = 1,
		AttachedToFloat_MovingToFloat  = 2,
		AttachedToFloat_Battling       = 3,
		AttachedToFloat_Tired          = 4,
		AttachedToFloat_Caught         = 5,
		AttachedToFloat_Caught_Instant = 6,
		Escaping                       = 7,
		MAX                            = 8
	};

	/**
	 * Enum Athena.EFishingFloatState
	 */
	enum class EFishingFloatState : uint8_t
	{
		NotSet              = 0,
		AttachedToRod       = 1,
		Casting             = 2,
		CastingFailed       = 3,
		FloatingOnWater     = 4,
		BringingInCatch     = 5,
		Retracting          = 6,
		ViolentlyRetracting = 7,
		MAX                 = 8
	};

	/**
	 * Enum Athena.EFishingMiniGamePlayerInputBattlingDirection
	 */
	enum class EFishingMiniGamePlayerInputBattlingDirection : uint8_t
	{
		BattlingAgainstLeft  = 0,
		BattlingAgainstRight = 1,
		BattlingAgainstAway  = 2,
		MAX                  = 3
	};

	/**
	 * Enum Athena.EFishingMiniGamePlayerInputDirection
	 */
	enum class EFishingMiniGamePlayerInputDirection : uint8_t
	{
		None    = 0,
		Left    = 1,
		Away    = 2,
		Right   = 3,
		Towards = 4,
		MAX     = 5
	};

	/**
	 * Enum Athena.EFishingMiniGameEscapeDirection
	 */
	enum class EFishingMiniGameEscapeDirection : uint8_t
	{
		None  = 0,
		Left  = 1,
		Away  = 2,
		Right = 3,
		MAX   = 4
	};

	/**
	 * Enum Athena.EFishingMiniGameState
	 */
	enum class EFishingMiniGameState : uint8_t
	{
		Battling   = 0,
		Recovering = 1,
		MAX        = 2
	};

	/**
	 * Enum Athena.EFishingRodServerState
	 */
	enum class EFishingRodServerState : uint8_t
	{
		NotBeingUsed                          = 0,
		PreparingToCast                       = 1,
		VerifyingCastLocation                 = 2,
		Casting                               = 3,
		DelayBeforeSpawningFish               = 4,
		RequestFishSpawnWhenPossible          = 5,
		WaitingForAsyncLoadToFinish           = 6,
		WaitingForFishToBite                  = 7,
		FishMovingInToBite                    = 8,
		FishOnRodAndWaitingForPlayerInput     = 9,
		FishMovingToMinimumDistanceFromPlayer = 10,
		FishingMiniGameUnderway               = 11,
		FishCaught                            = 12,
		ReelingInAComedyItem                  = 13,
		ComedyItemCaught                      = 14,
		MAX                                   = 15
	};

	/**
	 * Enum Athena.EFishingRodRetractLineVisuals
	 */
	enum class EFishingRodRetractLineVisuals : uint8_t
	{
		None    = 0,
		Normal  = 1,
		Violent = 2,
		MAX     = 3
	};

	/**
	 * Enum Athena.EFishingRodBattlingState
	 */
	enum class EFishingRodBattlingState : uint8_t
	{
		NotBattling        = 0,
		Battling_Tiring    = 1,
		Battling_NotTiring = 2,
		Battling_Tired     = 3,
		MAX                = 4
	};

	/**
	 * Enum Athena.EFishingState
	 */
	enum class EFishingState : uint8_t
	{
		None         = 0,
		Casting      = 1,
		CastForwards = 2,
		CastSuccess  = 3,
		CastFailed   = 4,
		Fishing      = 5,
		IntoFighting = 6,
		Fighting     = 7,
		Success      = 8,
		Failure      = 9,
		MAX          = 10
	};

	/**
	 * Enum Athena.EMusicalInstrumentType
	 */
	enum class EMusicalInstrumentType : uint8_t
	{
		Banjo      = 0,
		Bass       = 1,
		Concertina = 2,
		Drums      = 3,
		HurdyGurdy = 4,
		OneManBand = 5,
		Sousaphone = 6,
		Ukulele    = 7,
		VoiceBox   = 8,
		Any        = 9,
		Total      = 10,
		MAX        = 11
	};

	/**
	 * Enum Athena.EShantyEnsembleOption
	 */
	enum class EShantyEnsembleOption : uint8_t
	{
		TryToJoinExistingNearbyEnsemble = 0,
		ForceNewEnsemble                = 1,
		MAX                             = 2
	};

	/**
	 * Enum Athena.EDigDirection
	 */
	enum class EDigDirection : uint8_t
	{
		None     = 0,
		Exhuming = 1,
		Burying  = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EPetMontageAnimationType
	 */
	enum class EPetMontageAnimationType : uint8_t
	{
		None           = 0,
		OneShot        = 1,
		LoopingOneShot = 2,
		LoopingStaged  = 3,
		MAX            = 4
	};

	/**
	 * Enum Athena.EPetMontageAnimationState
	 */
	enum class EPetMontageAnimationState : uint8_t
	{
		None               = 0,
		OneShot            = 1,
		ContinuousIn       = 2,
		ContinuousLoop     = 3,
		ContinuousOut      = 4,
		ExitContinuousLoop = 5,
		MAX                = 6
	};

	/**
	 * Enum Athena.EAthenaAnimationPetRoamingState
	 */
	enum class EAthenaAnimationPetRoamingState : uint8_t
	{
		Idle            = 0,
		Locomotion      = 1,
		LocomtionScared = 2,
		Unique          = 3,
		React           = 4,
		Call            = 5,
		Concealed       = 6,
		FlyCannon       = 7,
		Cheer           = 8,
		Interested      = 9,
		Talking         = 10,
		Happy           = 11,
		Caged           = 12,
		Grumpy          = 13,
		Angry           = 14,
		Dance           = 15,
		Cleaning        = 16,
		Exit            = 17,
		Arrive          = 18,
		Startled        = 19,
		Inactive        = 20,
		TakingOff       = 21,
		Landing         = 22,
		Flying          = 23,
		Yawn            = 24,
		Scared          = 25,
		Protective      = 26,
		Vomit           = 27,
		Chew            = 28,
		Sneeze          = 29,
		Sleep           = 30,
		Hangout_A       = 31,
		Hangout_B       = 32,
		Hangout_C       = 33,
		LookAround      = 34,
		Meme            = 35,
		MAX             = 36
	};

	/**
	 * Enum Athena.EAthenaAnimationPetHeldReactionState
	 */
	enum class EAthenaAnimationPetHeldReactionState : uint8_t
	{
		None          = 0,
		Chew          = 1,
		PositiveReact = 2,
		NegativeReact = 3,
		RefuseReact   = 4,
		MAX           = 5
	};

	/**
	 * Enum Athena.EAthenaAnimationPetHeldState
	 */
	enum class EAthenaAnimationPetHeldState : uint8_t
	{
		Idle       = 0,
		Underwater = 1,
		UnEquip    = 2,
		Equip      = 3,
		Inactive   = 4,
		Drop       = 5,
		Stroke     = 6,
		Give       = 7,
		MAX        = 8
	};

	/**
	 * Enum Athena.EAthenaAnimationPetSpawnState
	 */
	enum class EAthenaAnimationPetSpawnState : uint8_t
	{
		Null      = 0,
		BeingHeld = 1,
		Roaming   = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EWorldRegion
	 */
	enum class EWorldRegion : uint8_t
	{
		BlueSeaOfPlenty  = 0,
		TheWilds         = 1,
		WideSeaOfPlunder = 2,
		DevilsRoar       = 3,
		ShoresOfGold     = 4,
		MAX              = 5
	};

	/**
	 * Enum Athena.MapInventoryItemState
	 */
	enum class EMapInventoryItemState : uint8_t
	{
		MapInventoryItemState_Default                   = 0,
		MapInventoryItemState_Locked                    = 1,
		MapInventoryItemState_MapInventoryItemState_MAX = 2
	};

	/**
	 * Enum Athena.EEventFortDestructionReason
	 */
	enum class EEventFortDestructionReason : uint8_t
	{
		Defeated = 0,
		Despawn  = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.ESeaFortState
	 */
	enum class ESeaFortState : uint8_t
	{
		Inactive = 0,
		Dormant  = 1,
		Battle   = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EPrisonerPosition
	 */
	enum class EPrisonerPosition : uint8_t
	{
		None     = 0,
		Hitting  = 1,
		Kneeling = 2,
		Stood    = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.EShipType
	 */
	enum class EShipType : uint8_t
	{
		Sloop      = 0,
		Brigantine = 1,
		Galleon    = 2,
		Invalid    = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.ECanvasBlendMode
	 */
	enum class ECanvasBlendMode : uint8_t
	{
		Opaque                           = 0,
		Masked                           = 1,
		Translucent                      = 2,
		Additive                         = 3,
		Modulate                         = 4,
		MaskedDistanceField              = 5,
		MaskedDistanceFieldShadowed      = 6,
		TranslucentDistanceField         = 7,
		TranslucentDistanceFieldShadowed = 8,
		AlphaComposite                   = 9,
		AlphaBlend                       = 10,
		TranslucentAlphaOnly             = 11,
		PremultipliedAlpha               = 12,
		MAX                              = 13
	};

	/**
	 * Enum Athena.EWidgetVisibilityGroup
	 */
	enum class EWidgetVisibilityGroup : uint8_t
	{
		Persistent   = 0,
		AlwaysHidden = 1,
		Group1       = 2,
		Group2       = 3,
		MAX          = 4
	};

	/**
	 * Enum Athena.EWieldableBookPageType
	 */
	enum class EWieldableBookPageType : uint8_t
	{
		Single = 0,
		Double = 1,
		MAX    = 2
	};

	/**
	 * Enum Athena.EWieldableBookPageRenderingMode
	 */
	enum class EWieldableBookPageRenderingMode : uint8_t
	{
		NoPagesRendered                             = 0,
		DrawLeftPageAsCurrentOnly                   = 1,
		DrawLeftPageAsPreviousAndRightPageAsCurrent = 2,
		DrawLeftPageAsCurrentAndRightPageAsNext     = 3,
		MAX                                         = 4
	};

	/**
	 * Enum Athena.ERenderPageResult
	 */
	enum class ERenderPageResult : uint8_t
	{
		RenderedPage = 0,
		NoWorkDone   = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EEventLogEntryType
	 */
	enum class EEventLogEntryType : uint8_t
	{
		None                  = 0,
		PlayerDied            = 1,
		ArrivedAtIsland       = 2,
		ArrivedAtShrine       = 3,
		DepartedIsland        = 4,
		DepartedShrine        = 5,
		BuriedTreasure        = 6,
		VoyageComplete        = 7,
		FortComplete          = 8,
		DamnedFortComplete    = 9,
		TallTaleComplete      = 10,
		LordFought            = 11,
		FlameheartFought      = 12,
		GhostShipFought       = 13,
		SkellyShipFought      = 14,
		KrakenEncountered     = 15,
		MegEncountered        = 16,
		FoundMessageInABottle = 17,
		FoundTreasure         = 18,
		AllianceFormed        = 19,
		AllianceDisbanded     = 20,
		Sunk                  = 21,
		SailedDistance        = 22,
		ShipwreckExplored     = 23,
		FightPlayers          = 24,
		EndedCaptaincy        = 25,
		EnteredSea            = 26,
		BattleNonCaptainsShip = 27,
		BattleCaptainsShip    = 28,
		MAX                   = 29
	};

	/**
	 * Enum Athena.ECaptainsLogPageType
	 */
	enum class ECaptainsLogPageType : uint8_t
	{
		Invalid = 0,
		Ship    = 1,
		Crew    = 2,
		Session = 3,
		Log     = 4,
		MAX     = 5
	};

	/**
	 * Enum Athena.ESwimmingMode
	 */
	enum class ESwimmingMode : uint8_t
	{
		SwimmingMode_None     = 0,
		SwimmingMode_Swimming = 1,
		SwimmingMode_Sinking  = 2,
		SwimmingMode_MAX      = 3
	};

	/**
	 * Enum Athena.ESwimmingCreatureDeathCustomEventEnum
	 */
	enum class ESwimmingCreatureDeathCustomEventEnum : uint8_t
	{
		None             = 0,
		StartSinking     = 1,
		StartSinkingAnim = 2,
		MAX              = 3
	};

	/**
	 * Enum Athena.EBeckonNPCGroup
	 */
	enum class EBeckonNPCGroup : uint8_t
	{
		Default   = 0,
		Larinna   = 1,
		Belle     = 2,
		Pendragon = 3,
		Test      = 4,
		Test2     = 5,
		MAX       = 6
	};

	/**
	 * Enum Athena.EBeckonGesture
	 */
	enum class EBeckonGesture : uint8_t
	{
		Default = 0,
		Welcome = 1,
		Goodbye = 2,
		Test    = 3,
		Test2   = 4,
		MAX     = 5
	};

	/**
	 * Enum Athena.EAggressiveGhostShipCannonFacingDirection
	 */
	enum class EAggressiveGhostShipCannonFacingDirection : uint8_t
	{
		Left  = 0,
		Right = 1,
		MAX   = 2
	};

	/**
	 * Enum Athena.EAggressiveGhostShipSpawnDirectionType
	 */
	enum class EAggressiveGhostShipSpawnDirectionType : uint8_t
	{
		Random                    = 0,
		AlwaysClockwise           = 1,
		AlwaysAntiClockwise       = 2,
		MatchNearbyEncounter      = 3,
		OppositeToNearbyEncounter = 4,
		MAX                       = 5
	};

	/**
	 * Enum Athena.EAggressiveGhostShipType
	 */
	enum class EAggressiveGhostShipType : uint8_t
	{
		Grunt                 = 0,
		FormationGrunt        = 1,
		FormationLeader       = 2,
		CaptainFormationGrunt = 3,
		Captain               = 4,
		MAX                   = 5
	};

	/**
	 * Enum Athena.EAggressiveGhostShipAllegiance
	 */
	enum class EAggressiveGhostShipAllegiance : uint8_t
	{
		HostileToPlayers  = 0,
		FriendlyToPlayers = 1,
		MAX               = 2
	};

	/**
	 * Enum Athena.FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType
	 */
	enum class EFAggressiveGhostShipEncounterWaveProgressAnnounceMusicType : uint8_t
	{
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_None                                                           = 0,
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_Formation                                                      = 1,
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_FinalWaveCaptain                                               = 2,
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_FinalWaveFlameheart                                            = 3,
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_EncounterComplete                                              = 4,
		FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_FAggressiveGhostShipEncounterWaveProgressAnnounceMusicType_MAX = 5
	};

	/**
	 * Enum Athena.EAggressiveGhostShipTarget
	 */
	enum class EAggressiveGhostShipTarget : uint8_t
	{
		None                   = 0,
		Player                 = 1,
		NearPlayer             = 2,
		Ship                   = 3,
		NearShip               = 4,
		MermaidStatue          = 5,
		NearMermaidStatue      = 6,
		EnemyGhostShip         = 7,
		NearEnemyGhostShip     = 8,
		CannonRowboat          = 9,
		NearCannonRowboat      = 10,
		GenericExtraTarget     = 11,
		NearGenericExtraTarget = 12,
		Anywhere               = 13,
		MAX                    = 14
	};

	/**
	 * Enum Athena.EHauntedFortPhase
	 */
	enum class EHauntedFortPhase : uint8_t
	{
		NONE         = 0,
		Emplacements = 1,
		Fort         = 2,
		Destroyed    = 3,
		MAX          = 4
	};

	/**
	 * Enum Athena.ENavigationDirection
	 */
	enum class ENavigationDirection : uint8_t
	{
		None  = 0,
		Left  = 1,
		Right = 2,
		Up    = 3,
		Down  = 4,
		MAX   = 5
	};

	/**
	 * Enum Athena.ERevealState
	 */
	enum class ERevealState : uint8_t
	{
		Hidden        = 0,
		FarRevealed   = 1,
		CloseRevealed = 2,
		MAX           = 3
	};

	/**
	 * Enum Athena.ETransientActorDiscardType
	 */
	enum class ETransientActorDiscardType : uint8_t
	{
		MarkForDestruction = 0,
		Unregister         = 1,
		Count              = 2,
		MAX                = 3
	};

	/**
	 * Enum Athena.ESittingActionStateDockingMode
	 */
	enum class ESittingActionStateDockingMode : uint8_t
	{
		FindFloor            = 0,
		AttachDirectlyToSeat = 1,
		MAX                  = 2
	};

	/**
	 * Enum Athena.ESleepingActionStateDockingMode
	 */
	enum class ESleepingActionStateDockingMode : uint8_t
	{
		FindFloor            = 0,
		AttachDirectlyToSeat = 1,
		MAX                  = 2
	};

	/**
	 * Enum Athena.ESeatStatTimeOfDay
	 */
	enum class ESeatStatTimeOfDay : uint8_t
	{
		Sunrise   = 0,
		Morning   = 1,
		MidDay    = 2,
		Afternoon = 3,
		Sunset    = 4,
		Night     = 5,
		Unknown   = 6,
		MAX       = 7
	};

	/**
	 * Enum Athena.EAthenaAnimationCapstanState
	 */
	enum class EAthenaAnimationCapstanState : uint8_t
	{
		Neutral  = 0,
		Positive = 1,
		Negative = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EAthenaAnimationJumpingState
	 */
	enum class EAthenaAnimationJumpingState : uint8_t
	{
		None         = 0,
		Jumping      = 1,
		Falling      = 2,
		Impact       = 3,
		JumpFinished = 4,
		PreImpact    = 5,
		MAX          = 6
	};

	/**
	 * Enum Athena.EAthenaAnimationLadderState
	 */
	enum class EAthenaAnimationLadderState : uint8_t
	{
		None     = 0,
		ClimbOn  = 1,
		ClimbOff = 2,
		Climbing = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.EAthenaAnimationLadderTransitionState
	 */
	enum class EAthenaAnimationLadderTransitionState : uint8_t
	{
		None   = 0,
		Bottom = 1,
		Top    = 2,
		MAX    = 3
	};

	/**
	 * Enum Athena.EIKFootPlantingState
	 */
	enum class EIKFootPlantingState : uint8_t
	{
		On  = 0,
		Off = 1,
		MAX = 2
	};

	/**
	 * Enum Athena.EIKSolverType
	 */
	enum class EIKSolverType : uint8_t
	{
		NormalSolver = 0,
		LODSolver    = 1,
		MAX          = 2
	};

	/**
	 * Enum Athena.EIKState
	 */
	enum class EIKState : uint8_t
	{
		On  = 0,
		Off = 1,
		MAX = 2
	};

	/**
	 * Enum Athena.EItemBlockingSubState
	 */
	enum class EItemBlockingSubState : uint8_t
	{
		None       = 0,
		Main       = 1,
		Feedback   = 2,
		InFeedback = 3,
		MAX        = 4
	};

	/**
	 * Enum Athena.EComplexOneShotAttackType
	 */
	enum class EComplexOneShotAttackType : uint8_t
	{
		CombatLocomotion    = 0,
		CombatStatic        = 1,
		CombatSwimming      = 2,
		CombatHeavy         = 3,
		CombatHeavySwimming = 4,
		MAX                 = 5
	};

	/**
	 * Enum Athena.EComplexOneShotSubState
	 */
	enum class EComplexOneShotSubState : uint8_t
	{
		WarmUp          = 0,
		WarmUpFromBlock = 1,
		Action          = 2,
		Recover         = 3,
		HeavyAttackStun = 4,
		MAX             = 5
	};

	/**
	 * Enum Athena.EAthenaAnimationWheelState
	 */
	enum class EAthenaAnimationWheelState : uint8_t
	{
		Neutral  = 0,
		Positive = 1,
		Negative = 2,
		MAX      = 3
	};

	/**
	 * Enum Athena.EObjectPitchTargetingStates
	 */
	enum class EObjectPitchTargetingStates : uint8_t
	{
		None            = 0,
		StandardPassive = 1,
		StandardWater   = 2,
		Action          = 3,
		Action_1_Water  = 4,
		Action01        = 5,
		Action_2_Water  = 6,
		MAX             = 7
	};

	/**
	 * Enum Athena.EObjectPitchTargetingLimbs
	 */
	enum class EObjectPitchTargetingLimbs : uint8_t
	{
		None     = 0,
		RightArm = 1,
		LeftArm  = 2,
		BothArms = 3,
		MAX      = 4
	};

	/**
	 * Enum Athena.EAnimationWaterPumpState
	 */
	enum class EAnimationWaterPumpState : uint8_t
	{
		None          = 0,
		PumpForwards  = 1,
		PumpBackwards = 2,
		ExitPumping   = 3,
		MAX           = 4
	};

	/**
	 * Enum Athena.EWieldedItemAnimationState
	 */
	enum class EWieldedItemAnimationState : uint8_t
	{
		Equipping          = 0,
		Unequipping        = 1,
		Idle               = 2,
		Unequipped         = 3,
		ContinuousUse      = 4,
		OutOfContinuousUse = 5,
		OneShot            = 6,
		ComplexOneShot     = 7,
		Blocking           = 8,
		MAX                = 9
	};

	/**
	 * Enum Athena.EAthenaAITeam
	 */
	enum class EAthenaAITeam : uint8_t
	{
		Players                   = 0,
		Skeletons                 = 1,
		Fauna_Chickens            = 2,
		Fauna_Pigs                = 3,
		Fauna_Snakes              = 4,
		NeutralSwimmingCreature   = 5,
		Sharks                    = 6,
		TinyShark                 = 7,
		Kraken                    = 8,
		KrakenTentacle            = 9,
		NeutralCreatureCharacters = 10,
		Pets                      = 11,
		Fire                      = 12,
		AggressiveGhostShip       = 13,
		Sirens                    = 14,
		LordPinch                 = 15,
		OceanCrawlers             = 16,
		Phantoms                  = 17,
		PlayerAllied              = 18,
		Max                       = 19,
		MAX                       = 20
	};

	/**
	 * Enum Athena.EIslandType
	 */
	enum class EIslandType : uint8_t
	{
		Resource                  = 0,
		Outpost                   = 1,
		Small                     = 2,
		Medium                    = 3,
		Large                     = 4,
		Fort                      = 5,
		FortOfTheDamned           = 6,
		Reef                      = 7,
		SeaPost                   = 8,
		Tutorial                  = 9,
		ReapersHideout            = 10,
		Sunken                    = 11,
		SunkenKingdomNonStarlight = 12,
		SeaFortPrime1             = 13,
		SeaFortPrime2             = 14,
		SeaFortOvergrown1         = 15,
		SeaFortOvergrown2         = 16,
		SeaFortPrison1            = 17,
		SeaFortPrison2            = 18,
		None                      = 19,
		Max                       = 20,
		MAX                       = 21
	};

	/**
	 * Enum Athena.EIslandActiveEventType
	 */
	enum class EIslandActiveEventType : uint8_t
	{
		None     = 0,
		Shrouded = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.EIslandReservationState
	 */
	enum class EIslandReservationState : uint8_t
	{
		NotReserved       = 0,
		PartiallyReserved = 1,
		FullyReserved     = 2,
		MAX               = 3
	};

	/**
	 * Enum Athena.EGameplayEventSignalType
	 */
	enum class EGameplayEventSignalType : uint8_t
	{
		SkellyFort           = 0,
		SkellyShip           = 1,
		AshenLord            = 2,
		FlameheartGhostShips = 3,
		MAX                  = 4,
		MAX01                = 5
	};

	/**
	 * Enum Athena.EGameEventStatus
	 */
	enum class EGameEventStatus : uint8_t
	{
		Failed    = 0,
		Triggered = 1,
		Complete  = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EEncounterActorRemovedReason
	 */
	enum class EEncounterActorRemovedReason : uint8_t
	{
		Defeated  = 0,
		Despawned = 1,
		Deleted   = 2,
		MAX       = 3
	};

	/**
	 * Enum Athena.EGameEventSchedulerEventType
	 */
	enum class EGameEventSchedulerEventType : uint8_t
	{
		Unknown                    = 0,
		AI_Kraken                  = 1,
		AI_Megalodon               = 2,
		AI_Ship_Aggressive         = 3,
		AI_Ship_Passive            = 4,
		ShipCloud                  = 5,
		SkullCloud                 = 6,
		Ghostship_Flameheart_Cloud = 7,
		AshenLordCloud             = 8,
		LegendarySkullCloud        = 9,
		MAX                        = 10
	};

	/**
	 * Enum Athena.EBootyTypes
	 */
	enum class EBootyTypes : uint8_t
	{
		Invalid          = 0,
		TreasureChest    = 1,
		BountySkull      = 2,
		MerchantCrate    = 3,
		GunpowderBarrel  = 4,
		TreasureArtifact = 5,
		AncientChest     = 6,
		PirateLordBooty  = 7,
		BoxOfSecrets     = 8,
		CargoRunCrate    = 9,
		MermaidGem       = 10,
		CollectorsChest  = 11,
		DroppedPouch     = 12,
		FishedItem       = 13,
		Food             = 14,
		TaleArtifact     = 15,
		CampaignBooty    = 16,
		ReapersBooty     = 17,
		ReapersBounty    = 18,
		RitualSkull      = 19,
		AshenBooty       = 20,
		AshenGift        = 21,
		EmissaryFlotsam  = 22,
		GoldMound        = 23,
		MerchantManifest = 24,
		BreathOfTheSea   = 25,
		CaptainsLog      = 26,
		NonSellable      = 27,
		MAX              = 28
	};

	/**
	 * Enum Athena.EItemOwnershipType
	 */
	enum class EItemOwnershipType : uint8_t
	{
		NotOwned           = 0,
		Owned              = 1,
		FirstOwner         = 2,
		FirstOwnerFromCrew = 3,
		OriginalOwner      = 4,
		Stolen             = 5,
		FirstStolenByCrew  = 6,
		MAX                = 7
	};

	/**
	 * Enum Athena.EShovelDigType
	 */
	enum class EShovelDigType : uint8_t
	{
		Success              = 0,
		PatDownSuccess       = 1,
		DeflectOffHardGround = 2,
		Invalid              = 3,
		None                 = 4,
		MAX                  = 5
	};

	/**
	 * Enum Athena.EIngestionState
	 */
	enum class EIngestionState : uint8_t
	{
		Idle           = 0,
		InToIngestion  = 1,
		OutOfIngestion = 2,
		MAX            = 3
	};

	/**
	 * Enum Athena.EMatchmakingVisibilityState
	 */
	enum class EMatchmakingVisibilityState : uint8_t
	{
		Public  = 0,
		Private = 1,
		MAX     = 2
	};

	/**
	 * Enum Athena.EScuttleState
	 */
	enum class EScuttleState : uint8_t
	{
		Scuttled                   = 0,
		NotScuttled                = 1,
		Disabled_TunnelOfTheDamned = 2,
		MAX                        = 3
	};

	/**
	 * Enum Athena.EBrigState
	 */
	enum class EBrigState : uint8_t
	{
		Unbriggable         = 0,
		Free                = 1,
		InBrig_Releasable   = 2,
		InBrig_Unreleasable = 3,
		MAX                 = 4
	};

	/**
	 * Enum Athena.ECrewOwnershipState
	 */
	enum class ECrewOwnershipState : uint8_t
	{
		Neutral  = 0,
		Assigned = 1,
		MAX      = 2
	};

	/**
	 * Enum Athena.ECrewDestroyedReason
	 */
	enum class ECrewDestroyedReason : uint8_t
	{
		AllCrewMembersRemoved = 0,
		ServerMigrated        = 1,
		MAX                   = 2
	};

	/**
	 * Enum Athena.EBrigReleaseReason
	 */
	enum class EBrigReleaseReason : uint8_t
	{
		VoteToRelease   = 0,
		AutoRelease     = 1,
		QuitGameRelease = 2,
		MAX             = 3
	};

	/**
	 * Enum Athena.EShipRegion
	 */
	enum class EShipRegion : uint8_t
	{
		None                  = 0,
		TopDeck_Bow           = 1,
		TopDeck_MainStairs    = 2,
		TopDeck_Hatch         = 3,
		TopDeck_CaptainsCabin = 4,
		TopDeck_WheelDeck     = 5,
		MapDeck_Front         = 6,
		MapDeck_MainStairs    = 7,
		MapDeck_Table         = 8,
		MapDeck_RearStairs    = 9,
		BrigDeck_Stairs       = 10,
		BrigDeck_OutsideBrig  = 11,
		BrigDeck_InsideBrig   = 12,
		MAX                   = 13
	};

	/**
	 * Enum Athena.EShipDeck
	 */
	enum class EShipDeck : uint8_t
	{
		BottomDeck = 0,
		MidDeck    = 1,
		TopDeck    = 2,
		MAX        = 3
	};

	/**
	 * Enum Athena.EBuoyantObjectState
	 */
	enum class EBuoyantObjectState : uint8_t
	{
		Rising       = 0,
		Floating     = 1,
		Sinking      = 2,
		Disappearing = 3,
		MAX          = 4
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct Athena.PlayerStat
	 * Size -> 0x0004
	 */
	struct FPlayerStat
	{
	public:
		uint32_t                                                   StatId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FlameSpecificDataEntry
	 * Size -> 0x0020
	 */
	struct FFlameSpecificDataEntry
	{
	public:
		EFlameOfFateType                                           FlameType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9OIJ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               TextureAsset;                                            // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FPlayerStat                                         StatToFireWhenKilled;                                    // 0x0018(0x0004) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_QP9D[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShantyInstrumentData
	 * Size -> 0x0028
	 */
	struct FShantyInstrumentData
	{
	public:
		EMusicalInstrumentType                                     InstrumentType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HF4Z[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         PlayLead;                                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         PlayAccompaniment;                                       // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopLead;                                                // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopAccompaniment;                                       // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShantyData
	 * Size -> 0x0030
	 */
	struct FShantyData
	{
	public:
		class FName                                                ShantyName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FShantyInstrumentData>                       InstrumentData;                                          // 0x0008(0x0010) Edit, ZeroConstructor
		int32_t                                                    LengthOfShantyInMs;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZPIW[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              UnlockEntitlement;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPlayerStat                                         OnShantyPlayedStat;                                      // 0x0028(0x0004) Edit
		bool                                                       CanRandomPlay;                                           // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CanBeSelected;                                           // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableMigrationWhilePlaying;                            // 0x002E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IJ8M[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ControlObjectActionRuleParams
	 * Size -> 0x0010
	 */
	struct FControlObjectActionRuleParams
	{
	public:
		TArray<EWieldableItemSize>                                 WieldableItemSizesToDisableControl;                      // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MastCollisionProfiles
	 * Size -> 0x0028
	 */
	struct FMastCollisionProfiles
	{
	public:
		class FName                                                CollisionDisabledProfile;                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                PlayerAndItemsCollisionProfile;                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                PlayerOnlyCollisionProfile;                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ItemsOnlyCollisionProfile;                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ProjectilesOnlyCollisionProfile;                         // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastPhysicsComponents
	 * Size -> 0x0038
	 */
	struct FMastPhysicsComponents
	{
	public:
		class UPrimitiveComponent*                                 MastBaseComponent;                                       // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPrimitiveComponent*                                 MastTopComponent;                                        // 0x0008(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPrimitiveComponent*                                 MastWeldedPhysicsBodyComponent;                          // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPrimitiveComponent*                                 WeldedCrowsNestComponent;                                // 0x0018(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPrimitiveComponent*                                 UnweldedCrowsNestComponent;                              // 0x0020(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UPrimitiveComponent*>                         UnweldedCrossBeamComponents;                             // 0x0028(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.MastDamageAudioParams
	 * Size -> 0x00B0
	 */
	struct FMastDamageAudioParams
	{
	public:
		struct FWwiseEmitter                                       MastHingeAudioEmitter;                                   // 0x0000(0x0020)
		class UWwiseObjectPoolWrapper*                             MastHingeAudioPool;                                      // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseEmitter                                       MastImpactAudioEmitter;                                  // 0x0028(0x0020)
		class UWwiseObjectPoolWrapper*                             MastImpactAudioPool;                                     // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastDamaged;                                             // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastFallingStart;                                        // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastFallingStop;                                         // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MasthHoistingStart;                                      // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastHoistingStop;                                        // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastHoistingComplete;                                    // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastFallComplete;                                        // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MastFallenStop;                                          // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MastDamageLevelAudioSwitch;                              // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MastHoistingSpeedAudioSwitch;                            // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MastAngleRTPC;                                           // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MastFallingSpeedRTPC;                                    // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IntentPredictorParams
	 * Size -> 0x0018
	 */
	struct FIntentPredictorParams
	{
	public:
		float                                                      MaxError;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinError;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinCorrectionVelocity;                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinValue;                                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxValue;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       WrapCorrectionToValueRange;                              // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FIKX[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IntentPredictor
	 * Size -> 0x001C
	 */
	struct FIntentPredictor
	{
	public:
		unsigned char                                              UnknownData_4HNK[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIntentPredictorParams                              Params;                                                  // 0x0004(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.ImpactDamageEvent
	 * Size -> 0x0058
	 */
	struct FImpactDamageEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              DamagerType;                                             // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              DirectInstigator;                                        // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              RootInstigator;                                          // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0028(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             SurfaceNormal;                                           // 0x0034(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Velocity;                                                // 0x0040(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      DamageAmount;                                            // 0x004C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageSpread;                                            // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0054(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DealFriendlyFireDamage;                                  // 0x0055(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1KPC[0x2];                                   // 0x0056(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementCriteria
	 * Size -> 0x0018
	 */
	struct FAchievementCriteria
	{
	public:
		struct FPlayerStat                                         PlayerStat;                                              // 0x0000(0x0004) Edit
		unsigned char                                              UnknownData_F6CC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Threshold;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayerStatsOperator                                       Operator;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5WC9[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementDefinition
	 * Size -> 0x0018
	 */
	struct FAchievementDefinition
	{
	public:
		class FName                                                DevCenterId;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FAchievementCriteria>                        UnlockCriteria;                                          // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FogBankManagerFogAvoidanceArea
	 * Size -> 0x0010
	 */
	struct FFogBankManagerFogAvoidanceArea
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariable
	 * Size -> 0x0020
	 */
	struct FQuestVariable
	{
	public:
		unsigned char                                              UnknownData_O52Z[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ParamName;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariableVector
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableVector : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableFloat
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableFloat : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableActor
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableActor : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.WaterPuzzleWaterLevel
	 * Size -> 0x000C
	 */
	struct FWaterPuzzleWaterLevel
	{
	public:
		float                                                      WaterLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FillTransitionTime;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DrainTransitionTime;                                     // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WaterPuzzleRepData
	 * Size -> 0x0008
	 */
	struct FWaterPuzzleRepData
	{
	public:
		int32_t                                                    CurrentWaterLevelIndex;                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TransitionDueToReset;                                    // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IL4G[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutCapacity
	 * Size -> 0x0010
	 */
	struct FItemLoadoutCapacity
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    Capacity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HKPW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadout
	 * Size -> 0x0020
	 */
	struct FItemLoadout
	{
	public:
		TArray<struct FItemLoadoutCapacity>                        Capacities;                                              // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<class UClass*>                                      Items;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ItemSpawnParams
	 * Size -> 0x0028
	 */
	struct FItemSpawnParams
	{
	public:
		struct FWeightedProbabilityRange                           Total;                                                   // 0x0000(0x0020) Edit
		float                                                      AllowedAngleDeviation;                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxZ;                                                    // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemSpawnTransform
	 * Size -> 0x0040
	 */
	struct FItemSpawnTransform
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor
		class UWeightedItemDescSpawnDataAsset*                     ReferencedSpawnDistributionAsset;                        // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Weight;                                                  // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AZBQ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemSpawnTransformWithRandomQuantity
	 * Size -> 0x0040
	 */
	struct FItemSpawnTransformWithRandomQuantity
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor
		class UWeightedItemDescSpawnDataAssetWithRandomQuantity*   ReferencedSpawnDistributionAssetWithRandomQuantity;      // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnRadius;                                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M6U6[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnInstance
	 * Size -> 0x0040
	 */
	struct FSpawnInstance
	{
	public:
		unsigned char                                              UnknownData_OJ06[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CustomLifetimeManagement;                                // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JK28[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnedItem
	 * Size -> 0x0050
	 */
	struct FSpawnedItem
	{
	public:
		TWeakObjectPtr<class AActor>                               SpawnedActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B18Z[0x30];                                  // 0x0010(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       CustomLifetimeManagement;                                // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V6B4[0xF];                                   // 0x0041(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LookAtOffset
	 * Size -> 0x00A0
	 */
	struct FLookAtOffset
	{
	public:
		float                                                      LookAtPitchRate;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LookAtYawRate;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LookAtYawRawScale;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LookAtPitchRawScale;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WO9D[0x90];                                  // 0x0010(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudVisualParameters
	 * Size -> 0x0070
	 */
	struct FCloudVisualParameters
	{
	public:
		bool                                                       RenderInMainPass;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LOGA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ScalingVector;                                           // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           BillboardScale;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           BillboardRandomScale;                                    // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           BillboardRearCutOff;                                     // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           BillboardForeCutOff;                                     // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           BillboardSink;                                           // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      BillboardScaleAlphaDependence;                           // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BillboardRotationRate;                                   // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceFadeExponent;                                    // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceScale;                                         // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceStrength;                                      // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FluffCullDistance;                                       // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MaterialTemplatePointCloudSolid;                         // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MaterialTemplatePointCloudFluffy;                        // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MaterialTemplateStreetCloudSolid;                        // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MaterialTemplateStreetCloudFluffy;                       // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TiledCloudProperties
	 * Size -> 0x0024
	 */
	struct FTiledCloudProperties
	{
	public:
		struct FVector2D                                           TilePosition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CloudTypeIndex;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RelativeRadius;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Scale;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PressureThreshold;                                       // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationYaw;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OverlapTolerance;                                        // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JX85[0x4];                                   // 0x0020(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RenderedCloudProperties
	 * Size -> 0x0030
	 */
	struct FRenderedCloudProperties
	{
	public:
		struct FVector                                             WorldPosition;                                           // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Fade;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Storminess;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationYaw;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StreetRotationFront;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StreetRotationBack;                                      // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Visible;                                                 // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FluffVisible;                                            // 0x0021(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsStreetCloud;                                           // 0x0022(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UpdatesThisFrame;                                        // 0x0023(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GCJ9[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudTypeDefinition
	 * Size -> 0x0030
	 */
	struct FCloudTypeDefinition
	{
	public:
		class UStaticMesh*                                         CloudMesh;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         CloudFluffyMesh;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           ScaleRange;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           StorminessRange;                                         // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ProbabilityWeight;                                       // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OverlapTolerance;                                        // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsStreetCloud;                                           // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CastsShadow;                                             // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7AUP[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudTypeNormalizedWeight
	 * Size -> 0x0018
	 */
	struct FCloudTypeNormalizedWeight
	{
	public:
		struct FLinearColor                                        LodScreenPercentages;                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ProbabilityWeight;                                       // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MeshRadius;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActorId
	 * Size -> 0x0010
	 */
	struct FActorId
	{
	public:
		class FString                                              ActorLocalName;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeakActorHandle
	 * Size -> 0x0028
	 */
	struct FWeakActorHandle
	{
	public:
		struct FActorId                                            ActorId;                                                 // 0x0000(0x0010)
		struct FNetActorPtr                                        NetActorPtr;                                             // 0x0010(0x0014)
		bool                                                       Valid;                                                   // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GK56[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WalkConditionsParams
	 * Size -> 0x0008
	 */
	struct FWalkConditionsParams
	{
	public:
		float                                                      WalkSpeedMultiplier;                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WalkStopThreshold;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SprintConditionsParams
	 * Size -> 0x000C
	 */
	struct FSprintConditionsParams
	{
	public:
		float                                                      ForwardInputVectorTolerance;                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinVelocityForwardDot;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinVelocityMagnitude;                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementKillOpponentFromBehindWithBlunderbuss
	 * Size -> 0x0004
	 */
	struct FAchievementKillOpponentFromBehindWithBlunderbuss
	{
	public:
		float                                                      FacingDirAngleTolerance;                                 // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementHeavyAttackRivalOffTheirShip
	 * Size -> 0x0010
	 */
	struct FAchievementHeavyAttackRivalOffTheirShip
	{
	public:
		class AAthenaCharacter*                                    Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeWindowInSeconds;                                     // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_74RD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementBlockThenHitAndGetBlockedThenTakeHit
	 * Size -> 0x0010
	 */
	struct FAchievementBlockThenHitAndGetBlockedThenTakeHit
	{
	public:
		class AAthenaPlayerCharacter*                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeWindowInSeconds;                                     // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L704[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementHaveADrinkWithAnotherCrewAtAnOutpost
	 * Size -> 0x0020
	 */
	struct FAchievementHaveADrinkWithAnotherCrewAtAnOutpost
	{
	public:
		class AAthenaPlayerCharacter*                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MY9G[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RangeOfCheckInMetres;                                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DrinkConsumedVolumeThreshold;                            // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementKillOpponentInContest
	 * Size -> 0x0008
	 */
	struct FAchievementKillOpponentInContest
	{
	public:
		unsigned char                                              UnknownData_L7HP[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaPlayerCharacterModelSwap
	 * Size -> 0x0068
	 */
	struct FAthenaPlayerCharacterModelSwap
	{
	public:
		class USkeletalMesh*                                       FirstPersonMesh;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              FirstPersonAnimSetDataId;                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPirateGeneratorAdditionalBakeInfo                  FirstPersonAdditionalBakeInfo;                           // 0x0010(0x0020)
		class USkeletalMesh*                                       ThirdPersonMesh;                                         // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              ThirdPersonAnimSetDataId;                                // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPirateGeneratorAdditionalBakeInfo                  ThirdPersonAdditionalBakeInfo;                           // 0x0040(0x0020)
		unsigned char                                              UnknownData_300U[0x8];                                   // 0x0060(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestVariableAsset
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableAsset : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.Alliance
	 * Size -> 0x0028
	 */
	struct FAlliance
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FGuid>                                       Crews;                                                   // 0x0010(0x0010) ZeroConstructor
		unsigned char                                              AllianceIndex;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UEAI[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewAllianceJoinStatus
	 * Size -> 0x0014
	 */
	struct FCrewAllianceJoinStatus
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EAllianceJoinStatus                                        AllianceJoinStatus;                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAllianceJoinStatus                                        LastAllianceJoinStatus;                                  // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HP2T[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCAnimationSequence
	 * Size -> 0x0010
	 */
	struct FNPCAnimationSequence
	{
	public:
		class UAnimSequenceBase*                                   AnimationSequence;                                       // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        FacialAdditive;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCOneShotAnimationElement
	 * Size -> 0x0018
	 */
	struct FNPCOneShotAnimationElement
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FNPCAnimationSequence>                       OneShotSequence;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCAnimationContinuousCycle
	 * Size -> 0x0030
	 */
	struct FNPCAnimationContinuousCycle
	{
	public:
		struct FNPCAnimationSequence                               In;                                                      // 0x0000(0x0010) Edit, BlueprintVisible
		TArray<struct FNPCAnimationSequence>                       Loop;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FNPCAnimationSequence                               Out;                                                     // 0x0020(0x0010) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.NPCContinuousAnimationElement
	 * Size -> 0x0038
	 */
	struct FNPCContinuousAnimationElement
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FNPCAnimationContinuousCycle                        ContinuousSequence;                                      // 0x0008(0x0030) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AnimNotifyWwiseObserver
	 * Size -> 0x0020
	 */
	struct FAnimNotifyWwiseObserver
	{
	public:
		class UWwiseEvent*                                         OnEventPosted;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PreventPlayingPostedEvent;                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3664[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UWwiseEvent*>                                 AdditionalEventsToTrigger;                               // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestVariableClass
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableClass : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.OneShotAnimationElement
	 * Size -> 0x0020
	 */
	struct FOneShotAnimationElement
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               OneShotSequence;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		float                                                      EffectTime;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendTime;                                               // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AnimationContinuousCycle
	 * Size -> 0x0048
	 */
	struct FAnimationContinuousCycle
	{
	public:
		class UAnimSequence*                                       In;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InEffectTime;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KE00[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAnimSequence*>                               Loop;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UBlendSpace1D*                                       LoopHitReact;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Out;                                                     // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               OutAlternates;                                           // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
		float                                                      OutUndockTime;                                           // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JNI6[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContinuousAnimationElement
	 * Size -> 0x0058
	 */
	struct FContinuousAnimationElement
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAnimationContinuousCycle                           ContinuousSequence;                                      // 0x0008(0x0048) Edit, BlueprintVisible
		float                                                      BlendTime;                                               // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0JDY[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SkeletonCustomAnimationDataStructure
	 * Size -> 0x0038
	 */
	struct FSkeletonCustomAnimationDataStructure
	{
	public:
		TArray<struct FOneShotAnimationElement>                    OneShotSequences;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FContinuousAnimationElement>                 ContinuousSequences;                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UNPCHeldObjectData*                                  WieldableCosmeticItemList;                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UWwiseEvent*>                                 AudioEvents;                                             // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotion
	 * Size -> 0x0068
	 */
	struct FAthenaAnimationLocomotion
	{
	public:
		struct FVector                                             CharacterVelocity;                                       // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      WantedMovementSpeed;                                     // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HalfWantedMovementSpeed;                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CharacterMoving;                                         // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RunStopWanted;                                           // 0x0015(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GD81[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TurnRate;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentYaw;                                              // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentDirection;                                        // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TurningActive;                                           // 0x0024(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TurningLeft;                                             // 0x0025(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsSwimming;                                              // 0x0026(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsUnderwaterSwimming;                                    // 0x0027(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      BlendedTurnRate;                                         // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinimumMoveSpeedToTriggerRunStop;                        // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InterpSpeed;                                             // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurnRateToDisableTurns;                                  // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurningAnimationExplicitTime;                            // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FixedBlendedTurnRateForAI;                               // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsInAITurn;                                              // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y6NM[0x17];                                  // 0x0041(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAthenaAnimationInstance*                            CachedOwner;                                             // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2R7U[0x8];                                   // 0x0060(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectLocomotionAnimations
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationObjectLocomotionAnimations
	{
	public:
		class UBlendSpace*                                         Locomotion1;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Locomotion2;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Locomotion3;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Locomotion4;                                             // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LocomotionTurningLeft;                                   // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LocomotionTurningRight;                                  // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LocomotionOutOf;                                         // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LocomotionSwimming;                                      // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectJumpingAnimations
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationObjectJumpingAnimations
	{
	public:
		class UBlendSpace*                                         Start;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Cycle;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         PreImpact;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LandLight;                                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectEquipAnimations
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationObjectEquipAnimations
	{
	public:
		class UAnimSequence*                                       Equip;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         EquipAsBlendSpace;                                       // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         EquipSwimming;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       UnEquip;                                                 // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         UnEquipAsBlendSpace;                                     // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Pickup;                                                  // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Drop;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseEquipBlendSpace;                                      // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseUnequipBlendSpace;                                    // 0x0039(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZP79[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectIdleAnimations
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationObjectIdleAnimations
	{
	public:
		class UAnimSequence*                                       Idle1;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Idle2;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Idle3;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionOneShot
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationObjectActionOneShot
	{
	public:
		TArray<class UAnimSequence*>                               MainAction;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 MainActionLocomotion;                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               AlternateAction;                                         // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 AlternateActionLocomotion;                               // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionContinuousSwimming
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationObjectActionContinuousSwimming
	{
	public:
		class UBlendSpace*                                         MainInSwimming;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainOneShotInSwimming;                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainCycleSwimming;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainOutSwimming;                                         // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotionTurningAnimData
	 * Size -> 0x0008
	 */
	struct FAthenaAnimationLocomotionTurningAnimData
	{
	public:
		class UAnimSequence*                                       Turn90;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionContinuousStruct
	 * Size -> 0x00A8
	 */
	struct FAthenaAnimationObjectActionContinuousStruct
	{
	public:
		class UAnimSequence*                                       MainInto;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainIntoLocomotion;                                      // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OneShotInto;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       MainCycleIdle;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainCycleLocomotion;                                     // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseMainCycleJump;                                        // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8AQF[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationObjectJumpingAnimations             MainCycleJump;                                           // 0x0030(0x0020) Edit, BlueprintVisible
		class UAnimSequence*                                       MainOutOf;                                               // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainOutOfLocomotion;                                     // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationObjectActionContinuousSwimming      MainSwimming;                                            // 0x0060(0x0020) Edit, BlueprintVisible
		struct FAthenaAnimationLocomotionTurningAnimData           TurningLeftAlt;                                          // 0x0080(0x0008) Edit, BlueprintVisible
		struct FAthenaAnimationLocomotionTurningAnimData           TurningRightAlt;                                         // 0x0088(0x0008) Edit, BlueprintVisible
		class UAnimSequence*                                       TurnOutAlt;                                              // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IgnoreOverlayHandAdditiveForAction;                      // 0x0098(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VFPC[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       CustomAdditiveForAction;                                 // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionContinuous
	 * Size -> 0x0150
	 */
	struct FAthenaAnimationObjectActionContinuous
	{
	public:
		struct FAthenaAnimationObjectActionContinuousStruct        MainContinuousActions;                                   // 0x0000(0x00A8) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuousStruct        AlternateContinuousActions;                              // 0x00A8(0x00A8) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionOneShotPitchOverride
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationObjectActionOneShotPitchOverride
	{
	public:
		TArray<class UBlendSpace1D*>                               MainAction;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               AlternateAction;                                         // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectJumpingAnimationsPitchOverride
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationObjectJumpingAnimationsPitchOverride
	{
	public:
		class UBlendSpace1D*                                       Start;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Cycle;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       PreImpact;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       LandLight;                                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionContinuousStructPitchOverride
	 * Size -> 0x0078
	 */
	struct FAthenaAnimationObjectActionContinuousStructPitchOverride
	{
	public:
		class UBlendSpace1D*                                       MainInto;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       MainCycleIdle;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       MainCycleLocomotion;                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBlendSpace1D*>                               VariantCycleIdle;                                        // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor
		bool                                                       UseMainCycleJump;                                        // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IgnoreFullBody;                                          // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_L4VW[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationObjectJumpingAnimationsPitchOverride MainCycleJump;                                           // 0x0030(0x0020) Edit, BlueprintVisible
		class UBlendSpace1D*                                       MainOutOf;                                               // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationObjectActionContinuousSwimming      MainSwimming;                                            // 0x0058(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionContinuousPitchOverride
	 * Size -> 0x00F0
	 */
	struct FAthenaAnimationObjectActionContinuousPitchOverride
	{
	public:
		struct FAthenaAnimationObjectActionContinuousStructPitchOverride MainContinuousActions;                                   // 0x0000(0x0078) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuousStructPitchOverride AlternateContinuousActions;                              // 0x0078(0x0078) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectComplexOneShot
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationObjectComplexOneShot
	{
	public:
		class UAnimSequence*                                       WarmUp;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WarmUpFromBlock;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Action;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Recover;                                                 // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HeavyAttackStunRecover;                                  // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectMeleeV2SpecialAttack
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationObjectMeleeV2SpecialAttack
	{
	public:
		struct FAthenaAnimationObjectComplexOneShot                Attack;                                                  // 0x0000(0x0028) Edit, BlueprintVisible
		struct FAthenaAnimationObjectComplexOneShot                SwimmingAttack;                                          // 0x0028(0x0028) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectMeleeV2
	 * Size -> 0x0140
	 */
	struct FAthenaAnimationObjectMeleeV2
	{
	public:
		TArray<struct FAthenaAnimationObjectComplexOneShot>        ComboAttacks;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FAthenaAnimationObjectComplexOneShot>        ComboAttacksStatic;                                      // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FAthenaAnimationObjectComplexOneShot>        SwimmingComboAttacks;                                    // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FAthenaAnimationObjectComplexOneShot                HeavyAttack;                                             // 0x0030(0x0028) Edit, BlueprintVisible
		struct FAthenaAnimationObjectComplexOneShot                SwimmingHeavyAttack;                                     // 0x0058(0x0028) Edit, BlueprintVisible
		TArray<struct FAthenaAnimationObjectMeleeV2SpecialAttack>  SpecialAttacks;                                          // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       BlockingMainInto;                                        // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingIntoFromCombat;                                  // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         BlockingMainBlendSpace;                                  // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               BlockingFeedbackSequences;                               // 0x00A8(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       BlockingOut;                                             // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingMainIntoSwimming;                                // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         BlockingMainBlendSpaceSwimming;                          // 0x00C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               BlockingFeedbackSequencesSwimming;                       // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       BlockingOutSwimming;                                     // 0x00E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationObjectJumpingAnimations             BlockingJump;                                            // 0x00E8(0x0020) Edit, BlueprintVisible
		class UBlendSpace*                                         CombatLocomotion;                                        // 0x0108(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CombatLocomotionTurningLeft;                             // 0x0110(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CombatLocomotionTurningRight;                            // 0x0118(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CombatLocomotionTurnOut;                                 // 0x0120(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Dodge;                                                   // 0x0128(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LungeWarmupLocomotion;                                   // 0x0130(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              AttacksRespectFullBodyFlag : 1;                          // 0x0138(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor
		unsigned char                                              UnknownData_35MO[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldAnimationParams
	 * Size -> 0x0040
	 */
	struct FWieldAnimationParams
	{
	public:
		EWieldAnimationLocation                                    WieldLocation;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E4RU[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PropOffset;                                              // 0x0010(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectFacial
	 * Size -> 0x0070
	 */
	struct FAthenaAnimationObjectFacial
	{
	public:
		TArray<class UAnimMontage*>                                PrimaryContinuous;                                       // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                SecondaryContinuous;                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                PrimaryOneShot;                                          // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                SecondaryOneShot;                                        // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                MeleeBlocking;                                           // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                MeleeAttack;                                             // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimMontage*>                                MeleeBlockReact;                                         // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonKnockbackLocomotion
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationSkeletonKnockbackLocomotion
	{
	public:
		class UAnimSequence*                                       Forwards;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Backwards;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonKnockbackLocomotionStrength
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationSkeletonKnockbackLocomotionStrength
	{
	public:
		struct FAthenaAnimationSkeletonKnockbackLocomotion         LowStrength;                                             // 0x0000(0x0010) Edit, BlueprintVisible
		struct FAthenaAnimationSkeletonKnockbackLocomotion         HighStrength;                                            // 0x0010(0x0010) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCoreObjectAnimations
	 * Size -> 0x0910
	 */
	struct FAthenaAnimationCoreObjectAnimations
	{
	public:
		struct FAthenaAnimationObjectLocomotionAnimations          Locomotion;                                              // 0x0000(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectLocomotionAnimations          AlternateLocomotion;                                     // 0x0040(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectJumpingAnimations             Jumping;                                                 // 0x0080(0x0020) Edit, BlueprintVisible
		struct FAthenaAnimationObjectJumpingAnimations             AlternateJumping;                                        // 0x00A0(0x0020) Edit, BlueprintVisible
		struct FAthenaAnimationObjectEquipAnimations               Equipping;                                               // 0x00C0(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectIdleAnimations                Idles;                                                   // 0x0100(0x0018) Edit, BlueprintVisible
		struct FAthenaAnimationObjectIdleAnimations                AlternateIdles;                                          // 0x0118(0x0018) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionOneShot                 ActionPrimarySingle;                                     // 0x0130(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuous              ActionPrimaryContinuous;                                 // 0x0170(0x0150) Edit, BlueprintVisible
		bool                                                       PrimaryActionPitchOverride;                              // 0x02C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_481O[0x7];                                   // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationObjectActionOneShotPitchOverride    ActionPrimarySinglePitchOverride;                        // 0x02C8(0x0020) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuousPitchOverride ActionPrimaryContinuousPitchOverride;                    // 0x02E8(0x00F0) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionOneShot                 ActionSecondarySingle;                                   // 0x03D8(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuous              ActionSecondaryContinuous;                               // 0x0418(0x0150) Edit, BlueprintVisible
		bool                                                       SecondaryActionPitchOverride;                            // 0x0568(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LW5S[0x7];                                   // 0x0569(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationObjectActionOneShotPitchOverride    ActionSecondarySinglePitchOverride;                      // 0x0570(0x0020) Edit, BlueprintVisible
		struct FAthenaAnimationObjectActionContinuousPitchOverride ActionSecondaryContinuousPitchOverride;                  // 0x0590(0x00F0) Edit, BlueprintVisible
		struct FAthenaAnimationObjectMeleeV2                       MeleeV2;                                                 // 0x0680(0x0140) Edit, BlueprintVisible
		class UAnimSequence*                                       HandAdditive;                                            // 0x07C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HandAdditiveDeactivationBlendTime;                       // 0x07C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QWIG[0x4];                                   // 0x07CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          OffsetLeftHand;                                          // 0x07D0(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor
		struct FTransform                                          OffsetRightHand;                                         // 0x0800(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor
		struct FWieldAnimationParams                               Params;                                                  // 0x0830(0x0040) Edit, BlueprintVisible
		struct FAthenaAnimationObjectFacial                        Facial;                                                  // 0x0870(0x0070) Edit, BlueprintVisible
		bool                                                       RangedWeapon;                                            // 0x08E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseAlternateAsTransition;                                // 0x08E1(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CSKQ[0x6];                                   // 0x08E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationSkeletonKnockbackLocomotionStrength KnockBack;                                               // 0x08E8(0x0020) Edit, BlueprintVisible
		class UAnimSequence*                                       ScreamStun;                                              // 0x0908(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectTargetingOptions
	 * Size -> 0x003C
	 */
	struct FAthenaAnimationObjectTargetingOptions
	{
	public:
		EObjectPitchTargetingLimbs                                 ArmSelection;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WF26[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UpperClampTargetingAngle;                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LowerClampTargetingAngle;                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShoulderInfluenceUpper;                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShoulderInfluenceLower;                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             VirtualPivotOffsetUpper;                                 // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             VirtualPivotOffsetLower;                                 // 0x0020(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LockHandOrientation;                                     // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_O6HJ[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             VirtualPivotOffsetLerped;                                // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPitchControlStates
	 * Size -> 0x0168
	 */
	struct FAthenaAnimationPitchControlStates
	{
	public:
		struct FAthenaAnimationObjectTargetingOptions              StandardPassive;                                         // 0x0000(0x003C) Edit, BlueprintVisible, Protected
		struct FAthenaAnimationObjectTargetingOptions              StandardWater;                                           // 0x003C(0x003C) Edit, BlueprintVisible, Protected
		struct FAthenaAnimationObjectTargetingOptions              Action1;                                                 // 0x0078(0x003C) Edit, BlueprintVisible, Protected
		struct FAthenaAnimationObjectTargetingOptions              Action1Water;                                            // 0x00B4(0x003C) Edit, BlueprintVisible, Protected
		struct FAthenaAnimationObjectTargetingOptions              Action2;                                                 // 0x00F0(0x003C) Edit, BlueprintVisible, Protected
		struct FAthenaAnimationObjectTargetingOptions              Action2Water;                                            // 0x012C(0x003C) Edit, BlueprintVisible, Protected
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFirstPersonTurnDelay
	 * Size -> 0x000C
	 */
	struct FAthenaAnimationFirstPersonTurnDelay
	{
	public:
		float                                                      MaxAngle;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DelayOutSpeed;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DelayInSpeed;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFirstPersonTurnDelayStates
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationFirstPersonTurnDelayStates
	{
	public:
		struct FAthenaAnimationFirstPersonTurnDelay                PassiveState;                                            // 0x0000(0x000C) Edit, BlueprintVisible
		struct FAthenaAnimationFirstPersonTurnDelay                ContinuousUse;                                           // 0x000C(0x000C) Edit, BlueprintVisible
		float                                                      TurnDelayAngle;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InvTurnDelayAngle;                                       // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLoadObjectsWrapper
	 * Size -> 0x0AA0
	 */
	struct FAthenaAnimationLoadObjectsWrapper
	{
	public:
		struct FAthenaAnimationCoreObjectAnimations                ObjectAnimation;                                         // 0x0000(0x0910) Edit, BlueprintVisible
		struct FAthenaAnimationPitchControlStates                  ObjectTargeting3rdPerson;                                // 0x0910(0x0168) Edit, BlueprintVisible
		struct FAthenaAnimationFirstPersonTurnDelayStates          FirstPersonTurnDelay;                                    // 0x0A78(0x0020) Edit, BlueprintVisible
		class UClass*                                              ObjectId;                                                // 0x0A98(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationHandHeldItemParams
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationHandHeldItemParams
	{
	public:
		bool                                                       LeftArmOverlayActive;                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RightArmOverlayActive;                                   // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UpperBodyOverlayActive;                                  // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FullBodyOverlayActive;                                   // 0x0003(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SpineOverlayActive;                                      // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SpineLockActive;                                         // 0x0005(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ObjectActive;                                            // 0x0006(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ObjectOverrideStateActive;                               // 0x0007(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              OverlayAnimationName;                                    // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		EItemPassiveState                                          ObjectPassiveState;                                      // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       QuickStow;                                               // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Reload;                                                  // 0x001A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ContinuousInteractionCustomLocomotionEnabled;            // 0x001B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JHCJ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationIdleVariantChange
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationIdleVariantChange
	{
	public:
		float                                                      CurrentTime;                                             // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TriggerTime;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VariantID;                                               // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       VariantCompleted;                                        // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P3G8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HandOnWheelAnimationRanges
	 * Size -> 0x0040
	 */
	struct FHandOnWheelAnimationRanges
	{
	public:
		struct FFloatRange                                         LeftHandOnWheelA;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         LeftHandOnWheelB;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         RightHandOnWheelA;                                       // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         RightHandOnWheelB;                                       // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WheelIKActivationRanges
	 * Size -> 0x0040
	 */
	struct FWheelIKActivationRanges
	{
	public:
		struct FFloatRange                                         LeftArmDownRangeA;                                       // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         LeftArmDownRangeB;                                       // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         RightArmDownRangeA;                                      // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         RightArmDownRangeB;                                      // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWheel
	 * Size -> 0x01D0
	 */
	struct FAthenaAnimationWheel
	{
	public:
		struct FSocketId                                           LeftHandMaleSocket;                                      // 0x0000(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           RightHandMaleSocket;                                     // 0x0020(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           LeftHandFemaleSocket;                                    // 0x0040(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           RightHandFemaleSocket;                                   // 0x0060(0x0020) Edit, DisableEditOnInstance
		float                                                      TranslationStrength;                                     // 0x0080(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationStrength;                                        // 0x0084(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendInSpeed;                                            // 0x0088(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendOutSpeed;                                           // 0x008C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FHandOnWheelAnimationRanges                         HandOnWheelAnimationRanges;                              // 0x0090(0x0040) Edit, DisableEditOnInstance
		struct FWheelIKActivationRanges                            WheelArmIKDownWithinRange;                               // 0x00D0(0x0040) Edit, DisableEditOnInstance
		EWheelAnimationType                                        WheelAnimationType;                                      // 0x0110(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5BEW[0x3];                                   // 0x0111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WheelTime;                                               // 0x0114(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WheelDirection;                                          // 0x0118(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightFingerAlpha;                                        // 0x011C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftFingerAlpha;                                         // 0x0120(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullBodyAlpha;                                           // 0x0124(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WheelDockingHandClaspAlpha;                              // 0x0128(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LeftWheelArmDown;                                        // 0x012C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RightWheelArmDown;                                       // 0x012D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_74Y9[0x2];                                   // 0x012E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ControlledObject;                                        // 0x0130(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GEZ0[0x98];                                  // 0x0138(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCapstan
	 * Size -> 0x0158
	 */
	struct FAthenaAnimationCapstan
	{
	public:
		float                                                      IntentInterpSpeed;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           CapstanAngularVelocityRange;                             // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FVector2D                                           AnimationRemapSpeedRange;                                // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      AngularVelocityInterpSpeed;                              // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FSocketId                                           LeftHandMaleSocket;                                      // 0x0018(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           RightHandMaleSocket;                                     // 0x0038(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           LeftHandFemaleSocket;                                    // 0x0058(0x0020) Edit, DisableEditOnInstance
		struct FSocketId                                           RightHandFemaleSocket;                                   // 0x0078(0x0020) Edit, DisableEditOnInstance
		float                                                      TranslationStrength;                                     // 0x0098(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationStrength;                                        // 0x009C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendInSpeed;                                            // 0x00A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendOutSpeed;                                           // 0x00A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AnimationOverride;                                       // 0x00A8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		EAthenaAnimationCapstanState                               CapstanState;                                            // 0x00A9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NV7I[0x2];                                   // 0x00AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AngularVelocityWanted;                                   // 0x00AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              ControlledObject;                                        // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XX8T[0xA0];                                  // 0x00B8(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationControllableFacialAnimData
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationControllableFacialAnimData
	{
	public:
		class UBlendSpace1D*                                       Capstan;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SailAction;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SailIdle;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CannonFire;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CannonAim;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HarpoonFire;                                             // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFacialAnimData
	 * Size -> 0x0090
	 */
	struct FAthenaAnimationFacialAnimData
	{
	public:
		int32_t                                                    FacialIdleAnimationIndex0;                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FacialIdleAnimationIndex1;                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               IdleAnimations;                                          // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       Death;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HitReact;                                                // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationControllableFacialAnimData          Controllables;                                           // 0x0028(0x0030) Edit, BlueprintVisible
		class UAnimMontage*                                        Sick;                                                    // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Cough;                                                   // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Talk;                                                    // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       UnderwaterIdle;                                          // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        CurrentFacialMontage;                                    // 0x0078(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        PlayingFacialMontage;                                    // 0x0080(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFacialPriority                                            CurrentFacialPriority;                                   // 0x0088(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MDK9[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFire
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationFire
	{
	public:
		float                                                      MinimumDistanceToStartCoughing;                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              Coughing : 1;                                            // 0x0004(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_O21B[0x1B];                                  // 0x0005(0x001B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationRowboatAnimationsFirstPerson
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationRowboatAnimationsFirstPerson
	{
	public:
		class UAnimSequence*                                       SitDown;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Stand;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Idle;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Row;                                                     // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Recover;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Brake;                                                   // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationRowboatAnimationsThirdPerson
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationRowboatAnimationsThirdPerson
	{
	public:
		class UAnimSequence*                                       SitDown;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Stand;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Idle;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Row;                                                     // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Recover;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       IntoRow;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       IntoRowBrake;                                            // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       BrakeRow;                                                // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       BrakeRecover;                                            // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       BrakeIdle;                                               // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationRowboatAnimationsPassenger
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationRowboatAnimationsPassenger
	{
	public:
		class UAnimSequence*                                       PassengerIntoSitting;                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       PassengerSittingIdle;                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       PassengerStand;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationRowboatParams
	 * Size -> 0x00C8
	 */
	struct FAthenaAnimationRowboatParams
	{
	public:
		bool                                                       InLeftArmRow;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InLeftArmRecover;                                        // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InRightArmRow;                                           // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InRightArmRecover;                                       // 0x0003(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      LeftArmForce;                                            // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftArmRecover;                                          // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmForce;                                           // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmRecover;                                         // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERowBraking                                                Braking;                                                 // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       BrakingLeftOrBoth;                                       // 0x0015(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       BrakingRightOrBoth;                                      // 0x0016(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5QER[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Direction;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayIdle;                                                // 0x001C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LeftArmInactive;                                         // 0x001D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RightArmInactive;                                        // 0x001E(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P3E5[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CameraAdjustment;                                        // 0x0020(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsSeated;                                                // 0x002C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_86QT[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationRowboatAnimationsFirstPerson        RowBoatAnimationsFirstPerson;                            // 0x0030(0x0030) BlueprintVisible
		struct FAthenaAnimationRowboatAnimationsThirdPerson        RowBoatAnimationsThirdPerson;                            // 0x0060(0x0050) BlueprintVisible
		struct FAthenaAnimationRowboatAnimationsPassenger          RowBoatAnimationsPassenger;                              // 0x00B0(0x0018) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationRowing
	 * Size -> 0x00C0
	 */
	struct FAthenaAnimationRowing
	{
	public:
		class AActor*                                              ControlledObject;                                        // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              CachedPlayerCharacter;                                   // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              CosmeticOarClass;                                        // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PNQR[0xA8];                                  // 0x0018(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWaterPumpAnimData
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationWaterPumpAnimData
	{
	public:
		class UAnimSequence*                                       IntoWaterPump;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WaterPumpIdle;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WaterPumpAction;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WaterPumpActionOverlay;                                  // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OutOfWaterPump;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWaterPumpParams
	 * Size -> 0x000C
	 */
	struct FAthenaAnimationWaterPumpParams
	{
	public:
		float                                                      WaterPumpHandlePosition;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterPumpHandlePreviousPosition;                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       WaterPumpHandleInMotion;                                 // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H113[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFishingParams
	 * Size -> 0x0034
	 */
	struct FAthenaAnimationFishingParams
	{
	public:
		EFishingState                                              FishingState;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InFishing;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0IZZ[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           RodBend;                                                 // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ReelSpeed;                                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CastFailed;                                              // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsFishHookedAndVisible;                                  // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XXAD[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           PlayerInputForce;                                        // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      TensionShake;                                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LineSnapShake;                                           // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IKIsActive;                                              // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_E79M[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IKBlendInSpeed;                                          // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IKBlendIOutSpeed;                                        // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsComedyItem;                                            // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EFishingState                                              FishingJIPState;                                         // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KX1O[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFishing
	 * Size -> 0x0340
	 */
	struct FAthenaAnimationFishing
	{
	public:
		bool                                                       AnimationOverride;                                       // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V3E8[0x31F];                                 // 0x0001(0x031F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              FishingRodActor;                                         // 0x0320(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              FishingFloat;                                            // 0x0328(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAthenaAnimationInstance*                            OwningAnimationInstance;                                 // 0x0330(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BARW[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWaterSlideControlAnimData
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationWaterSlideControlAnimData
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Action;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Outof;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsSliding;                                               // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OIWW[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationJumping
	 * Size -> 0x00D0
	 */
	struct FAthenaAnimationJumping
	{
	public:
		EAthenaAnimationJumpingState                               JumpingState;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EC72[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreImpactTime;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    JumpSequence;                                            // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LandingSequence;                                         // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              FiredFromActor : 1;                                      // 0x0010(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              Jumping : 1;                                             // 0x0010(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_8HZ1[0xBF];                                  // 0x0011(0x00BF) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWaterPump
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationWaterPump
	{
	public:
		unsigned char                                              UnknownData_DNX8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              WaterPump;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EKCQ[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLODSettings
	 * Size -> 0x0003
	 */
	struct FAthenaAnimationLODSettings
	{
	public:
		EIKState                                                   IKState;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIKSolverType                                              IKSolverType;                                            // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIKFootPlantingState                                       IKFootPlantingState;                                     // 0x0002(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWieldedItemStateMachine
	 * Size -> 0x0510
	 */
	struct FAthenaAnimationWieldedItemStateMachine
	{
	public:
		EWieldedItemAnimationState                                 CurrentState;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldedItemAnimationState                                 PreviousState;                                           // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ExpectingTransition;                                     // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XTDI[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ContinuousUseInputId;                                    // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              OutOfContinuousUseInputId;                               // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              OneShotUseInputId;                                       // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       OneShotIsAlternate;                                      // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ContinuousIsAlternate;                                   // 0x0021(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EWieldableItemAnimVariant                                  OneShotAnimationVariant;                                 // 0x0022(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IdleIsAlternate;                                         // 0x0023(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePrimaryContinuousAnimations;                          // 0x0024(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePrimaryContinuousOutOfAnimations;                     // 0x0025(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePrimaryOneShotAnimations;                             // 0x0026(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RLT5[0x29];                                  // 0x0027(0x0029) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       LastValidAnimSequence;                                   // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       LastValidBlendspace;                                     // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              PreviousWieldedItem;                                     // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DuplicateTransition;                                     // 0x0068(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q909[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WieldSockets[0x7];                                       // 0x006C(0x0038) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M5FB[0x46C];                                 // 0x00A4(0x046C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLoadObjectByID
	 * Size -> 0x0930
	 */
	struct FAthenaAnimationLoadObjectByID
	{
	public:
		int32_t                                                    LoadedObjectID;                                          // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ObjectFound;                                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3DJS[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CharacterType;                                           // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UScriptStruct*                                       DestinationStruct;                                       // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FJF4[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationCoreObjectAnimations                LoadedObjectAnimations;                                  // 0x0020(0x0910) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationActiveOneShotAnimationStruct
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationActiveOneShotAnimationStruct
	{
	public:
		class UAnimSequence*                                       Action;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ActionPitchOverride;                                     // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         ActionLocomotion;                                        // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UsePitchOverride;                                        // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LocomotingWithPitchOverrideDisabled;                     // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IdleWithPitchOverrideDisabled;                           // 0x001A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TGSC[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionOneShotPlayingStruct
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationObjectActionOneShotPlayingStruct
	{
	public:
		class UAnimSequence*                                       Action;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionVariant1;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionVariant2;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionVariant3;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionVariant4;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationActiveItemComplexAnimData
	 * Size -> 0x0038
	 */
	struct FAthenaAnimationActiveItemComplexAnimData
	{
	public:
		class UAnimSequence*                                       WarmUp;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HeavyWarmUp;                                             // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Action;                                                  // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Recover;                                                 // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HeavyAttackStunRecover;                                  // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldableItemComplexOneShotAnimType                       AnimType;                                                // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ID4X[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WarmUpPlaySpeed;                                         // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              IsHeavyAttackActive : 1;                                 // 0x0030(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_EYLD[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectComplexOneShotPlaySpeeds
	 * Size -> 0x0014
	 */
	struct FAthenaAnimationObjectComplexOneShotPlaySpeeds
	{
	public:
		float                                                      WarmUpPlaySpeed;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WarmUpFromBlockPlaySpeed;                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ActionPlaySpeed;                                         // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RecoverPlaySpeed;                                        // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HeavyAttackStunRecoverPlaySpeed;                         // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectMeleeBlocking
	 * Size -> 0x0060
	 */
	struct FAthenaAnimationObjectMeleeBlocking
	{
	public:
		class UAnimSequence*                                       BlockingInto;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingIntoFromCombat;                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         BlockingMainBlendSpace;                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingFeedbackSequenceA;                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingFeedbackSequenceB;                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingOut;                                             // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Dodge;                                                   // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingIntoSwimming;                                    // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         BlockingMainBlendSpaceSwimming;                          // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingFeedbackSequenceASwimming;                       // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingFeedbackSequenceBSwimming;                       // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BlockingOutSwimming;                                     // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFishingAnimations
	 * Size -> 0x0090
	 */
	struct FAthenaAnimationFishingAnimations
	{
	public:
		class UAnimSequence*                                       CastIntoHoldBack;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         CastHoldBackLoop;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CastForwards;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CastHoldLoop;                                            // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CastToFishing;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CastFail;                                                // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         Fishing;                                                 // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       FishingAdditive;                                         // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       IntoFighting;                                            // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         FightingCentral;                                         // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       FightingAdditive;                                        // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Linesnap;                                                // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SuccessReelIn;                                           // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ComedyItemSuccessReelIn;                                 // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ShakingAdditive;                                         // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LineSnapShakingAdditive;                                 // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       FishingToIdle;                                           // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       FishingToUnequip;                                        // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAsyncLoadedFishingAnimations
	 * Size -> 0x01E0
	 */
	struct FAthenaAnimationAsyncLoadedFishingAnimations
	{
	public:
		TAssetPtr<class UAnimSequence>                             CastIntoHoldBack;                                        // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_4AM8[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               CastHoldBackLoop;                                        // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_XAVG[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             CastForwards;                                            // 0x0040(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_J7IM[0x4];                                   // 0x005C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             CastHoldLoop;                                            // 0x0060(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_HFAO[0x4];                                   // 0x007C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             CastToFishing;                                           // 0x0080(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_A5NK[0x4];                                   // 0x009C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             CastFail;                                                // 0x00A0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_R75G[0x4];                                   // 0x00BC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UBlendSpace*                                         Fishing;                                                 // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       FishingAdditive;                                         // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TAssetPtr<class UBlendSpace1D>                             IntoFighting;                                            // 0x00D0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_G02V[0x4];                                   // 0x00EC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               FightingCentral;                                         // 0x00F0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_G80N[0x4];                                   // 0x010C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace1D>                             FightingAdditive;                                        // 0x0110(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_I74N[0x4];                                   // 0x012C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace1D>                             Linesnap;                                                // 0x0130(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_YU2L[0x4];                                   // 0x014C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UAnimSequence*                                       SuccessReelIn;                                           // 0x0150(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TAssetPtr<class UAnimSequence>                             ComedyItemSuccessReelIn;                                 // 0x0158(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_IVQ0[0x4];                                   // 0x0174(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             ShakingAdditive;                                         // 0x0178(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_0YIC[0x4];                                   // 0x0194(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             LineSnapShakingAdditive;                                 // 0x0198(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_F5M0[0x4];                                   // 0x01B4(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UAnimSequence*                                       FishingToIdle;                                           // 0x01B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TAssetPtr<class UAnimSequence>                             FishingToUnequip;                                        // 0x01C0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_TYRH[0x4];                                   // 0x01DC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAsyncLoadedLocomotionAnimations
	 * Size -> 0x0100
	 */
	struct FAthenaAnimationAsyncLoadedLocomotionAnimations
	{
	public:
		TAssetPtr<class UBlendSpace>                               Locomotion1;                                             // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_QZRP[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               Locomotion2;                                             // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_IJHI[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               Locomotion3;                                             // 0x0040(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_M8GO[0x4];                                   // 0x005C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               Locomotion4;                                             // 0x0060(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_FQOF[0x4];                                   // 0x007C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             LocomotionTurningLeft;                                   // 0x0080(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_13TM[0x4];                                   // 0x009C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             LocomotionTurningRight;                                  // 0x00A0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_QC1B[0x4];                                   // 0x00BC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             LocomotionOutOf;                                         // 0x00C0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_JNX0[0x4];                                   // 0x00DC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               LocomotionSwimming;                                      // 0x00E0(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_BEGF[0x4];                                   // 0x00FC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAsyncLoadedObjectJumpingAnimations
	 * Size -> 0x0080
	 */
	struct FAthenaAnimationAsyncLoadedObjectJumpingAnimations
	{
	public:
		TAssetPtr<class UBlendSpace>                               Start;                                                   // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_1U11[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               Cycle;                                                   // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z6LT[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               PreImpact;                                               // 0x0040(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_HKPT[0x4];                                   // 0x005C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UBlendSpace>                               LandLight;                                               // 0x0060(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_TTPR[0x4];                                   // 0x007C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAsyncLoadedObjectIdleAnimations
	 * Size -> 0x0060
	 */
	struct FAthenaAnimationAsyncLoadedObjectIdleAnimations
	{
	public:
		TAssetPtr<class UAnimSequence>                             Idle1;                                                   // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_R4XK[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             Idle2;                                                   // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_18DG[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             Idle3;                                                   // 0x0040(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_JSQU[0x4];                                   // 0x005C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationItemAnimationCache
	 * Size -> 0x00C0
	 */
	struct FAthenaAnimationItemAnimationCache
	{
	public:
		struct FAthenaAnimationObjectEquipAnimations               EquipAnimations;                                         // 0x0000(0x0040)
		struct FAthenaAnimationObjectLocomotionAnimations          LocomotionAnimations;                                    // 0x0040(0x0040)
		struct FAthenaAnimationObjectJumpingAnimations             JumpingAnimations;                                       // 0x0080(0x0020)
		struct FAthenaAnimationObjectIdleAnimations                IdleAnimations;                                          // 0x00A0(0x0018)
		class UAnimSequence*                                       HandAdditive;                                            // 0x00B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLoadOnDemandItemsAnimgraphStructure
	 * Size -> 0x0760
	 */
	struct FAthenaAnimationLoadOnDemandItemsAnimgraphStructure
	{
	public:
		struct FAthenaAnimationFishingAnimations                   FishingAnimationsToUse;                                  // 0x0000(0x0090) BlueprintVisible, BlueprintReadOnly
		struct FAthenaAnimationObjectEquipAnimations               EquipAnimationsToUse;                                    // 0x0090(0x0040) BlueprintVisible, BlueprintReadOnly
		struct FAthenaAnimationObjectLocomotionAnimations          LocomotionAnimationsToUse;                               // 0x00D0(0x0040) BlueprintVisible, BlueprintReadOnly
		struct FAthenaAnimationObjectJumpingAnimations             JumpingAnimationsToUse;                                  // 0x0110(0x0020) BlueprintVisible, BlueprintReadOnly
		struct FAthenaAnimationObjectIdleAnimations                IdleAnimationsToUse;                                     // 0x0130(0x0018) BlueprintVisible, BlueprintReadOnly
		class UAnimSequence*                                       HandAdditiveToUse;                                       // 0x0148(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              CurrentWieldedItemID;                                    // 0x0150(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FAthenaAnimationAsyncLoadedFishingAnimations        FishingAnimationsToLoad;                                 // 0x0158(0x01E0)
		struct FAthenaAnimationAsyncLoadedLocomotionAnimations     LocomotionAnimationsToLoad;                              // 0x0338(0x0100)
		struct FAthenaAnimationAsyncLoadedObjectJumpingAnimations  JumpingAnimationsToLoad;                                 // 0x0438(0x0080)
		struct FAthenaAnimationAsyncLoadedObjectIdleAnimations     IdleAnimationsToLoad;                                    // 0x04B8(0x0060)
		TAssetPtr<class UAnimSequence>                             HandAdditiveToLoad;                                      // 0x0518(0x001C) ELEMENT_SIZE_MISMATCH UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_VY6B[0x4];                                   // 0x0534(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FAthenaAnimationItemAnimationCache                  CachedItemAnimations;                                    // 0x0538(0x00C0)
		struct FAthenaAnimationItemAnimationCache                  ItemFallbackAnimations;                                  // 0x05F8(0x00C0)
		class UClass*                                              PlayerCharacterType;                                     // 0x06B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ItemId;                                                  // 0x06C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UDynamicAnimationAllocationTelemtry*                 DynamicAnimationAllocationTelemtry;                      // 0x06C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L2T6[0x90];                                  // 0x06D0(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationDebugTrackingParams
	 * Size -> 0x0004
	 */
	struct FAthenaAnimationDebugTrackingParams
	{
	public:
		bool                                                       TrackObjectActive;                                       // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TrackOverlayState;                                       // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TrackActiveAnimations;                                   // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TrackOverlayFlags;                                       // 0x0003(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.DamageInstance
	 * Size -> 0x0030
	 */
	struct FDamageInstance
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected
		class AActor*                                              DirectInstigator;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		class AActor*                                              RootInstigator;                                          // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		class AController*                                         RootInstigatorController;                                // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		float                                                      Amount;                                                  // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x002C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		unsigned char                                              UnknownData_6FRM[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationDeathData
	 * Size -> 0x0038
	 */
	struct FAthenaAnimationDeathData
	{
	public:
		struct FDamageInstance                                     KillingDamage;                                           // 0x0000(0x0030) BlueprintVisible, BlueprintReadOnly
		ECharacterDeathType                                        DeathType;                                               // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_A8KK[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              IsDead : 1;                                              // 0x0034(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              Reviving : 1;                                            // 0x0034(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_SRCC[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationDeathAnimData
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationDeathAnimData
	{
	public:
		class UAnimSequence*                                       SwimmingSurfaceDeath;                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LocomotionDeath;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       DrowningDeath;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WakeUp;                                                  // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       WakeUpSwimming;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       DrowningDeath3rdPerson;                                  // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BeckonInto;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BeckonLoop;                                              // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationDeath
	 * Size -> 0x0100
	 */
	struct FAthenaAnimationDeath
	{
	public:
		unsigned char                                              UnknownData_VJK2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationDeathData                           DeathData;                                               // 0x0008(0x0038) BlueprintVisible, BlueprintReadOnly
		struct FAthenaAnimationDeathAnimData                       DeathAnimData;                                           // 0x0040(0x0040) BlueprintVisible, BlueprintReadOnly
		class UAthenaAnimationDeathDataAsset*                      DeathDataAsset;                                          // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VTOG[0x78];                                  // 0x0088(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationUndoRepairAnimData
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationUndoRepairAnimData
	{
	public:
		class UAnimSequence*                                       UndoRepairInto;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       UndoRepairLoop;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationUndoRepair
	 * Size -> 0x0070
	 */
	struct FAthenaAnimationUndoRepair
	{
	public:
		struct FAthenaAnimationUndoRepairAnimData                  UndoRepairAnimData;                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly
		bool                                                       UndoingRepair;                                           // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WGHM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAthenaAnimationUndoRepairDataAsset*                 UndoRepairDataAsset;                                     // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_URBX[0x50];                                  // 0x0020(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSittingAnimData
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationSittingAnimData
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Loop;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSitting
	 * Size -> 0x0070
	 */
	struct FAthenaAnimationSitting
	{
	public:
		struct FAthenaAnimationSittingAnimData                     SittingAnimData;                                         // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly
		bool                                                       AnimationLoaded;                                         // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IB4N[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAthenaAnimationSittingDataAsset*                    SittingDataAsset;                                        // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XN9O[0x50];                                  // 0x0020(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCamera
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationCamera
	{
	public:
		float                                                      CameraAlpha;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraLookYawTime;                                       // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraLookPitchTime;                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraYaw;                                               // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraPitch;                                             // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECameraLookatAnimationType                                 CameraObjectAttachmentType;                              // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_P10B[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFirstPersonAnimatic
	 * Size -> 0x0080
	 */
	struct FAthenaAnimationFirstPersonAnimatic
	{
	public:
		unsigned char                                              IsFirstPersonAnimaticActive : 1;                         // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor
		unsigned char                                              IsFirstPersonCustomAnimatic : 1;                         // 0x0000(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor
		unsigned char                                              UnknownData_VQHM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       FirstPersonAnimationToPlay;                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UFirstPersonAnimaticList*                            FirstPersonAnimaticList;                                 // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BYOO[0x68];                                  // 0x0018(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationIKLimbStretch
	 * Size -> 0x000C
	 */
	struct FAthenaAnimationIKLimbStretch
	{
	public:
		float                                                      IKStretchArms;                                           // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IKStretchLegs;                                           // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IKStretchSpine;                                          // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LadderBlendParams
	 * Size -> 0x000C
	 */
	struct FLadderBlendParams
	{
	public:
		float                                                      RotationBlendStartByPercentage;                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationBlendEndByPercentage;                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LocationBlendEndByPercentage;                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LadderDefinition
	 * Size -> 0x001C
	 */
	struct FLadderDefinition
	{
	public:
		ELadderType                                                LadderType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9YIV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderBlendParams                                  OnTopLadderBlendParams;                                  // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly
		struct FLadderBlendParams                                  OffTopLadderBlendParams;                                 // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLadder
	 * Size -> 0x02B0
	 */
	struct FAthenaAnimationLadder
	{
	public:
		float                                                      TranslationStrength;                                     // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationStrength;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendInSpeed;                                            // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendOutSpeed;                                           // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AnimationOverride;                                       // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_25TV[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimationLoopMod;                                        // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HeightPerStep;                                           // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LeftHandSocketName;                                      // 0x001C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RightHandSocketName;                                     // 0x0024(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LeftFootSocketName;                                      // 0x002C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RightFootSocketName;                                     // 0x0034(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAthenaAnimationLadderState                                LadderState;                                             // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAthenaAnimationLadderTransitionState                      LadderTransitionState;                                   // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BRZQ[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderDefinition                                   LadderDefinition;                                        // 0x0040(0x001C) BlueprintVisible, BlueprintReadOnly
		float                                                      ClimbDistance;                                           // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AnimationDistance;                                       // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerIntent;                                            // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ClimbOnComplete;                                         // 0x0068(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ClimbOffComplete;                                        // 0x0069(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsClambering;                                            // 0x006A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y7CW[0x245];                                 // 0x006B(0x0245) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationTalking
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationTalking
	{
	public:
		bool                                                       Talking;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8EJ4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class APawn>                                Owner;                                                   // 0x0004(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper
		unsigned char                                              UnknownData_5YQR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              VoiceChatEmitter[0x10];                                  // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.AthenaAnimationTalking.VoiceChatEmitter
		unsigned char                                              UnknownData_1YXG[0x20];                                  // 0x0020(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPitchAlpha
	 * Size -> 0x0014
	 */
	struct FAthenaAnimationPitchAlpha
	{
	public:
		float                                                      ArmPitchAlphaLeft;                                       // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ArmPitchAlphaRight;                                      // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ArmPitchInterpSpeed;                                     // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                BaseRotationIKSocketName;                                // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPitchShoulders
	 * Size -> 0x001C
	 */
	struct FAthenaAnimationPitchShoulders
	{
	public:
		struct FRotator                                            Shoulder;                                                // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Clavicle;                                                // 0x000C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ActiveLeft;                                              // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ActiveRight;                                             // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CMX9[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationMountedWeapon
	 * Size -> 0x00F8
	 */
	struct FAthenaAnimationMountedWeapon
	{
	public:
		bool                                                       IsFiring;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_T8P6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Pitch;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Yaw;                                                     // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OPMT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ControlledObject;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AI1P[0xE0];                                  // 0x0018(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationFootPlanting
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationFootPlanting
	{
	public:
		unsigned char                                              UnknownData_CAGI[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCollisionResponseContainer                         OverrideRaycast;                                         // 0x0008(0x0020) BlueprintVisible, BlueprintReadOnly
		float                                                      HipHeight;                                               // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HipPullStrength;                                         // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistance;                                            // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistanceRangeStart;                                  // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistanceRangeEnd;                                    // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IKLegStretch;                                            // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SlopeAngle;                                              // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Active;                                                  // 0x0044(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FeetContact;                                             // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_07MT[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPulleyControl
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationPulleyControl
	{
	public:
		TArray<EControllableObjectType>                            PulleyObjectTypes;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		float                                                      MaxRate;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ForceMultiplier;                                         // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PulleyMovementForce;                                     // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UsingPulley;                                             // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       MovingPulley;                                            // 0x001D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LookAtOffsetSet;                                         // 0x001E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LookingRight;                                            // 0x001F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y42P[0x20];                                  // 0x0020(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPulleyControlAnimData
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationPulleyControlAnimData
	{
	public:
		class UAnimSequence*                                       Entry;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IntoLeft;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IdleLeft;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionLeft;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OutOfLeft;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IntoRight;                                               // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IdleRight;                                               // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ActionRight;                                             // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OutOfRight;                                              // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationKeyedInstrumentAnimData
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationKeyedInstrumentAnimData
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Action;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Outof;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonSensingAnimations
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationSkeletonSensingAnimations
	{
	public:
		class UClass*                                              UseWithObject;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAnimSequence*                                       InitialReaction;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Searching;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       AlertingOthers;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Pursuit;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonSensingParams
	 * Size -> 0x0038
	 */
	struct FAthenaAnimationSkeletonSensingParams
	{
	public:
		TArray<struct FAthenaAnimationSkeletonSensingAnimations>   AllLoadedAISensingAnimations;                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
		ESkeletonSensingState                                      CurrentSensingState;                                     // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I0OW[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       InitialReactionAnimation;                                // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SearchingAnimation;                                      // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       AlertingOthersAnimation;                                 // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       PursuitAnimation;                                        // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonEmoteActionAnimations
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationSkeletonEmoteActionAnimations
	{
	public:
		class UClass*                                              UseWithObject;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               Taunt;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               Cheer;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonEmoteActionParams
	 * Size -> 0x0038
	 */
	struct FAthenaAnimationSkeletonEmoteActionParams
	{
	public:
		TArray<struct FAthenaAnimationSkeletonEmoteActionAnimations> AllLoadedAIEmoteActionAnimations;                        // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
		ESkeletonEmoteActionState                                  CurrentEmoteActionState;                                 // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DTM4[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       TauntAnimation;                                          // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CheerAnimation;                                          // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TauntAnimationB;                                         // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CheerAnimationB;                                         // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonShipCaptainAnimations
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationSkeletonShipCaptainAnimations
	{
	public:
		class UAnimSequence*                                       EnterDockedPose;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               DockedIdles;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       ExitDockedPose;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Taunt;                                                   // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       RamInto;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       RamCycle;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       RamImpact;                                               // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       RamOutOf;                                                // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonShipCaptainParams
	 * Size -> 0x0060
	 */
	struct FAthenaAnimationSkeletonShipCaptainParams
	{
	public:
		struct FAthenaAnimationSkeletonShipCaptainAnimations       AllSkeletonShipCaptainAnimations;                        // 0x0000(0x0048) BlueprintVisible
		class UAnimSequence*                                       ShipCaptainIdleCycleA;                                   // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ShipCaptainIdleCycleB;                                   // 0x0050(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESkeletonShipCaptainDockedAnimationState                   DockedAnimationState;                                    // 0x0058(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DWM5[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAI
	 * Size -> 0x02E8
	 */
	struct FAthenaAnimationAI
	{
	public:
		bool                                                       SpawnAnimationActive;                                    // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SpawnAnimationReadyToBegin;                              // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TOI4[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       AISpawn;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       AIDespawn;                                               // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AIAnimationSpawnTime;                                    // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AISpawnOnLand;                                           // 0x001C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AIFleeActive;                                            // 0x001D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UGH2[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationSkeletonSensingParams               AISensing;                                               // 0x0020(0x0038) BlueprintVisible
		struct FAthenaAnimationSkeletonEmoteActionParams           AIEmoteActions;                                          // 0x0058(0x0038) BlueprintVisible
		struct FAthenaAnimationSkeletonShipCaptainParams           SkeletonShipCaptainParams;                               // 0x0090(0x0060) BlueprintVisible
		unsigned char                                              UnknownData_FMBV[0x1F8];                                 // 0x00F0(0x01F8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotionStairsAnimData
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationLocomotionStairsAnimData
	{
	public:
		class UBlendSpace*                                         UpStairsLeft;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         UpStairsRight;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         DownStairsLeft;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         DownStairsRight;                                         // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotionAlternateAnimData
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationLocomotionAlternateAnimData
	{
	public:
		class UAnimSequence*                                       Idle;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         MainMovement;                                            // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLocomotionTurningAnimData           TurningLeft;                                             // 0x0010(0x0008) Edit, BlueprintVisible
		struct FAthenaAnimationLocomotionTurningAnimData           TurningRight;                                            // 0x0018(0x0008) Edit, BlueprintVisible
		class UAnimSequence*                                       TurnOut;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         RunStop;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLocomotionStairsAnimData            StairsLocomotion;                                        // 0x0030(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSpawnBase
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationSpawnBase
	{
	public:
		class UClass*                                              ObjectId;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAnimSequence*                                       SpawnOnLand;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SpawnOnShip;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SpawnSummoned;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SpawnBoarding;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Despawn;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonFlee
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationSkeletonFlee
	{
	public:
		class UClass*                                              UseWithObject;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               FleeTurnLeft;                                            // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               FleeTurnRight;                                           // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UBlendSpace*                                         FleeLocomotionBase;                                      // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBlendSpace*>                                 FleeLocomotionVariants;                                  // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonFleeInGraph
	 * Size -> 0x0038
	 */
	struct FAthenaAnimationSkeletonFleeInGraph
	{
	public:
		class UAnimSequence*                                       TurnLeft;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TurnRight;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LocomotionBase;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LocomotionVariant;                                       // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBlendSpace*>                                 LocomotionVariantSelection;                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		int32_t                                                    PrecentageChanceOfVariantOccuring;                       // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K450[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonScream
	 * Size -> 0x0008
	 */
	struct FAthenaAnimationSkeletonScream
	{
	public:
		class UAnimSequence*                                       SkeletonScream;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationShopInteractionAnimations
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationShopInteractionAnimations
	{
	public:
		EInteractionObject                                         ObjectType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_N5J4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Into;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               Loop;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       Out;                                                     // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationShopInteractionParams
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationShopInteractionParams
	{
	public:
		TArray<struct FAthenaAnimationShopInteractionAnimations>   AllLoadedInteractionAnimations;                          // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       IntoAnimToPlay;                                          // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LoopAnimToPlay;                                          // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OutOfAnimToPlay;                                         // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Active;                                                  // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_M7DM[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationEmoteAnimations
	 * Size -> 0x0088
	 */
	struct FAthenaAnimationEmoteAnimations
	{
	public:
		class FName                                                EmoteName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEmoteSequenceType                                         EmoteSequenceType;                                       // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QZLR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TAssetPtr<class UAnimSequence>                             OneShotSequence;                                         // 0x0010(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_WWU7[0x4];                                   // 0x002C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UAnimSequence>                             ContinuousIn;                                            // 0x0030(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_O9RK[0x4];                                   // 0x004C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<TAssetPtr<class UAnimSequence>>                     ContinuousCycle;                                         // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper
		TAssetPtr<class UAnimSequenceBase>                         EmotePreviewSequence;                                    // 0x0060(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_3WJL[0x4];                                   // 0x007C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UClass*                                              UseWithObject;                                           // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationEmoteAnimgraphStructure
	 * Size -> 0x0128
	 */
	struct FAthenaAnimationEmoteAnimgraphStructure
	{
	public:
		TArray<struct FAthenaAnimationEmoteAnimations>             EmoteAnimationArray;                                     // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
		class UAnimSequence*                                       OneShotAnimationToUse;                                   // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousInAnimationToUse;                              // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousLoopAnimationToUseA;                           // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousLoopAnimationToUseB;                           // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       EmoteActive;                                             // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       OneShotEmoteActive;                                      // 0x0031(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ContinuousEmoteActive;                                   // 0x0032(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ContinuousEmoteLoopExit;                                 // 0x0033(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0ELE[0xF4];                                  // 0x0034(0x00F4) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonCurseAnimations
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationSkeletonCurseAnimations
	{
	public:
		class UAnimSequence*                                       SkeletonDrunk;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SkeletonDance;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SkeletonSleepInto;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SkeletonSleepLoop;                                       // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SkeletonSleepOut;                                        // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationHarpoonLauncherAnimData
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationHarpoonLauncherAnimData
	{
	public:
		TArray<class UBlendSpace1D*>                               Idle;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UBlendSpace1D*                                       FireInto;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       FireOutOf;                                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       FireAction;                                              // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationAIKnockback
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationAIKnockback
	{
	public:
		struct FAthenaAnimationSkeletonKnockbackLocomotionStrength KnockbackAnimations;                                     // 0x0000(0x0020) BlueprintVisible
		EKnockbackAnimDirection                                    AIKnockbackDirection;                                    // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E73O[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              KnockbackActive : 1;                                     // 0x0024(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              UnknownData_QOZS[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       KnockbackAnimToUse;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationHitReactsAnimData
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationHitReactsAnimData
	{
	public:
		TArray<class UBlendSpace1D*>                               HitReact;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               HitReactItem;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               HitReactItemAction;                                      // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               HitReactSubtle;                                          // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationHitReactsSelectedAnimations
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationHitReactsSelectedAnimations
	{
	public:
		class UBlendSpace1D*                                       SelectedHitReact0;                                       // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactItem0;                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactItemAction0;                             // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactSubtle0;                                 // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReact1;                                       // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactItem1;                                   // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactItemAction1;                             // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedHitReactSubtle1;                                 // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SelectedOverrideHitReact;                                // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationHitReactParams
	 * Size -> 0x002C
	 */
	struct FAthenaAnimationHitReactParams
	{
	public:
		int32_t                                                    StandardIndex0;                                          // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    StandardIndex1;                                          // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              HitReactTransition : 1;                                  // 0x0008(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              UnknownData_3P19[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DirectionYaw;                                            // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ItemIndex0;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ItemIndex1;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActionIndex0;                                            // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActionIndex1;                                            // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SubtleIndex0;                                            // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SubtleIndex1;                                            // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterHitReactionAnimType                              AnimationType;                                           // 0x0028(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y46V[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationStunData
	 * Size -> 0x0008
	 */
	struct FAthenaAnimationStunData
	{
	public:
		EStunAnimationType                                         StunAnimType;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_D3SD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              IsCursedVariant : 1;                                     // 0x0004(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              UnknownData_4P2M[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPlayingFacialAnimations
	 * Size -> 0x0040
	 */
	struct FAthenaAnimationPlayingFacialAnimations
	{
	public:
		class UBlendSpace1D*                                       Capstan;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SailAction;                                              // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SailIdle;                                                // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CannonFire;                                              // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CannonAim;                                               // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HarpoonFire;                                             // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       FacialIdle0;                                             // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       FacialIdle1;                                             // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPlayingEquipAnimations
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationPlayingEquipAnimations
	{
	public:
		class UAnimSequence*                                       Equip;                                                   // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         EquipAsBlendSpace;                                       // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         EquipSwimming;                                           // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationObjectActionOneShotPlayingStructPitchOverride
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationObjectActionOneShotPlayingStructPitchOverride
	{
	public:
		class UBlendSpace1D*                                       Action;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ActionVariant1;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ActionVariant2;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ActionVariant3;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ActionVariant4;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSkeletonAIFastPathData
	 * Size -> 0x0004
	 */
	struct FAthenaAnimationSkeletonAIFastPathData
	{
	public:
		unsigned char                                              FullBodyAISensingCanActivate : 1;                        // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              ArmOverlayAISensingCanActivate : 1;                      // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              AIShadowStunActive : 1;                                  // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              CanBeKnockedBack : 1;                                    // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              AICanFlee : 1;                                           // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              AICanEmote : 1;                                          // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              AIControllingCaptainWheel : 1;                           // 0x0000(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_KDL0[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SkeletonCustomAnimationBlueprintPlayingAnimations
	 * Size -> 0x0038
	 */
	struct FSkeletonCustomAnimationBlueprintPlayingAnimations
	{
	public:
		class UAnimSequence*                                       OneShot;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousIn;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousLoop_A;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousLoop_B;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ContinuousOut;                                           // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequence*>                               AlternateContinuousOuts;                                 // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCustomSkeletonAnimationBlueprintData
	 * Size -> 0x0058
	 */
	struct FAthenaAnimationCustomSkeletonAnimationBlueprintData
	{
	public:
		bool                                                       SequenceActive;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LoopActive;                                              // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DVED[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ActiveSequenceIndex;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsOneShot;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_E2BG[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSkeletonCustomAnimationBlueprintPlayingAnimations  BlueprintPlayingAnimations;                              // 0x0010(0x0038) Edit, BlueprintVisible
		class UNPCHeldObjectData*                                  WieldableCosmeticItemList;                               // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ENPCCustomAnimationState                                   CustomAnimationState;                                    // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9M3I[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendTime;                                               // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AssetDelayLoadEntry
	 * Size -> 0x0040
	 */
	struct FAssetDelayLoadEntry
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		EDelayLoadPhase                                            LoadAtPhase;                                             // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ELoadPersistance                                           Persistence;                                             // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LoadForClient;                                           // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LoadForServer;                                           // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                Feature;                                                 // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L5NT[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStringAssetReference>                       AssetsToLoad;                                            // 0x0020(0x0010) Edit, ZeroConstructor
		TArray<TAssetPtr<class UClass>>                            BlueprintsToLoad;                                        // 0x0030(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.RequestedLoopAnims
	 * Size -> 0x0010
	 */
	struct FRequestedLoopAnims
	{
	public:
		class FName                                                RequestedLoopingAnimName;                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    RequestedOutOfAnimIndex;                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AnimationAssetRequired;                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ViewVoyageBanners
	 * Size -> 0x0002
	 */
	struct FViewVoyageBanners
	{
	public:
		EShowVoyageBannersState                                    ShowIntroBanners;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShowVoyageBannersState                                    ShowOutroBanners;                                        // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageParticipantView
	 * Size -> 0x00C8
	 */
	struct FVoyageParticipantView
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_DOWS[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FGuid                                               Id;                                                      // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    ChapterIndex;                                            // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ChapterCount;                                            // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActiveQuestCount;                                        // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EVoyageChangeReason                                        History;                                                 // 0x0054(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_89E9[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Company;                                                 // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       IsEmergent;                                              // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsTale;                                                  // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EEmergentVoyageSource                                      EmergentSource;                                          // 0x0062(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FViewVoyageBanners                                  ViewVoyageBanners;                                       // 0x0063(0x0002)
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0065(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BA1U[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FNetActorPtr                                        PlayerStateOfDiscoverer;                                 // 0x006C(0x0014)
		bool                                                       IsDiscovererMe;                                          // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_97KE[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ChestRarity;                                             // 0x0084(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayAudio;                                               // 0x008C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_EA1Y[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ChestDiscoveredId;                                       // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UYJH[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CollectCratesPopUpId;                                    // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3FV0[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStat>                                 VoyageCompletionStats;                                   // 0x00A8(0x0010) ZeroConstructor
		TArray<struct FPlayerStat>                                 ReapersMarkCompletionStats;                              // 0x00B8(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoyageParticipantViewContainer
	 * Size -> 0x00C8
	 */
	struct FVoyageParticipantViewContainer
	{
	public:
		struct FVoyageParticipantView                              State;                                                   // 0x0000(0x00C8)
	};

	/**
	 * ScriptStruct Athena.AthenaCharacterSwimSpeed
	 * Size -> 0x000C
	 */
	struct FAthenaCharacterSwimSpeed
	{
	public:
		float                                                      SprintSpdAmp;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SprintAccelAmp;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurnSpeedScalar;                                         // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaCharacterSwimParams
	 * Size -> 0x009C
	 */
	struct FAthenaCharacterSwimParams
	{
	public:
		float                                                      EnterSwimmingDepth;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ExitSwimmingDepth;                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FloatHeight;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ThirdPersonMeshOffset;                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ThirdPersonMeshAdjustTime;                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullGravityHeight;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SurfaceSwimDepth;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SurfaceSwimExitDepth;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SubmergedBuoyancyDepth;                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ZeroDragDepth;                                           // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxBuoyancyAcceleration;                                 // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SubmergedBuoyancyAcceleration;                           // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SubmergedBuoyancyTime;                                   // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DragFactor;                                              // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDragAcceleration;                                     // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPushDownRoofAngle;                                    // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPushDownRoofZ;                                        // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinCorrectionVelForSurfaceSwim;                          // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SurfaceVelBlendTime;                                     // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterSwimmingEntryPitch;                            // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterSwimmingEntryAccel;                            // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterSwimDepth;                                     // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterSwimmingDragSpeed;                             // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterSwimmingSpeed;                                 // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PitchBlendOffRate;                                       // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSwimDepth;                                            // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSwimDepthBuoyancy;                                    // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSwimDepthBuoyancyRange;                               // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSwimDepthDragFactor;                                  // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CharacterCentreOffset;                                   // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETraceTypeQuery                                            WaterDepthTraceQueryType;                                // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JHV0[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaCharacterSwimSpeed                           SurfaceSwimSpeeds;                                       // 0x007C(0x000C) Edit, BlueprintVisible
		struct FAthenaCharacterSwimSpeed                           UnderwaterSwimSpeeds;                                    // 0x0088(0x000C) Edit, BlueprintVisible
		float                                                      SurfaceSwimmingDepthWhenEnteredWater;                    // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SFO9[0x4];                                   // 0x0098(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaCharacterDodgeParams
	 * Size -> 0x0010
	 */
	struct FAthenaCharacterDodgeParams
	{
	public:
		float                                                      DodgeCooldown;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DodgeForce;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GroundLaunchAngle;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DodgePerpendicularToGround;                              // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Disabled;                                                // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SQA6[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemUseSpeedParams
	 * Size -> 0x0008
	 */
	struct FItemUseSpeedParams
	{
	public:
		float                                                      LookSpeedScalar;                                         // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxMoveSpeedScalar;                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TeleportLocation
	 * Size -> 0x0030
	 */
	struct FTeleportLocation
	{
	public:
		bool                                                       Valid;                                                   // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y0IH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Description;                                             // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_O288[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     TeleportBase;                                            // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TeleportLocation;                                        // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            TeleportRotation;                                        // 0x0024(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.KnockBackInfo
	 * Size -> 0x0050
	 */
	struct FKnockBackInfo
	{
	public:
		class FName                                                FeatureName;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HorizontalVelocity;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VerticalVelocity;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinHorizontalVelocity;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinVerticalVelocity;                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SwimmingVelocity;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DockedHorizontalVelocity;                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DockedVerticalVelocity;                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseDockedVelocitiesWhenDocked;                           // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ETJN[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RumbleTag;                                               // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StunDuration;                                            // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AIKnockbackDistance;                                     // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AIKnockbackSpeed;                                        // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AIKnockbackAcceleration;                                 // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAIKnockbackStrengthType                                   AIKnockbackStrengthType;                                 // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseOverrideLaunchDirection;                              // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MFIO[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OverrideLaunchDirectionInWorldSpace;                     // 0x0044(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ItemCategoryAIStrategyMovementPropertiesOverride
	 * Size -> 0x0018
	 */
	struct FItemCategoryAIStrategyMovementPropertiesOverride
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FAIStrategyMovementProperties>               AIStrategyMovementPropertiesOverrides;                   // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NetPositionErrorTolerance
	 * Size -> 0x0008
	 */
	struct FNetPositionErrorTolerance
	{
	public:
		float                                                      ZDistance;                                               // 0x0000(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      XYDistance;                                              // 0x0004(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationOverrideEntry
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationOverrideEntry
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               MeshFirstPerson;                                         // 0x0008(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               MeshThirdPerson;                                         // 0x0018(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               AnimationDataStore;                                      // 0x0028(0x0010) Edit, ZeroConstructor
		class UClass*                                              ALKFirstPerson;                                          // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ALKThirdPerson;                                          // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SubModeLevel
	 * Size -> 0x0020
	 */
	struct FSubModeLevel
	{
	public:
		class FString                                              SubMode;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		struct FStringAssetReference                               Level;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PlayModeLevelArray
	 * Size -> 0x0020
	 */
	struct FPlayModeLevelArray
	{
	public:
		TArray<struct FStringAssetReference>                       PlayModeLevels;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FSubModeLevel>                               SubModes;                                                // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.GhostPawnEntry
	 * Size -> 0x0060
	 */
	struct FGhostPawnEntry
	{
	public:
		float                                                      TimeRemaining;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T3VF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               Pawn;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       RespawnCompleted;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsDoorOpen;                                              // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JT5W[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FObjectMessagingHandle                              FinishedSpawningHandle;                                  // 0x0018(0x0048)
	};

	/**
	 * ScriptStruct Athena.GhostShipCoordinator
	 * Size -> 0x0240
	 */
	struct FGhostShipCoordinator
	{
	public:
		TArray<struct FGhostPawnEntry>                             GhostPawns;                                              // 0x0000(0x0010) ZeroConstructor
		class UObject*                                             Parent;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HXCH[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AGhostShipPlayerSpawnLocation*                       SpawnLocation;                                           // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AGhostShipDoor*                                      GhostShipDoor;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3J7J[0x200];                                 // 0x0040(0x0200) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StorageContainerRefresher
	 * Size -> 0x00D8
	 */
	struct FStorageContainerRefresher
	{
	public:
		unsigned char                                              UnknownData_MS2U[0xD8];                                  // 0x0000(0x00D8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewBasedRespawnTimes
	 * Size -> 0x0010
	 */
	struct FCrewBasedRespawnTimes
	{
	public:
		float                                                      CrewOfOneSpawnTimer;                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CrewOfTwoSpawnTimer;                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CrewOfThreeSpawnTimer;                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CrewOfFourSpawnTimer;                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DebugReplicatedAbilityData
	 * Size -> 0x0020
	 */
	struct FDebugReplicatedAbilityData
	{
	public:
		struct FAIAbilityDebugReplicatedIntervals                  AbilityIntervals;                                        // 0x0000(0x000C)
		unsigned char                                              UnknownData_5ECU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TypeClass;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       AbilityInRange;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AbilityDebugBlocked;                                     // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseTimerBetween;                                         // 0x001A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseDamageBetween;                                        // 0x001B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EAIAbilityDamageIntervalCounterMode                        DamageIntervalBlockMode;                                 // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y6VW[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DigEventFxParams
	 * Size -> 0x0018
	 */
	struct FDigEventFxParams
	{
	public:
		class UObject*                                             Particles;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       bAttachParticlesToShovel;                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N4ZF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                Rumble;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DigSurfaceTypeParams
	 * Size -> 0x0038
	 */
	struct FDigSurfaceTypeParams
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FMSH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDigEventFxParams                                   EnterGroundFx;                                           // 0x0008(0x0018) Edit, BlueprintVisible
		struct FDigEventFxParams                                   LeaveGroundFx;                                           // 0x0020(0x0018) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.SurfaceDigHole
	 * Size -> 0x0018
	 */
	struct FSurfaceDigHole
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EDHE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DigHoleClass;                                            // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      DigAINoiseRange;                                         // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L9SF[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ToggleableAIShipServiceDataAssetFileLocation
	 * Size -> 0x0018
	 */
	struct FToggleableAIShipServiceDataAssetFileLocation
	{
	public:
		class FName                                                ToggleName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               Location;                                                // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EncounterServiceEntry
	 * Size -> 0x0018
	 */
	struct FEncounterServiceEntry
	{
	public:
		EEncounterListenerType                                     EncounterListenerType;                                   // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OHIK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EEncounterType>                                     ValidEncounterTypes;                                     // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.EncounterServiceParams
	 * Size -> 0x0020
	 */
	struct FEncounterServiceParams
	{
	public:
		TArray<struct FEncounterServiceEntry>                      EncounterList;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		int32_t                                                    MinEventsToTriggerPerCycle;                              // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZXO6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     SecondsToSpendTriggeringEventsPerCycle;                  // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewServiceParams
	 * Size -> 0x0060
	 */
	struct FCrewServiceParams
	{
	public:
		float                                                      MinSafeDistanceToShip;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnDistAroundSunkenShip;                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<int32_t>                                            VotesRequiredForSendToBrig;                              // 0x0008(0x0010) Edit, ZeroConstructor
		TArray<int32_t>                                            VotesRequiredForReleaseFromBrig;                         // 0x0018(0x0010) Edit, ZeroConstructor
		TArray<int32_t>                                            VotesRequiredForScuttleShip;                             // 0x0028(0x0010) Edit, ZeroConstructor
		TArray<int32_t>                                            VotesRequiredForChangeMatchmakingVisibility;             // 0x0038(0x0010) Edit, ZeroConstructor
		TArray<int32_t>                                            VotesRequiredForArenaRivalVote;                          // 0x0048(0x0010) Edit, ZeroConstructor
		float                                                      BrigMinReleaseTime;                                      // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BrigServerTimeToRememberPastCrewMates;                   // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SurfaceDigType
	 * Size -> 0x0002
	 */
	struct FSurfaceDigType
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShovelDigType                                             DigType;                                                 // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShovelSurfaceDigType
	 * Size -> 0x0010
	 */
	struct FShovelSurfaceDigType
	{
	public:
		TArray<struct FSurfaceDigType>                             SurfaceDigType;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SharedShovelParams
	 * Size -> 0x0060
	 */
	struct FSharedShovelParams
	{
	public:
		struct FShovelSurfaceDigType                               DigSurfaceDigType;                                       // 0x0000(0x0010) Edit, DisableEditOnInstance
		EPhysicalSurface                                           SandSurfaceType;                                         // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPhysicalSurface                                           WetSandSurfaceType;                                      // 0x0011(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_55N9[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxHeightDifferenceToNotBeConsideredWetSand;             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             DigPosOffsetFromPlayerPos;                               // 0x0018(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      SurfaceTypeRaycastLength;                                // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSurfaceAngleForDig;                                   // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InitialSphereCastRadiusForSuccessfulDig;                 // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          ItemProxyCollisionChannel;                               // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T62P[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SphereRadiusForItemProxySweep;                           // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RequiredObstacleFreeRadiusForSuccessfulDig;              // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ObstacleCheckStartOffsetZFromSphereTestPos;              // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumSamplesForBlockingSurfacesTest;                       // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWaterDepthToStartSuccessfulDig;                       // 0x0044(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          HitTestTraceChannel;                                     // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7TPY[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinPlanarTestRadius;                                     // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumSamplesForPlanarityTest;                              // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxBumpinessForPlanarityTestInCm;                        // 0x0054(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AssumedPlayerWaistHeight;                                // 0x0058(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       bDrawDebug;                                              // 0x005C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2J99[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MermaidServiceMermaidSpawnParams
	 * Size -> 0x0048
	 */
	struct FMermaidServiceMermaidSpawnParams
	{
	public:
		float                                                      MinDistFromSpawnOrigin;                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistFromSpawnOriginForDestroyedShip;                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistFromSpawnOriginBeforeGivingUp;                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistIncrementPerFailedSpawnCircle;                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumSamplesInSpawnCircle;                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnCastStartZ;                                         // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinSpawnDepth;                                           // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnHalfConeAngleRestrictIfSpawningForPlayer;           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          HitTestTraceChannel;                                     // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7M8X[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AssumedMermaidRadius;                                    // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceOfFinalSpawnPosToAnyActiveMermaid;            // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceOfFinalSpawnPosToAnyActiveMermaidWhenNearEnemyShip; // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistFromEdgeOfWorld;                                  // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinAngularStepSize;                                      // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxAngularStepSize;                                      // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceIncrementPerFail;                             // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceIncrementPerFail;                             // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AdditionalDistanceFromOriginMultiplierPerMeter;          // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MermaidServiceParams
	 * Size -> 0x0088
	 */
	struct FMermaidServiceParams
	{
	public:
		float                                                      LocallyActiveMermaidCheckInterval;                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerAbandonedCheckInterval;                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDestroyDistancePlayerToMermaidIfPlayerNearEnemyShip;  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDestroyDistancePlayerToMermaidIfPlayerNearIsland;     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDestroyDistancePlayerToMermaidIfPlayerNotNearIsland;  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistFromCoastForPlayerToCountAsNearIsland;            // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistFromCoastForShipToCountAsNearIsland;              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPlayerToShipDistForPlayerToQualifyAsAbandoned;        // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPlayerToShipDistForPlayerToBeClearedOfAbandonedStatus; // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPlayerToEnemyShipDistForPlayerToQualifyForStealthSpawns; // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPlayerToWatercraftDistForPlayerToQualifyAsAbandoned;  // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistFromAnyMermaidForPlayerToBeAbandonedIfPlayerNotNearIsland; // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistFromAnyMermaidForPlayerToBeAbandonedIfPlayerNearIsland; // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumberOfConcurrentMermaids;                           // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinLifeTimeOfMermaidBeforeCanBeCulledInPopulationCheck;  // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnDistAroundSaviourMermaid;                           // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FMermaidServiceMermaidSpawnParams                   SpawnParams;                                             // 0x0040(0x0048) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.MakeFriendsEmoteParams
	 * Size -> 0x0018
	 */
	struct FMakeFriendsEmoteParams
	{
	public:
		TArray<class FName>                                        TriggerEmoteNames;                                       // 0x0000(0x0010) Edit, ZeroConstructor, Config
		float                                                      TriggerDistanceThreshold;                                // 0x0010(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0DBN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MermaidRespawnConfig
	 * Size -> 0x0028
	 */
	struct FMermaidRespawnConfig
	{
	public:
		float                                                      ScorePenaltyForEachMeterAwayFromShipwreck;               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinRespawnLocDistanceFromSunkShip;                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinScorePenaltyForEnemyShipProximity;                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxScorePenaltyForEnemyShipProximity;                    // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceFromEnemyShipToApplyPenalty;                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinScorePenaltyForAlliedShipProximity;                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxScorePenaltyForAlliedShipProximity;                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceFromAlliedShipToApplyPenalty;                 // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceFromIslandWeHaveMapForToApplyPenalty;         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ScorePenaltyForIslandsWeHaveMapFor;                      // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CharacterSocketCollisionServiceParams
	 * Size -> 0x0008
	 */
	struct FCharacterSocketCollisionServiceParams
	{
	public:
		float                                                      MaxCharacterDistanceSqr;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxSockets;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAICharacterParams
	 * Size -> 0x0014
	 */
	struct FAthenaAICharacterParams
	{
	public:
		float                                                      MissFiringHeightOffset;                                  // 0x0000(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MissFiringTargetInFrontOffset;                           // 0x0004(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinMissFiringTargetInFrontOffset;                        // 0x0008(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxMissFiringTargetInFrontOffset;                        // 0x000C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BufferTimeWhenChangingItems;                             // 0x0010(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerModerationParams
	 * Size -> 0x000C
	 */
	struct FPlayerModerationParams
	{
	public:
		float                                                      PlayerReportableDistance;                                // 0x0000(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerReportableTimeBetweenChecksInSeconds;              // 0x0004(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RemovePlayerFromListAfterSeconds;                        // 0x0008(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateIdentity
	 * Size -> 0x0078
	 */
	struct FPirateIdentity
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		class FString                                              PirateId;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		TMap<class FString, class FString>                         Claims;                                                  // 0x0028(0x0050) ZeroConstructor, RepSkip
	};

	/**
	 * ScriptStruct Athena.MerchantQuestRandomRequiredItemsEntry
	 * Size -> 0x0010
	 */
	struct FMerchantQuestRandomRequiredItemsEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNum;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMerchantQuestItemData*                              RequiredItem;                                            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestCategoryGroup
	 * Size -> 0x0018
	 */
	struct FMerchantQuestCategoryGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMerchantQuestRandomRequiredItemsEntry>      RequiredItemEntries;                                     // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.QuestDistributionAllAtOnceParams
	 * Size -> 0x0040
	 */
	struct FQuestDistributionAllAtOnceParams
	{
	public:
		struct FWeightedProbabilityRange                           NumQuests;                                               // 0x0000(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
		struct FWeightedProbabilityRange                           QuestsPerChapter;                                        // 0x0020(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.QuestDistributionPerChapterParams
	 * Size -> 0x0068
	 */
	struct FQuestDistributionPerChapterParams
	{
	public:
		int32_t                                                    MinNumChapters;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L9PN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRange                           NumQuests;                                               // 0x0008(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
		struct FWeightedProbabilityRange                           NumQuestsInFirstChapter;                                 // 0x0028(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
		struct FWeightedProbabilityRange                           NumQuestsInOtherChapters;                                // 0x0048(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.ChapterDataEntry
	 * Size -> 0x0010
	 */
	struct FChapterDataEntry
	{
	public:
		int32_t                                                    NumQuests;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NWGD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVoyageRewardDataAsset*                              PerChapterRewardAsset;                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestDistributionFixedChaptersParams
	 * Size -> 0x0018
	 */
	struct FQuestDistributionFixedChaptersParams
	{
	public:
		bool                                                       UseProceduralQuestRewards;                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_64B2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumChapters;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FChapterDataEntry>                           Chapters;                                                // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestDistributionParams
	 * Size -> 0x00C8
	 */
	struct FQuestDistributionParams
	{
	public:
		EQuestDistributionMethod                                   Method;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WWX5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuestDistributionAllAtOnceParams                   AllAtOnce;                                               // 0x0008(0x0040) Edit, BlueprintVisible, BlueprintReadOnly
		struct FQuestDistributionPerChapterParams                  PerChapter;                                              // 0x0048(0x0068) Edit, BlueprintVisible, BlueprintReadOnly
		struct FQuestDistributionFixedChaptersParams               FixedChapters;                                           // 0x00B0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.QuestSelectionParams
	 * Size -> 0x0008
	 */
	struct FQuestSelectionParams
	{
	public:
		EQuestPoolSelectionMethod                                  PoolSelectionMethod;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EQuestLocationSelectionMethod                              LocationSelectionMethod;                                 // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseChapterBasedVoyageHistory;                            // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QLZY[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumberOfPoolRetries;                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedTreasureChestDesc
	 * Size -> 0x0018
	 */
	struct FWeightedTreasureChestDesc
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6ZSD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Desc;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestTypeParams
	 * Size -> 0x0030
	 */
	struct FQuestTypeParams
	{
	public:
		unsigned char                                              UnknownData_I8NL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeightedTreasureChestDescAsset*                     ReferencedRewards;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FWeightedTreasureChestDesc>                  Rewards;                                                 // 0x0010(0x0010) ZeroConstructor
		class UWeightedItemDescSpawnDataAsset*                     RewardsAsset;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.XMarksTheSpotQuestParams
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	struct FXMarksTheSpotQuestParams : public FQuestTypeParams
	{
	public:
		struct FWeightedProbabilityRange                           NumTreasureLocations;                                    // 0x0030(0x0020) Edit
		class UBoobyTrapSpawnerDataAsset*                          BoobyTrapSpawnerDataAsset;                               // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBoobyTrapSpawnerDataAsset*>                  UniqueTreasureLocationBoobyTraps;                        // 0x0058(0x0010) Edit, ZeroConstructor
		TArray<class UWeightedTreasureChestDescAsset*>             UniqueTreasureLocationRewards;                           // 0x0068(0x0010) Edit, ZeroConstructor
		TArray<class UWeightedItemDescSpawnDataAsset*>             UniqueTreasureLocationRewardsAssets;                     // 0x0078(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RiddleQuestParams
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FRiddleQuestParams : public FQuestTypeParams
	{
	public:
		uint32_t                                                   MinNumGates;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   MaxNumGates;                                             // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBoobyTrapSpawnerDataAsset*                          BoobyTrapSpawnerDataAsset;                               // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestRandomSpawnGeneratorParams
	 * Size -> 0x0120
	 */
	struct FBountyQuestRandomSpawnGeneratorParams
	{
	public:
		struct FWeightedProbabilityRange                           NumberOfWaves;                                           // 0x0000(0x0020) Edit
		struct FWeightedProbabilityRange                           NumberOfWaveGroups;                                      // 0x0020(0x0020) Edit
		int32_t                                                    MinNumberOfAIPerWave;                                    // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumberOfAIPerWave;                                    // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<int32_t>                                            AdditionalAIPerPlayer;                                   // 0x0048(0x0010) Edit, ZeroConstructor
		int32_t                                                    MinFormsPerEncounter;                                    // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxFormsPerEncounter;                                    // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinVarietiesPerEncounter;                                // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxVarietiesPerEncounter;                                // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinTimeBetweenSpawns;                                    // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxTimeBetweenSpawns;                                    // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinTimeBetweenWaves;                                     // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxTimeBetweenWaves;                                     // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           WavesPerRelocate;                                        // 0x0078(0x0020) Edit
		struct FWeightedProbabilityRange                           WaveSplitChance;                                         // 0x0098(0x0020) Edit
		TArray<float>                                              WaveSuicideTime;                                         // 0x00B8(0x0010) Edit, ZeroConstructor
		float                                                      WaveSuicideMinDist;                                      // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_R921[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIEncounterGenerationRecipeRankOrderList*           Recipes;                                                 // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           NumberOfTargetsTotal;                                    // 0x00D8(0x0020) Edit
		struct FWeightedProbabilityRange                           NumberOfTargetsWhichAreCaptains;                         // 0x00F8(0x0020) Edit
		float                                                      ChanceOfAllTargetsBeingOnTheLastWave;                    // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChanceOfFemale;                                          // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestParams
	 * Size -> 0x0128 (FullSize[0x0158] - InheritedSize[0x0030])
	 */
	struct FBountyQuestParams : public FQuestTypeParams
	{
	public:
		class UAIBountySpawner*                                    Spawner;                                                 // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FBountyQuestRandomSpawnGeneratorParams              BountyQuestRandomSpawnGeneratorParams;                   // 0x0038(0x0120) Edit
	};

	/**
	 * ScriptStruct Athena.MerchantQuestCategoryGroupBounds
	 * Size -> 0x001C
	 */
	struct FMerchantQuestCategoryGroupBounds
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinNum;                                                  // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNum;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinDifferent;                                            // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxDifferent;                                            // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestParams
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	struct FMerchantQuestParams : public FQuestTypeParams
	{
	public:
		struct FWeightedProbabilityRange                           NumberOfRequiredItems;                                   // 0x0030(0x0020) Edit, DisableEditOnInstance
		struct FWeightedProbabilityRangeOfRanges                   TimeLimitInMinutes;                                      // 0x0050(0x0030) Edit, DisableEditOnInstance
		class UMerchantQuestRequiredItemsDataAsset*                RequiredItemsDataAsset;                                  // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMerchantQuestRandomRequiredItemsDataAsset*          RandomRequiredItemsDataAsset;                            // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           NumberOfGroups;                                          // 0x0090(0x0020) Edit, DisableEditOnInstance
		TArray<struct FMerchantQuestCategoryGroupBounds>           CategoryGroupBounds;                                     // 0x00B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CargoRunQuestParams
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	struct FCargoRunQuestParams : public FQuestTypeParams
	{
	public:
		struct FWeightedProbabilityRange                           NumberOfRequiredItems;                                   // 0x0030(0x0020) Edit, DisableEditOnInstance
		struct FWeightedProbabilityRangeOfRanges                   TimeLimitInMinutes;                                      // 0x0050(0x0030) Edit, DisableEditOnInstance
		class UCargoRunQuestRandomRequiredItemsDataAsset*          RequiredItemsDataAsset;                                  // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TaleQuestParams
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FTaleQuestParams : public FQuestTypeParams
	{
	public:
		class UTaleQuestDescAsset*                                 TaleQuestAsset;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MatchmakingQuestParams
	 * Size -> 0x0001
	 */
	struct FMatchmakingQuestParams
	{
	public:
		unsigned char                                              UnknownData_5GBO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StagingQuestParams
	 * Size -> 0x0001
	 */
	struct FStagingQuestParams
	{
	public:
		unsigned char                                              UnknownData_YFZ1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmergantVoyageQuestParams
	 * Size -> 0x0001
	 */
	struct FEmergantVoyageQuestParams
	{
	public:
		unsigned char                                              UnknownData_FIEY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardQuestParams
	 * Size -> 0x0001
	 */
	struct FRewardQuestParams
	{
	public:
		unsigned char                                              UnknownData_3665[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestParams
	 * Size -> 0x03B0
	 */
	struct FQuestParams
	{
	public:
		EQuestType                                                 Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PHS1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FXMarksTheSpotQuestParams                           XMarksTheSpot;                                           // 0x0008(0x0088) Edit, BlueprintVisible, BlueprintReadOnly
		struct FRiddleQuestParams                                  Riddle;                                                  // 0x0090(0x0040) Edit, BlueprintVisible, BlueprintReadOnly
		struct FBountyQuestParams                                  Bounty;                                                  // 0x00D0(0x0158) Edit, BlueprintVisible, BlueprintReadOnly
		struct FMerchantQuestParams                                Merchant;                                                // 0x0228(0x00C0) Edit, BlueprintVisible, BlueprintReadOnly
		struct FCargoRunQuestParams                                CargoRun;                                                // 0x02E8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly
		struct FTaleQuestParams                                    Tale;                                                    // 0x0370(0x0038) Edit, BlueprintVisible, BlueprintReadOnly
		struct FMatchmakingQuestParams                             Matchmake;                                               // 0x03A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FStagingQuestParams                                 Staging;                                                 // 0x03A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FEmergantVoyageQuestParams                          EmergantVoyage;                                          // 0x03AA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRewardQuestParams                                  Reward;                                                  // 0x03AB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y4MR[0x4];                                   // 0x03AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedQuestParams
	 * Size -> 0x03B8
	 */
	struct FWeightedQuestParams
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OIUY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuestParams                                        Params;                                                  // 0x0008(0x03B0) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.VoyageLocationFixedParams
	 * Size -> 0x0008
	 */
	struct FVoyageLocationFixedParams
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageLocationDistance
	 * Size -> 0x0008
	 */
	struct FVoyageLocationDistance
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Max;                                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageLocationRandomParams
	 * Size -> 0x0048
	 */
	struct FVoyageLocationRandomParams
	{
	public:
		bool                                                       NPCsOnly;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CargoRunNPCsOnly;                                        // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Feature;                                                 // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Resource;                                                // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Outpost;                                                 // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Fort;                                                    // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SeaPost;                                                 // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HasLandmarks;                                            // 0x0007(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       OnlyNamedIslands;                                        // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VEK9[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVoyageLocationOnlyNamedIslandListDataAsset*         OnlyNamedIslandsListDataAsset;                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      Seas;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper
		bool                                                       WithinDistance;                                          // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_I1X3[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVoyageLocationDistance                             Distance;                                                // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_TPQ5[0x14];                                  // 0x0034(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageLocationParams
	 * Size -> 0x0058
	 */
	struct FVoyageLocationParams
	{
	public:
		EVoyageLocationType                                        Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_F8RI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVoyageLocationFixedParams                          Fixed;                                                   // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_863Y[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVoyageLocationRandomParams                         Random;                                                  // 0x0010(0x0048) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.WeightedVoyageLocationParams
	 * Size -> 0x0018
	 */
	struct FWeightedVoyageLocationParams
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JJEE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVoyageLocationParams>                       Locations;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestPoolParams
	 * Size -> 0x0030
	 */
	struct FQuestPoolParams
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C9QK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeightedQuestParams>                        Quests;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<struct FWeightedVoyageLocationParams>               Location;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		bool                                                       AllowRepeatIslandsWithinQuest;                           // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LimitTimesCanBeSelected;                                 // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ELBO[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTimesCanBeSelected;                                   // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageRecipe
	 * Size -> 0x0140
	 */
	struct FVoyageRecipe
	{
	public:
		struct FQuestDistributionParams                            QuestDistribution;                                       // 0x0000(0x00C8) Edit, DisableEditOnInstance
		struct FQuestSelectionParams                               QuestSelection;                                          // 0x00C8(0x0008) Edit, DisableEditOnInstance
		TArray<struct FQuestPoolParams>                            QuestPools;                                              // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		bool                                                       UseFixedFinalQuestPool;                                  // 0x00E0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       RandomiseChapters;                                       // 0x00E1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PIOY[0x6];                                   // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuestPoolParams                                    FixedFinalQuestPool;                                     // 0x00E8(0x0030) Edit, DisableEditOnInstance
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0118(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       DoNotNotifyParticipantsOnQuestsReceived;                 // 0x0119(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XB73[0x6];                                   // 0x011A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStat>                                 CompletionStats;                                         // 0x0120(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 ReapersMarkCompletionStats;                              // 0x0130(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.WeightedContestZone
	 * Size -> 0x000C
	 */
	struct FWeightedContestZone
	{
	public:
		class FName                                                ContestZoneName;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestZoneDistribution
	 * Size -> 0x0010
	 */
	struct FContestZoneDistribution
	{
	public:
		TArray<struct FWeightedContestZone>                        WeightedContestZones;                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestTimerData
	 * Size -> 0x0018
	 */
	struct FContestTimerData
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Q0AI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServicesConfigRetrievalString;                           // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmergentContestVoyageRecipe
	 * Size -> 0x0078 (FullSize[0x01B8] - InheritedSize[0x0140])
	 */
	struct FEmergentContestVoyageRecipe : public FVoyageRecipe
	{
	public:
		bool                                                       IsSharableVoyage;                                        // 0x0140(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PEI6[0x7];                                   // 0x0141(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FContestZoneDistribution                            WeightedContestZonesToActivate;                          // 0x0148(0x0010) Edit, DisableEditOnInstance
		struct FContestTimerData                                   ContestVoyageTime;                                       // 0x0158(0x0018) Edit, DisableEditOnInstance
		struct FStringClassReference                               ScoreSystemToLoad;                                       // 0x0170(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class FText                                                ContestArenaName;                                        // 0x0180(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_BV2T[0x20];                                  // 0x0198(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ChapterQuests
	 * Size -> 0x0010
	 */
	struct FChapterQuests
	{
	public:
		TArray<TAssetPtr<class UQuestDescDataAsset>>               QuestDescAssets;                                         // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.FeatureToggledChapters
	 * Size -> 0x0018
	 */
	struct FFeatureToggledChapters
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FChapterQuests>                              Chapters;                                                // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestVoyageIslandData
	 * Size -> 0x000C
	 */
	struct FContestVoyageIslandData
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxItemCountForIsland;                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedContestIslandData
	 * Size -> 0x0010
	 */
	struct FWeightedContestIslandData
	{
	public:
		struct FContestVoyageIslandData                            IslandData;                                              // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
		int32_t                                                    WeightedChance;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestIslandArchetype
	 * Size -> 0x0010
	 */
	struct FContestIslandArchetype
	{
	public:
		TArray<struct FWeightedContestIslandData>                  AvailableIslands;                                        // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.IslandEventIcons
	 * Size -> 0x0010
	 */
	struct FIslandEventIcons
	{
	public:
		class UTexture*                                            ActiveEventIcon;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            InactiveEventIcon;                                       // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapBackgroundItems
	 * Size -> 0x0020
	 */
	struct FCanvasWorldMapBackgroundItems
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           WorldSize;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		TArray<struct FVector2D>                                   Locations;                                               // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapForegroundItems
	 * Size -> 0x0020
	 */
	struct FCanvasWorldMapForegroundItems
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FeatureToggle;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FVector2D>                                   Locations;                                               // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapSeaAreaItems
	 * Size -> 0x0050
	 */
	struct FCanvasWorldMapSeaAreaItems
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                Name;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_E25N[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FVector2D                                           Location;                                                // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class FName                                                FeatureName;                                             // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MapTableCanvasDetails
	 * Size -> 0x0030
	 */
	struct FMapTableCanvasDetails
	{
	public:
		TArray<struct FCanvasWorldMapBackgroundItems>              BackgroundDetails;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FCanvasWorldMapForegroundItems>              ForegroundDetails;                                       // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FCanvasWorldMapSeaAreaItems>                 SeaDetails;                                              // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CanvasLerpData
	 * Size -> 0x0010
	 */
	struct FCanvasLerpData
	{
	public:
		float                                                      LerpTime;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EaseExponent;                                            // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ILDJ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IslandEventData
	 * Size -> 0x0038
	 */
	struct FIslandEventData
	{
	public:
		class UClass*                                              EventType;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FString                                              VoyageDescAssetString;                                   // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector2D                                           WorldPos;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsActive;                                                // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6Z0A[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               EventID;                                                 // 0x0024(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IUWZ[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InventoryMemory
	 * Size -> 0x0050
	 */
	struct FInventoryMemory
	{
	public:
		TMap<class UClass*, int32_t>                               LastEquippedIndexOfCategoryMap;                          // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidget
	 * Size -> 0x0018
	 */
	struct FTreasureMapWidget
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		ETreasureMapHorizontalAlignment                            HorizontalAlignment;                                     // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETreasureMapVerticalAlignment                              VerticalAlignment;                                       // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AO0O[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Angle;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Width;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Opacity;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetText
	 * Size -> 0x0020 (FullSize[0x0038] - InheritedSize[0x0018])
	 */
	struct FTreasureMapWidgetText : public FTreasureMapWidget
	{
	public:
		float                                                      Scale;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CutoutTextStyle;                                         // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShouldStrikethroughOnStart;                              // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_R0W9[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StrikethroughThickness;                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StrikethroughOffset;                                     // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        StrikethroughColor;                                      // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AthenaStreamedLevelItem
	 * Size -> 0x0028
	 */
	struct FAthenaStreamedLevelItem
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V59I[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAthenaStreamedLevelDataAsset*                       DataAsset;                                               // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FeatureToggle;                                           // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldBeVisibleOnLoad;                                   // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_21QI[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaWorldSettingsGameEventSchedulerSettingsConfiguration
	 * Size -> 0x0018
	 */
	struct FAthenaWorldSettingsGameEventSchedulerSettingsConfiguration
	{
	public:
		class FName                                                FeatureFlag;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayMode                                                  RequiredPlayMode;                                        // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2TM8[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEventSchedulerSettingsAsset*                    EventSchedulerSettings;                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldSafeZone
	 * Size -> 0x0018
	 */
	struct FWorldSafeZone
	{
	public:
		unsigned char                                              UnknownData_P8VY[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeferredBakedDecal
	 * Size -> 0x0038
	 */
	struct FDeferredBakedDecal
	{
	public:
		unsigned char                                              UnknownData_Z4QG[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StartPickupObjectActionRuleParams
	 * Size -> 0x0010
	 */
	struct FStartPickupObjectActionRuleParams
	{
	public:
		TArray<EWieldableItemSize>                                 WieldableItemSizesDisablePickup;                         // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ItemProxyImpactVfxParams
	 * Size -> 0x0010
	 */
	struct FItemProxyImpactVfxParams
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9LTH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Particles;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmissaryBootyItemStats
	 * Size -> 0x0018
	 */
	struct FEmissaryBootyItemStats
	{
	public:
		class UClass*                                              EmissaryCompany;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FPlayerStat>                                 Stats;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.BootyItemStats
	 * Size -> 0x0090
	 */
	struct FBootyItemStats
	{
	public:
		TArray<struct FPlayerStat>                                 HandInPlayerStats;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 HandInStolenPlayerStats;                                 // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 HandInAsPirateLegendPlayerStats;                         // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 HandInOnSchedulePlayerStats;                             // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 HandInAsPirateLegendOnSchedulePlayerStats;               // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FEmissaryBootyItemStats>                     HandInAsEmissaryPlayerStats;                             // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FEmissaryBootyItemStats>                     HandInAsMaxLevelEmissaryPlayerStats;                     // 0x0060(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FEmissaryBootyItemStats>                     HandInStolenAsEmissaryPlayerStats;                       // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FEmissaryBootyItemStats>                     HandInStolenAsMaxLevelEmissaryPlayerStats;               // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanyBootyStats
	 * Size -> 0x0098
	 */
	struct FCompanyBootyStats
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FBootyItemStats                                     Stats;                                                   // 0x0008(0x0090) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanyBootyStatList
	 * Size -> 0x0010
	 */
	struct FCompanyBootyStatList
	{
	public:
		TArray<struct FCompanyBootyStats>                          CompanyList;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ConditionalHandInStat
	 * Size -> 0x0020
	 */
	struct FConditionalHandInStat
	{
	public:
		unsigned char                                              UnknownData_KYFT[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerStat                                         Stat;                                                    // 0x0018(0x0004) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_EADK[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootyItemSellPrerequisites
	 * Size -> 0x0010
	 */
	struct FBootyItemSellPrerequisites
	{
	public:
		TArray<class UClass*>                                      Entitlements;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.RewardId
	 * Size -> 0x0008
	 */
	struct FRewardId
	{
	public:
		class FName                                                RewardId;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanySpecificBootyReward
	 * Size -> 0x0018
	 */
	struct FCompanySpecificBootyReward
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FRewardId                                           RewardId;                                                // 0x0008(0x0008) Edit, DisableEditOnInstance
		bool                                                       RequirePirateLegend;                                     // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DG9B[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MerchantCrateItemInfoFaunaBreedRarityEntry
	 * Size -> 0x00C0
	 */
	struct FMerchantCrateItemInfoFaunaBreedRarityEntry
	{
	public:
		class UClass*                                              FaunaBreed;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                Rarity;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FBootyItemStats                                     HandInStats;                                             // 0x0010(0x0090) Edit, DisableEditOnInstance
		struct FCompanyBootyStatList                               CompanySpecificStats;                                    // 0x00A0(0x0010) Edit, DisableEditOnInstance
		TArray<struct FCompanySpecificBootyReward>                 CompanySpecificHandInRewardIds;                          // 0x00B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.DetailAppearenceMaterialDesc
	 * Size -> 0x0018
	 */
	struct FDetailAppearenceMaterialDesc
	{
	public:
		struct FStringAssetReference                               Material;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int32_t                                                    MaterialIndex;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		unsigned char                                              UnknownData_S9Z2[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DetailAppearenceDesc
	 * Size -> 0x0030
	 */
	struct FDetailAppearenceDesc
	{
	public:
		struct FStringAssetReference                               Mesh;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<struct FDetailAppearenceMaterialDesc>               Materials;                                               // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		struct FStringAssetReference                               CustomDepthMaterial;                                     // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MerchantCrateSfx
	 * Size -> 0x0020
	 */
	struct FMerchantCrateSfx
	{
	public:
		class UWwiseEvent*                                         EquipSfx;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         UnequipSfx;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WielderLandedJumpSfx;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WielderFootstepLayerOneshot;                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemInfoTogglePair
	 * Size -> 0x0018
	 */
	struct FItemInfoTogglePair
	{
	public:
		class FName                                                Toggle;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringClassReference                               ItemInfo;                                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.BeaconLitWithFlameOfFateStatsToFire
	 * Size -> 0x0018
	 */
	struct FBeaconLitWithFlameOfFateStatsToFire
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YCMH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStat>                                 StatsToFire;                                             // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BeaconData
	 * Size -> 0x0002
	 */
	struct FBeaconData
	{
	public:
		bool                                                       LightIsOn_Server;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BedPartDesc
	 * Size -> 0x0010
	 */
	struct FBedPartDesc
	{
	public:
		class UMaterialInterface*                                  BedMaterial;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  DrapesMaterial;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BellPlayerStats
	 * Size -> 0x0010
	 */
	struct FBellPlayerStats
	{
	public:
		TArray<struct FPlayerStat>                                 StatsToFireUponBellRing;                                 // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BellDesc
	 * Size -> 0x0018
	 */
	struct FBellDesc
	{
	public:
		class UStaticMesh*                                         BellMesh;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         BellRingSFX;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         BellRingTurbulenceSFX;                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AtmosphericPressureZoneParameters
	 * Size -> 0x0014
	 */
	struct FAtmosphericPressureZoneParameters
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TargetPressure;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PushForce;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TwistForce;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedAIBoobyTrapSpawner
	 * Size -> 0x0010
	 */
	struct FWeightedAIBoobyTrapSpawner
	{
	public:
		class UAIBoobyTrapSpawner*                                 Spawner;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5R53[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BoobyTrapSpawnerRankEntry
	 * Size -> 0x0018
	 */
	struct FBoobyTrapSpawnerRankEntry
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChanceOfBeingBoobyTrapped;                               // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FWeightedAIBoobyTrapSpawner>                 WeightedSpawners;                                        // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetTexture
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FTreasureMapWidgetTexture : public FTreasureMapWidget
	{
	public:
		class UTexture*                                            Image;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RelativeHeightModifier;                                  // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FlipX;                                                   // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ScaleHeightOnMultipleLines;                              // 0x0025(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_40CB[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetLocalisedText
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	struct FTreasureMapWidgetLocalisedText : public FTreasureMapWidgetText
	{
	public:
		class FText                                                Text;                                                    // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible
		unsigned char                                              UnknownData_DU1K[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetLocalisedTextWithFontOverride
	 * Size -> 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
	 */
	struct FTreasureMapWidgetLocalisedTextWithFontOverride : public FTreasureMapWidgetLocalisedText
	{
	public:
		class UFont*                                               FontOverride;                                            // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PageReference
	 * Size -> 0x0018
	 */
	struct FPageReference
	{
	public:
		struct FStringAssetReference                               PageReference;                                           // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		unsigned char                                              NumberOfPages;                                           // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_F2W1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PageLayoutRepInfo
	 * Size -> 0x0028
	 */
	struct FPageLayoutRepInfo
	{
	public:
		unsigned char                                              UnknownData_BDEB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTreasureMapWidgetTexture>                   Images;                                                  // 0x0008(0x0010) ZeroConstructor
		TArray<struct FTreasureMapWidgetLocalisedTextWithFontOverride> GeneralText;                                             // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestBookRepInfo
	 * Size -> 0x0028
	 */
	struct FQuestBookRepInfo
	{
	public:
		int32_t                                                    LeftPageIndex;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LRWC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CurrentBookContents;                                     // 0x0008(0x0010) ZeroConstructor
		TArray<struct FPageLayoutRepInfo>                          ProcPageList;                                            // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestBookPageRenderer
	 * Size -> 0x0018
	 */
	struct FQuestBookPageRenderer
	{
	public:
		class UFont*                                               Font;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontScale;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontMaxScale;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontLineSpacingScale;                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EOE9[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestBookMaterialHandler
	 * Size -> 0x0140
	 */
	struct FQuestBookMaterialHandler
	{
	public:
		int32_t                                                    PageWidth;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PageHeight;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FQuestBookPageRenderer                              PageTextRenderer;                                        // 0x0008(0x0018) Edit, DisableEditOnInstance
		class UMaybeCompressedCanvasRenderTarget2D*                LeftSpreadLeftPageRenderTarget;                          // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                LeftSpreadRightPageRenderTarget;                         // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                RightSpreadLeftPageRenderTarget;                         // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                RightSpreadRightPageRenderTarget;                        // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UQuestBookPageLayout*                                LeftSpreadLeftPageContents;                              // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NQPG[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UQuestBookPageLayout*                                LeftSpreadRightPageContents;                             // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DQC8[0x10];                                  // 0x0060(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UQuestBookPageLayout*                                RightSpreadLeftPageContents;                             // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_52FT[0x10];                                  // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UQuestBookPageLayout*                                RightSpreadRightPageContents;                            // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BOG4[0xB0];                                  // 0x0090(0x00B0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureMapTextEntry
	 * Size -> 0x0048
	 */
	struct FTreasureMapTextEntry
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                Substitution;                                            // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_BU7Z[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.TreasureMapTextDesc
	 * Size -> 0x0048
	 */
	struct FTreasureMapTextDesc
	{
	public:
		class FText                                                Pattern;                                                 // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_NQY8[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FTreasureMapTextEntry>                       Substitutions;                                           // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BountyMapTargetDesc
	 * Size -> 0x0050
	 */
	struct FBountyMapTargetDesc
	{
	public:
		struct FTreasureMapTextDesc                                Name;                                                    // 0x0000(0x0048)
		class UTexture*                                            MugShotImage;                                            // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyMapContents
	 * Size -> 0x0068
	 */
	struct FBountyMapContents
	{
	public:
		struct FTreasureMapTextDesc                                Location;                                                // 0x0000(0x0048)
		TArray<struct FTreasureMapTextDesc>                        Descriptions;                                            // 0x0048(0x0010) ZeroConstructor
		TArray<struct FBountyMapTargetDesc>                        Targets;                                                 // 0x0058(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestBootyItemPopUpEntry
	 * Size -> 0x0010
	 */
	struct FQuestBootyItemPopUpEntry
	{
	public:
		class FName                                                BootyItemIdentifier;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestMugShotSet
	 * Size -> 0x0028
	 */
	struct FBountyQuestMugShotSet
	{
	public:
		class UAthenaAIFormDataAsset*                              Form;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            MaleCaptainMugShot;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            FemaleCaptainMugShot;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            MaleCrewMugShot;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            FemaleCrewMugShot;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestLayoutOption
	 * Size -> 0x0010
	 */
	struct FBountyQuestLayoutOption
	{
	public:
		int32_t                                                    NumCaptains;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumCrew;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBountyMapLayout*                                    Layout;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadoutSubstitution
	 * Size -> 0x0020
	 */
	struct FLoadoutSubstitution
	{
	public:
		struct FStringAssetReference                               LoadoutToSubstituteOut;                                  // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<struct FStringAssetReference>                       LoadoutsToSubstituteIn;                                  // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanySkillsetProgressions
	 * Size -> 0x0028
	 */
	struct FCompanySkillsetProgressions
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FTargetSkillsetProgressionPair                      TargetSkillsets;                                         // 0x0008(0x0020) Edit
	};

	/**
	 * ScriptStruct Athena.CannonDesc
	 * Size -> 0x0030
	 */
	struct FCannonDesc
	{
	public:
		struct FStringAssetReference                               CannonBarrelMesh;                                        // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CannonBarrelCachedMeshResourceSize;                      // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               CannonBoxMesh;                                           // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CannonBoxCachedMeshResourceSize;                         // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadableProjectileData
	 * Size -> 0x0018
	 */
	struct FLoadableProjectileData
	{
	public:
		struct FStringAssetReference                               DataAsset;                                               // 0x0000(0x0010) ZeroConstructor
		int32_t                                                    GeneratedDataRNGSeed;                                    // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldProjectileTrailDoReflections;                      // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4I6N[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCurseVFXTemplate
	 * Size -> 0x0020
	 */
	struct FShipCurseVFXTemplate
	{
	public:
		class UClass*                                              ActorClass;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UParticleSystem*                                     Template;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              SocketNameSubstring;                                     // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCurseAudioLoop
	 * Size -> 0x0018
	 */
	struct FShipCurseAudioLoop
	{
	public:
		class UWwiseEvent*                                         PlayLoop;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopLoop;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             PoolWrapper;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCurseFXData
	 * Size -> 0x0030
	 */
	struct FShipCurseFXData
	{
	public:
		EShipCurseTag                                              ShipCurseTag;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TJ9R[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FShipCurseVFXTemplate>                       VFXTemplates;                                            // 0x0008(0x0010) Edit, ZeroConstructor
		struct FShipCurseAudioLoop                                 AudioLoop;                                               // 0x0018(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.ShipActiveCurseFXData
	 * Size -> 0x0030
	 */
	struct FShipActiveCurseFXData
	{
	public:
		struct FShipCurseFXData                                    CurseFXData;                                             // 0x0000(0x0030)
	};

	/**
	 * ScriptStruct Athena.ShipCurseSpawnedFXObject
	 * Size -> 0x0030
	 */
	struct FShipCurseSpawnedFXObject
	{
	public:
		unsigned char                                              UnknownData_HDJK[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         StopAudioLoopEvent;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCurseSpawnedFXForCurse
	 * Size -> 0x0018
	 */
	struct FShipCurseSpawnedFXForCurse
	{
	public:
		unsigned char                                              UnknownData_QXC7[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FShipCurseSpawnedFXObject>                   SpawnedFXObjects;                                        // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SinkingShipParams
	 * Size -> 0x0038
	 */
	struct FSinkingShipParams
	{
	public:
		float                                                      DragWhenGrindingToHalt;                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinSpdToStopToBeforeLowering;                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LowerIntoWaterTime;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeIntoLoweringToStartOcclusionZoneShrinkage;           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AngularDragDuringSinkingSequence;                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      KeeledOverTime;                                          // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurnOffBuoyancyTime;                                     // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FinalSinkingBuoyancy;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SinkingTimeUntilDestroy;                                 // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ReduceWaterOcclusionZoneTime;                            // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ReduceWaterOcclusionZoneTimeHurryUp;                     // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeIntoKeelingOverToTeleportPlayer;                     // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinSampleSubmersionToConsiderInWater;                    // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPctSamplesRequiredSubmergedToBeAbleToSink;            // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipPartConnections
	 * Size -> 0x0098
	 */
	struct FShipPartConnections
	{
	public:
		class FName                                                AnchorName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CapstanName;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RudderName;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                WheelName;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MainMastName;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MainMastSailHoistRightName;                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MainMastSailHoistLeftName;                               // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MainMastSailAngleRightName;                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MainMastSailAngleLeftName;                               // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MizzenMastName;                                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MizzenMastSailHoistRightName;                            // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MizzenMastSailHoistLeftName;                             // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MizzenMastSailAngleRightName;                            // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MizzenMastSailAngleLeftName;                             // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForeMastName;                                            // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForeMastSailHoistRightName;                              // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForeMastSailHoistLeftName;                               // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForeMastSailAngleRightName;                              // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForeMastSailAngleLeftName;                               // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipConfigurationSettings
	 * Size -> 0x0018
	 */
	struct FShipConfigurationSettings
	{
	public:
		float                                                      MetresSailedStatSendFrequency;                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinimumDistanceSailedBeforeSendingUpdate;                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxVelocityAllowedForServerMigration;                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxAngularVelocityAllowedForServerMigration;             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShipHeartbeatFrequencySeconds;                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       MigrationBasedOnVelocityEnabled;                         // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DPD1[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementSailThroughStormAtNightWithLightsOff
	 * Size -> 0x0080
	 */
	struct FAchievementSailThroughStormAtNightWithLightsOff
	{
	public:
		uint32_t                                                   RequiredTravelDistance;                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_R0YV[0x4C];                                  // 0x0004(0x004C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AShip*                                               Ship;                                                    // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EXQ8[0x28];                                  // 0x0058(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementSailCloseToShipWithoutFiring
	 * Size -> 0x0018
	 */
	struct FAchievementSailCloseToShipWithoutFiring
	{
	public:
		float                                                      RangeToRemainWithinInMetres;                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceToTravelInMetres;                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QPYK[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementSailFullyWithTheWind
	 * Size -> 0x0008
	 */
	struct FAchievementSailFullyWithTheWind
	{
	public:
		float                                                      DistanceToTravelInMetres;                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GDUN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AchievementSailWithFlameOfFateColoursAboard
	 * Size -> 0x00F8
	 */
	struct FAchievementSailWithFlameOfFateColoursAboard
	{
	public:
		uint32_t                                                   RequiredTravelDistanceInMetres;                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1WKX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AShip*                                               Ship;                                                    // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class AShipInteractableLight*>                      ShipLights;                                              // 0x0010(0x0010) ZeroConstructor, Transient
		unsigned char                                              UnknownData_AO0I[0xD8];                                  // 0x0020(0x00D8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipDynamics
	 * Size -> 0x00A0
	 */
	struct FShipDynamics
	{
	public:
		bool                                                       bProcessSailBasedFakeRoll;                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MU5V[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SidewaysForceFromSailsForMaxFakeRoll;                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BuoyancyProbeZOffsetAtMaxFakeRoll;                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinHullSubmersionToApplyNoHullDragOrRudder;              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapsizedAngleThreshold;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G0N6[0x8C];                                  // 0x0014(0x008C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EncounterParams
	 * Size -> 0x000C
	 */
	struct FEncounterParams
	{
	public:
		EEncounterType                                             EncounterType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KDIN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EncounterRadius;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEncounterDimensions                                       EncounterDimensions;                                     // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEncounterMobility                                         EncounterMobility;                                       // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_A5E6[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DamageParamWeights
	 * Size -> 0x00A0
	 */
	struct FDamageParamWeights
	{
	public:
		float                                                      StrainUpperBound;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ArenaStrainUpperBound;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   MinMaxRanges;                                            // 0x0008(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   AnticipationRanges;                                      // 0x0038(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   DamageRanges;                                            // 0x0068(0x0030) Edit
		float                                                      BottomDeckWeight;                                        // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ExistingHoleWeight;                                      // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StrainDamage
	 * Size -> 0x0028
	 */
	struct FStrainDamage
	{
	public:
		TArray<struct FDamageParamWeights>                         DamageParams;                                            // 0x0000(0x0010) Edit, ZeroConstructor
		class UClass*                                              DamagerType;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_44GO[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LiquidContents
	 * Size -> 0x0040
	 */
	struct FLiquidContents
	{
	public:
		class AShip*                                               LiquidSource;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class AShip*>                                       LiquidTargets;                                           // 0x0008(0x0010) ZeroConstructor
		class AActor*                                              Container;                                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LiquidVolume;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               ScoopID;                                                 // 0x0024(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      LiquidTransferFillAmountModifier;                        // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EContainerType                                             ContainerType;                                           // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XRKL[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BucketContentsInfo
	 * Size -> 0x0058
	 */
	struct FBucketContentsInfo
	{
	public:
		EThrowableLiquidType                                       ThrowableLiquidType;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5YDQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ProjectileClassToSpawn;                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ProjectileClassToSpawnAtWielder;                         // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UWwiseEvent*                                         ThrowSfx;                                                // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             ThrowVfxFirstPerson;                                     // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             ThrowVfxThirdPerson;                                     // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             DrenchWielderVfxThirdPerson;                             // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             BucketContentsParticleSystemFirstPerson;                 // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             BucketContentsParticleSystemThirdPerson;                 // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                SwitchState;                                             // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LiquidLevel;                                             // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5ZP8[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileAim
	 * Size -> 0x0050
	 */
	struct FProjectileAim
	{
	public:
		struct FVector                                             AimDirection;                                            // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             AimPosition;                                             // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class UPrimitiveComponent*                                 AimBase;                                                 // 0x0018(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTransform                                          AimBaseTransform;                                        // 0x0020(0x0030) IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.QuestVariableItemSpawnDataType
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableItemSpawnDataType : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableGuid
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableGuid : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariablePlayerActor
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariablePlayerActor : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.LocationGeneratorSample
	 * Size -> 0x001C
	 */
	struct FLocationGeneratorSample
	{
	public:
		ELocationGeneratorSampleType                               Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YQEW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Normal;                                                  // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CampaignPopUpNotificationInfo
	 * Size -> 0x0010
	 */
	struct FCampaignPopUpNotificationInfo
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CannonEnchantmentDesc
	 * Size -> 0x0018
	 */
	struct FCannonEnchantmentDesc
	{
	public:
		class UObject*                                             MuzzleFlashVfxFirstPerson;                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             MuzzleFlashVfxThirdPerson;                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         FireSfx;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapShipIcons
	 * Size -> 0x0018
	 */
	struct FCanvasWorldMapShipIcons
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UTexture*                                            ShipTexture;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            OffscreenTexture;                                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapReaperTrackedBootItemIcon
	 * Size -> 0x0018
	 */
	struct FCanvasWorldMapReaperTrackedBootItemIcon
	{
	public:
		EReapersMarkTrackedBootyItemType                           BootyItemType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EH27[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            Texture;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_R8JL[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FactionStreakIcon
	 * Size -> 0x0010
	 */
	struct FFactionStreakIcon
	{
	public:
		class UTexture*                                            FactionStreakIcon;                                       // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              Faction;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapShipLocation
	 * Size -> 0x0058
	 */
	struct FCanvasWorldMapShipLocation
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              ShipSize;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FVector2D                                           Location;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Rotation;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FCanvasLerpData                                     LerpData;                                                // 0x0024(0x0010)
		bool                                                       IsInAlliance;                                            // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInFaction;                                             // 0x0035(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsFactionMaxRank;                                        // 0x0036(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInvadingShip;                                          // 0x0037(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CrewFactionName;                                         // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ReapersMarkLevel;                                        // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              EmissaryLevel;                                           // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsContestShip;                                           // 0x0042(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZE48[0x5];                                   // 0x0043(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            CrewLiveryOverlayIcon;                                   // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsReapersTrackedShip;                                    // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInTunnel;                                              // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RLLJ[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReapersMarkTrackedBootyItemInfo
	 * Size -> 0x0010
	 */
	struct FReapersMarkTrackedBootyItemInfo
	{
	public:
		struct FVector                                             ItemLocation;                                            // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		EReapersMarkTrackedBootyItemType                           ItemType;                                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2IEO[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CapstanDesc
	 * Size -> 0x0048
	 */
	struct FCapstanDesc
	{
	public:
		struct FStringAssetReference                               CapstanBodyMesh;                                         // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CapstanBodyCachedMeshResourceSize;                       // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               CapstanArmMesh;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CapstanArmCachedMeshResourceSize;                        // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               CapstanReleaseMesh;                                      // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CapstanReleaseCachedMeshResourceSize;                    // 0x0040(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapstanParams
	 * Size -> 0x0014
	 */
	struct FCapstanParams
	{
	public:
		float                                                      MaxVelocityPerPlayer;                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxFreeLoweringVelocity;                                 // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxError;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CorrectiveForceMultiplier;                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerAnimationOnCapstanMultiplier;                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapstanAudioParams
	 * Size -> 0x0068
	 */
	struct FCapstanAudioParams
	{
	public:
		class UWwiseEvent*                                         CapstanStart;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CapstanStop;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CapstanDamagedStart;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CapstanDamagedStop;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CapstanStopFullyRaised;                                  // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CapstanStopFullyLowered;                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             CapstanEmitterPool;                                      // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CapstanTurnRateRtpc;                                     // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanTurnMinRtpcValue;                                 // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanTurnMaxRtpcValue;                                 // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                BoatVelocityRtpc;                                        // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BoatVelocityMinRtpcValue;                                // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BoatVelocityMaxRtpcValue;                                // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EmpiricalMaxShipVelocity;                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CapstanDamageRtpc;                                       // 0x005C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanDamageRtpcMaxValue;                               // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapstanNetState
	 * Size -> 0x0008
	 */
	struct FCapstanNetState
	{
	public:
		float                                                      TargetRatio;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsLocked;                                                // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QD5S[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RepairableComponentMaxDamageLevelOverride
	 * Size -> 0x000C
	 */
	struct FRepairableComponentMaxDamageLevelOverride
	{
	public:
		class FName                                                FeatureName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxDamageLevel;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RepairableAuthoritiveRepairState
	 * Size -> 0x0018
	 */
	struct FRepairableAuthoritiveRepairState
	{
	public:
		ERepairableState                                           RepairableState;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XSBN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AActor>>                       RepairingList;                                           // 0x0008(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.CaptainCurtainsPartDesc
	 * Size -> 0x0020
	 */
	struct FCaptainCurtainsPartDesc
	{
	public:
		struct FStringAssetReference                               PrimaryCurtainMesh;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		class UMaterialInterface*                                  SecondaryCurtainMaterial;                                // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    PrimaryCurtainCachedMeshResourceSize;                    // 0x0018(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunItemDropOffData
	 * Size -> 0x0028
	 */
	struct FCargoRunItemDropOffData
	{
	public:
		struct FGuid                                               PickUpId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               DeliveryLocationId;                                      // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int64_t                                                    DeliveryDeadlineTicks;                                   // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunReward
	 * Size -> 0x0020
	 */
	struct FCargoRunReward
	{
	public:
		TArray<struct FRewardId>                                   OnTimeRewards;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FRewardId>                                   LateRewards;                                             // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanySpecificCargoRunReward
	 * Size -> 0x0028
	 */
	struct FCompanySpecificCargoRunReward
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FCargoRunReward                                     Reward;                                                  // 0x0008(0x0020) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanySpecificCargoRunStats
	 * Size -> 0x0018
	 */
	struct FCompanySpecificCargoRunStats
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FPlayerStat>                                 StatsToFireUponPerfectOnTimeHandIn;                      // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanyCargoRunHandInStats
	 * Size -> 0x0038
	 */
	struct FCompanyCargoRunHandInStats
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FPlayerStat>                                 StatsToFireOnHandIn;                                     // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 StatsToFireOnDamagedHandIn;                              // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FPlayerStat>                                 StatsToFirePerHealthTierOnHandIn;                        // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CargoRunMapContents
	 * Size -> 0x0018
	 */
	struct FCargoRunMapContents
	{
	public:
		struct FGuid                                               NPCId;                                                   // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CompanyIndex;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumOfItems;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunQuestRandomRequiredItemsEntry
	 * Size -> 0x0010
	 */
	struct FCargoRunQuestRandomRequiredItemsEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNum;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              RequiredItem;                                            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunQuestCategoryGroup
	 * Size -> 0x0020
	 */
	struct FCargoRunQuestCategoryGroup
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GroupName;                                               // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I8LQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCargoRunQuestRandomRequiredItemsEntry>      RequiredItemEntries;                                     // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CarouselPirateDesc
	 * Size -> 0x0030
	 */
	struct FCarouselPirateDesc
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIPGGender                                                 Gender;                                                  // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIPGEthnicity                                              Ethnicity;                                               // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UX56[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Age;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FRadialCoordinate                                   BodyShape;                                               // 0x000C(0x0008) Edit, BlueprintVisible
		float                                                      Dirtiness;                                               // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Wonkiness;                                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LKZ3[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Outfit;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.CarouselPirateBodyshapeCompass
	 * Size -> 0x0002
	 */
	struct FCarouselPirateBodyshapeCompass
	{
	public:
		ECarouselPirateBodyshapeDirection                          StartDirection;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECarouselPirateBodyshapeDirection                          EndDirection;                                            // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CarouselPirateBodyshape
	 * Size -> 0x0018
	 */
	struct FCarouselPirateBodyshape
	{
	public:
		float                                                      RandomizationBias;                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FFloatRange                                         ShapeMagnitude;                                          // 0x0004(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FCarouselPirateBodyshapeCompass                     BodyShapeCompass;                                        // 0x0014(0x0002) Edit, BlueprintVisible
		unsigned char                                              UnknownData_DM8D[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CarouselPirateGroup
	 * Size -> 0x006C
	 */
	struct FCarouselPirateGroup
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FFloatRange                                         Age;                                                     // 0x000C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         Wonkiness;                                               // 0x001C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFloatRange                                         Dirt;                                                    // 0x002C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FCarouselPirateBodyshape                            MaleBodyShape;                                           // 0x003C(0x0018) Edit, BlueprintVisible
		struct FCarouselPirateBodyshape                            FemaleBodyShape;                                         // 0x0054(0x0018) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.CarouselPirateClothingItem
	 * Size -> 0x0010
	 */
	struct FCarouselPirateClothingItem
	{
	public:
		class UClass*                                              Item;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EIPGEthnicity                                              EthnicityFilter;                                         // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JGUY[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CarouselPirateClothingCategoryBias
	 * Size -> 0x0010
	 */
	struct FCarouselPirateClothingCategoryBias
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      LikelihoodOfHaving;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ProgressivlyDecreaseChance;                              // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JM2L[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CarouselPirateClothing
	 * Size -> 0x0020
	 */
	struct FCarouselPirateClothing
	{
	public:
		TArray<struct FCarouselPirateClothingItem>                 AvailableItems;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FCarouselPirateClothingCategoryBias>         Probabilities;                                           // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CarouselPirateGeneratorParams
	 * Size -> 0x00C8
	 */
	struct FCarouselPirateGeneratorParams
	{
	public:
		int32_t                                                    MinNumOfEachGender;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinNumOfEachEthnicity;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FCarouselPirateGroup>                        Groups;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FCarouselPirateGroup                                Default;                                                 // 0x0018(0x006C) Edit, BlueprintVisible
		unsigned char                                              UnknownData_KV28[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCarouselPirateClothing                             MaleClothing;                                            // 0x0088(0x0020) Edit, BlueprintVisible
		struct FCarouselPirateClothing                             FemaleClothing;                                          // 0x00A8(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.CategoryDefaultsUnit
	 * Size -> 0x0018
	 */
	struct FCategoryDefaultsUnit
	{
	public:
		TArray<class FString>                                      PartialStrings;                                          // 0x0000(0x0010) Edit, ZeroConstructor
		class UClass*                                              Category;                                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ChandelierPartDesc
	 * Size -> 0x0030
	 */
	struct FChandelierPartDesc
	{
	public:
		struct FStringAssetReference                               ChandelierMesh;                                          // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		struct FStringAssetReference                               FlamesMesh;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    ChandelierCachedMeshResourceSize;                        // 0x0020(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    ChandelierFlamesCachedMeshResourceSize;                  // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AudioStingRelevantShips
	 * Size -> 0x0010
	 */
	struct FAudioStingRelevantShips
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsAIShip;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsEmissary;                                              // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsCaptainedShip;                                         // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P8VM[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AudioStingShipsSpotted
	 * Size -> 0x0010
	 */
	struct FAudioStingShipsSpotted
	{
	public:
		class AActor*                                              SpottedShip;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     TimeSpotted;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerMusicController
	 * Size -> 0x01C0
	 */
	struct FPlayerMusicController
	{
	public:
		class UPlayerMusicControllerParams*                        PlayerMusicParams;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U4P1[0x30];                                  // 0x0008(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              LocalPlayerActor;                                        // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPlayerOceanAudioComponent*                          PlayerOceanAudioComponent;                               // 0x0040(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPlayerAtmosphericsAudioComponent*                   AtmosphericsAudioComponent;                              // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaPlayerCharacter*                              AthenaPlayerCharacter;                                   // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaWorldSettings*                                AthenaWorldSettings;                                     // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_93P5[0x138];                                 // 0x0060(0x0138) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAudioStingRelevantShips>                    RelevantAudioStingShips;                                 // 0x0198(0x0010) ZeroConstructor
		TArray<struct FAudioStingShipsSpotted>                     AudioStingShipsSpottedRecently;                          // 0x01A8(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_P651[0x8];                                   // 0x01B8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NameActiveStatePair
	 * Size -> 0x000C
	 */
	struct FNameActiveStatePair
	{
	public:
		class FName                                                StateName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsActive;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_95S2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NamedStateSelector
	 * Size -> 0x0018
	 */
	struct FNamedStateSelector
	{
	public:
		TArray<struct FNameActiveStatePair>                        NamedStates;                                             // 0x0000(0x0010) Edit, ZeroConstructor, Protected
		class FName                                                DefaultStateName;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StateCategoryGroup
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FStateCategoryGroup : public FNamedStateSelector
	{
	public:
		class FName                                                GroupName;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DamageTypeToAudio
	 * Size -> 0x0028
	 */
	struct FDamageTypeToAudio
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                AudioState;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StartAudioEvent;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         EndAudioEvent;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Duration;                                                // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_O3GB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HealthChangeAudio
	 * Size -> 0x0010
	 */
	struct FHealthChangeAudio
	{
	public:
		EHealthChangedReason                                       Reason;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1RER[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         Sfx;                                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FogTypeToAudio
	 * Size -> 0x0018
	 */
	struct FFogTypeToAudio
	{
	public:
		EFogBankType                                               FogBankType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GWNR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         FogMusicPlayEvent;                                       // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         FogMusicStopEvent;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CharacterSocketCollisionHandle
	 * Size -> 0x000C
	 */
	struct FCharacterSocketCollisionHandle
	{
	public:
		unsigned char                                              UnknownData_D7JK[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterSocketCollisionDesc
	 * Size -> 0x0028
	 */
	struct FCharacterSocketCollisionDesc
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterSocketCollisionTraceType                         TraceType;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S1E0[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TraceDistance;                                           // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TraceOffset;                                             // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterSocketCollisionResultType                        ResultType;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TG68[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FootIndex;                                               // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YW6E[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestVariableBool
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableBool : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ChestOfRageReplicatedData
	 * Size -> 0x000C
	 */
	struct FChestOfRageReplicatedData
	{
	public:
		ERageState                                                 State;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LHNG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RageValue;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HasBeenActivated;                                        // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_L7BB[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ChestOfRageDamageTableEntry
	 * Size -> 0x0008
	 */
	struct FChestOfRageDamageTableEntry
	{
	public:
		EHealthChangedReason                                       Reason;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SW2H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeToAdd;                                               // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariableNameArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableNameArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableName
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableName : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ClothingLoadout
	 * Size -> 0x0010
	 */
	struct FClothingLoadout
	{
	public:
		TArray<class UClass*>                                      Items;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ClothingChestRandomFilter
	 * Size -> 0x0010
	 */
	struct FClothingChestRandomFilter
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      Likelihood;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4T0P[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClothingLoadoutContainer
	 * Size -> 0x0018
	 */
	struct FClothingLoadoutContainer
	{
	public:
		struct FClothingLoadout                                    Loadout;                                                 // 0x0000(0x0010)
		bool                                                       HasBeenSet;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZOUD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudDomeParameters
	 * Size -> 0x0028
	 */
	struct FCloudDomeParameters
	{
	public:
		float                                                      Width;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DomeToTileProportion;                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Height;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighPressureExtraHeight;                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeProportion;                                          // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceCurvatureOvershoot;                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistantStreetCloudRotation;                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProportionOfCloudDomeToAlwaysUpdate;                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SplitRemainingCloudsOverThisManyUpdates;                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UpdateClosestProportionEveryOtherFrame;                  // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableDistanceCurvature;                                 // 0x0025(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YPNU[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudTileParameters
	 * Size -> 0x0020
	 */
	struct FCloudTileParameters
	{
	public:
		TArray<struct FCloudTypeDefinition>                        Meshes;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int32_t                                                    Samples;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Seed;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MeshScaleMultiplier;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldCloudTileBeGenerated;                              // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ECZZ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloudWeatherParameters
	 * Size -> 0x0028
	 */
	struct FCloudWeatherParameters
	{
	public:
		struct FVector2D                                           DefaultCloudVelocity;                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay
		class UMaterialParameterCollection*                        AtmosphericMaterialParams;                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GlobalAtmosphericPressure;                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AtmosphericPressureThresholdSize;                        // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWindDelayLength;                                      // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WindSpeedMultiplier;                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UsesGlobalWindService : 1;                               // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              UsesPressureZones : 1;                                   // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              CloudsCastShadows : 1;                                   // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              PressureIsControlledByParameterCollection : 1;           // 0x0020(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              UnknownData_F4XU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BlueprintableIntegerHandle
	 * Size -> 0x0004
	 */
	struct FBlueprintableIntegerHandle
	{
	public:
		int32_t                                                    Handle;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CoastObject
	 * Size -> 0x0050
	 */
	struct FCoastObject
	{
	public:
		class USplineComponent*                                    CoastSplineInternal;                                     // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USplineComponent*                                    InnerSplineInternal;                                     // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             SplineOrigin;                                            // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      CoastalLookupSquaredDistance;                            // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LZBZ[0x30];                                  // 0x0020(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerTalkingSettings
	 * Size -> 0x0030
	 */
	struct FPlayerTalkingSettings
	{
	public:
		struct FLinearColor                                        IconTint;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class UTexture2D*                                          Icon;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ScreenEdgePadding;                                       // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Scale;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeInTimeInSeconds;                                     // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_483M[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HUDBlurSourceParams
	 * Size -> 0x0008
	 */
	struct FHUDBlurSourceParams
	{
	public:
		float                                                      SecondsToFullyBlur;                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SecondsToFullyUnblur;                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HUDBlurParams
	 * Size -> 0x0018
	 */
	struct FHUDBlurParams
	{
	public:
		class UMaterialParameterCollection*                        ScreenEffectsMaterialParameterCollection;                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FHUDBlurSourceParams                                MenuBlurParams;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
		struct FHUDBlurSourceParams                                MigrationBlurParams;                                     // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.HUDBlur
	 * Size -> 0x0018
	 */
	struct FHUDBlur
	{
	public:
		class UMaterialParameterCollectionInstance*                ScreenEffectsMaterialParameterCollectionInstance;        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4Q77[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CoherentToWwiseEventDataAssetEntry
	 * Size -> 0x0018
	 */
	struct FCoherentToWwiseEventDataAssetEntry
	{
	public:
		class FString                                              CueKey;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class UWwiseEvent*                                         AudioEvent;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HealthUI
	 * Size -> 0x0170
	 */
	struct FHealthUI
	{
	public:
		float                                                      MinVisibleHealth;                                        // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ContinuousTimePerUpdate;                                 // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J4X5[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               TargetPawn;                                              // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1BTU[0x148];                                 // 0x0028(0x0148) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NameplateVisibilityFactors
	 * Size -> 0x0014
	 */
	struct FNameplateVisibilityFactors
	{
	public:
		unsigned char                                              UnknownData_N8M1[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CompanySkin
	 * Size -> 0x00B8
	 */
	struct FCompanySkin
	{
	public:
		struct FStringAssetReference                               BackgroundImage;                                         // 0x0000(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               RibbonImage;                                             // 0x0010(0x0010) Edit, ZeroConstructor
		EProgressStyle                                             Style;                                                   // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NI4Y[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RankIncreaseAudioCue;                                    // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankIncreaseStopAudioCue;                                // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankLevelUpAudioCue;                                     // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankTriggerAudioCue;                                     // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryRankIncreaseAudioCue;                            // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryRankIncreaseStopAudioCue;                        // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryRankLevelUpAudioCue;                             // 0x0088(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryRankTriggerAudioCue;                             // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryRankLevelUpMusicCue;                             // 0x00A8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyShopSkin
	 * Size -> 0x0020
	 */
	struct FCompanyShopSkin
	{
	public:
		struct FStringAssetReference                               TopBanner;                                               // 0x0000(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               BottomBanner;                                            // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyShopInfo
	 * Size -> 0x0060
	 */
	struct FCompanyShopInfo
	{
	public:
		bool                                                       ShouldShowCompanyInfo;                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G7AY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               InfoSkin;                                                // 0x0008(0x0010) Edit, ZeroConstructor
		class FText                                                InfoTitle;                                               // 0x0018(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_6Q4A[0x20];                                  // 0x0030(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FText>                                        InfoTips;                                                // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.CompanyProgressIcon
	 * Size -> 0x0010
	 */
	struct FCompanyProgressIcon
	{
	public:
		struct FStringAssetReference                               Icon;                                                    // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyProgressIcons
	 * Size -> 0x0018
	 */
	struct FCompanyProgressIcons
	{
	public:
		TArray<struct FCompanyProgressIcon>                        Icons;                                                   // 0x0000(0x0010) Edit, ZeroConstructor
		uint32_t                                                   Step;                                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RNF6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CompanyRankGradeData
	 * Size -> 0x0018
	 */
	struct FCompanyRankGradeData
	{
	public:
		class UClass*                                              Rank;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               Ribbon;                                                  // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyRankData
	 * Size -> 0x0010
	 */
	struct FCompanyRankData
	{
	public:
		TArray<struct FCompanyRankGradeData>                       RankGradeData;                                           // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventCompanyRankProgressUpdateNotification
	 * Size -> 0x0010
	 */
	struct FEventCompanyRankProgressUpdateNotification
	{
	public:
		class FName                                                Company;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Rank;                                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PreviousRank;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyValidationAssetUnit
	 * Size -> 0x0010
	 */
	struct FCompanyValidationAssetUnit
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       ShouldHaveLevels;                                        // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShouldHaveEmblems;                                       // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_W31U[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConstellationAudioPair
	 * Size -> 0x0018
	 */
	struct FConstellationAudioPair
	{
	public:
		class UClass*                                              ConstellationClass;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UWwiseEvent*                                         AudioStartEvent;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         AudioStopEvent;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCPurchaseList
	 * Size -> 0x0018
	 */
	struct FNPCPurchaseList
	{
	public:
		class AActor*                                              NPC;                                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      Items;                                                   // 0x0008(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ContestCeremonyEvent
	 * Size -> 0x0098
	 */
	struct FContestCeremonyEvent
	{
	public:
		TArray<class UWwiseEvent*>                                 AudioEvents;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<ESpecialEvents>                                     SpecialEvents;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class FText                                                NPCName;                                                 // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_XSFF[0x20];                                  // 0x0038(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                NPCMessageToAllPlayers;                                  // 0x0058(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_3LLZ[0x20];                                  // 0x0070(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      TimeToEvent;                                             // 0x0090(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I5TD[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestEventSet
	 * Size -> 0x0018
	 */
	struct FContestEventSet
	{
	public:
		TArray<struct FContestCeremonyEvent>                       Events;                                                  // 0x0000(0x0010) Edit, ZeroConstructor
		EContestEventStages                                        BelongingStage;                                          // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EContestStagePivot                                         StageTimePivot;                                          // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2NVE[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipLiveryCatalogueEntry
	 * Size -> 0x0170
	 */
	struct FShipLiveryCatalogueEntry
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FStringAssetReference                               Desc;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               RowboatLiveryDesc;                                       // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<class FText>                                        Names;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class UClass*                                              ShipSize;                                                // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       AvailableToGame;                                         // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y0P0[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FeatureName;                                             // 0x004C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CUM2[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ShipTeamName;                                            // 0x0058(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_R9D4[0x20];                                  // 0x0070(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ArenaCrewWelcomeMessage;                                 // 0x0090(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_YV2P[0x20];                                  // 0x00A8(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ShipUINotificationTeamName;                              // 0x00C8(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_GI25[0x20];                                  // 0x00E0(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UTexture*                                            ShipScrollTeamIcon;                                      // 0x0100(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               ShipToastTeamIcon;                                       // 0x0108(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               ShipToastTeamBackgroundImage;                            // 0x0118(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               ShipToastForegroundArtWork;                              // 0x0128(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               ShipTeamBackgroundImage;                                 // 0x0138(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class FName                                                AudioEventName;                                          // 0x0148(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               TeamTavernBannerTexture;                                 // 0x0150(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class UTexture*                                            CrewLiveryOverlayIcon;                                   // 0x0160(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AvailableWhenFeatureEnabled;                             // 0x0168(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       AvailableWhenFeatureDisabled;                            // 0x0169(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZWJR[0x6];                                   // 0x016A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipLiveryCatalogue
	 * Size -> 0x0010
	 */
	struct FShipLiveryCatalogue
	{
	public:
		TArray<struct FShipLiveryCatalogueEntry>                   Liveries;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.Crew
	 * Size -> 0x0098
	 */
	struct FCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               SessionId;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<class APlayerState*>                                Players;                                                 // 0x0020(0x0010) ZeroConstructor
		struct FCrewSessionTemplate                                CrewSessionTemplate;                                     // 0x0030(0x0038)
		struct FGuid                                               LiveryID;                                                // 0x0068(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2IB7[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      AssociatedActors;                                        // 0x0080(0x0010) ZeroConstructor
		bool                                                       HasEverSetSail;                                          // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9GNS[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ScrambleNameIndex;                                       // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TimedContestEventAction
	 * Size -> 0x00E8
	 */
	struct FTimedContestEventAction
	{
	public:
		unsigned char                                              UnknownData_K8D2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                NPCName;                                                 // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_RU8G[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                NPCMessageToAllPlayers;                                  // 0x0040(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_0GGG[0x20];                                  // 0x0058(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      Duration;                                                // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MTEH[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESpecialEvents>                                     SpecialEvents;                                           // 0x0080(0x0010) ZeroConstructor
		TArray<class UWwiseEvent*>                                 AudioEvents;                                             // 0x0090(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_032B[0x48];                                  // 0x00A0(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewScore
	 * Size -> 0x0018
	 */
	struct FCrewScore
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    Score;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EContestScoreId                                            ScoreId;                                                 // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I41L[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipIdentityOwnership
	 * Size -> 0x0180
	 */
	struct FShipIdentityOwnership
	{
	public:
		struct FGuid                                               OwningCrewID;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FShipLiveryCatalogueEntry                           Identity;                                                // 0x0010(0x0170)
	};

	/**
	 * ScriptStruct Athena.DebugCrewContestInfo
	 * Size -> 0x0028
	 */
	struct FDebugCrewContestInfo
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ShipName;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Score;                                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EA8U[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ScoreRewardValueData
	 * Size -> 0x0030
	 */
	struct FScoreRewardValueData
	{
	public:
		int32_t                                                    ScoreToAward;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QA7K[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServicesConfigRetrievalString;                           // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		EScoreReason                                               ReasonForScore;                                          // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_96KC[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ScoreByPeriod;                                           // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ScoreRewardWieldableItemData
	 * Size -> 0x0068
	 */
	struct FScoreRewardWieldableItemData
	{
	public:
		class UClass*                                              WieldableItemClass;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FScoreRewardValueData                               NotStolenScore;                                          // 0x0008(0x0030) Edit
		struct FScoreRewardValueData                               StolenScore;                                             // 0x0038(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.ScoreRewardShipPartData
	 * Size -> 0x0038
	 */
	struct FScoreRewardShipPartData
	{
	public:
		class UClass*                                              ShipPart;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FScoreRewardValueData                               Score;                                                   // 0x0008(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.ScoreRewardData
	 * Size -> 0x00E0
	 */
	struct FScoreRewardData
	{
	public:
		TArray<struct FScoreRewardWieldableItemData>               WieldableItemScores;                                     // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<struct FScoreRewardShipPartData>                    ShipPartScores;                                          // 0x0010(0x0010) Edit, ZeroConstructor
		struct FScoreRewardValueData                               KillingPlayerScore;                                      // 0x0020(0x0030) Edit
		struct FScoreRewardValueData                               DownedPlayerScore;                                       // 0x0050(0x0030) Edit
		struct FScoreRewardValueData                               CrewShipSunkScore;                                       // 0x0080(0x0030) Edit
		struct FScoreRewardValueData                               DigUpChestScore;                                         // 0x00B0(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.ScoreReasonIcons
	 * Size -> 0x0020
	 */
	struct FScoreReasonIcons
	{
	public:
		EScoreReason                                               ReasonForScore;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PT07[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               ScoringIconAssetReference;                               // 0x0008(0x0010) Edit, ZeroConstructor
		class UTexture*                                            ScoreScrollScoringIcon;                                  // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipSizeRequirementData
	 * Size -> 0x0020
	 */
	struct FShipSizeRequirementData
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    OpenCrewMemberCount;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6XY3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              OpenCrewCountRetrivalString;                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestCrewRequirementData
	 * Size -> 0x0028
	 */
	struct FContestCrewRequirementData
	{
	public:
		int32_t                                                    CrewCount;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8GFM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CrewCountServicesConfigRetrievalString;                  // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash
		TArray<struct FShipSizeRequirementData>                    OpenCrewRequirementData;                                 // 0x0018(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestUIDescriptions
	 * Size -> 0x0080
	 */
	struct FContestUIDescriptions
	{
	public:
		class UPopUpMessageDesc*                                   NewMapDesc;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   ShipSunkDesc;                                            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                ContestStartBlindText;                                   // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_HN2F[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ContestEndBlindText;                                     // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_8OFF[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ShipLiveryTeamSet
	 * Size -> 0x0010
	 */
	struct FShipLiveryTeamSet
	{
	public:
		TArray<struct FShipLiveryCatalogueEntry>                   ShipCatalogue;                                           // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewShipEntry
	 * Size -> 0x0018
	 */
	struct FCrewShipEntry
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              Ship;                                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewShipPersistentData
	 * Size -> 0x0038
	 */
	struct FCrewShipPersistentData
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class ACrewShipManifest*                                   CrewShipManifest;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FPirateIdentity>                             PiratesWhoHaveSpottedCrewsShip;                          // 0x0018(0x0010) ZeroConstructor
		TArray<struct FGuid>                                       CrewsWhoHaveSpottedCrewsShip;                            // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewShipPersistentDataManager
	 * Size -> 0x0010
	 */
	struct FCrewShipPersistentDataManager
	{
	public:
		TArray<struct FCrewShipPersistentData>                     Data;                                                    // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayersSpawningInTavern
	 * Size -> 0x0010
	 */
	struct FPlayersSpawningInTavern
	{
	public:
		class APlayerState*                                        PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_W28J[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TrackedCrewInContest
	 * Size -> 0x0028
	 */
	struct FTrackedCrewInContest
	{
	public:
		unsigned char                                              UnknownData_7EAT[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayersSpawningInTavern>                    PlayersSpawningInTavern;                                 // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AchievementCompleteContest
	 * Size -> 0x0008
	 */
	struct FAchievementCompleteContest
	{
	public:
		unsigned char                                              UnknownData_V4KS[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerCrewChangedVisibilityStateEvent
	 * Size -> 0x0014
	 */
	struct FServerCrewChangedVisibilityStateEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EMatchmakingVisibilityState                                CrewVisibilityState;                                     // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4F0X[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CinematicQuestEvent
	 * Size -> 0x0080
	 */
	struct FCinematicQuestEvent
	{
	public:
		class FText                                                Message;                                                 // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_40ZR[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Header;                                                  // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_4W9I[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                Tag;                                                     // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableMusic;                                            // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_23UA[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestMapLayoutCrew
	 * Size -> 0x00E8
	 */
	struct FContestMapLayoutCrew
	{
	public:
		struct FTreasureMapWidgetTexture                           CrewIcon;                                                // 0x0000(0x0028) Edit, BlueprintVisible
		struct FTreasureMapWidgetTexture                           ScoreIcon;                                               // 0x0028(0x0028) Edit, BlueprintVisible
		struct FTreasureMapWidgetTexture                           UnderlineIcon;                                           // 0x0050(0x0028) Edit, BlueprintVisible
		struct FTreasureMapWidgetText                              CrewName;                                                // 0x0078(0x0038) Edit, BlueprintVisible
		struct FTreasureMapWidgetText                              Score;                                                   // 0x00B0(0x0038) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.ContestMapLayoutScoreInfo
	 * Size -> 0x0068
	 */
	struct FContestMapLayoutScoreInfo
	{
	public:
		struct FTreasureMapWidgetTexture                           ScoreInfoIcon;                                           // 0x0000(0x0028) Edit, BlueprintVisible
		struct FTreasureMapWidgetText                              ScoreInfoText;                                           // 0x0028(0x0038) Edit, BlueprintVisible
		EScoreReason                                               ScoreReason;                                             // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6KKM[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestMapCrewData
	 * Size -> 0x0040
	 */
	struct FContestMapCrewData
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsLocalCrew;                                             // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LUB2[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            CrewIcon;                                                // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            ScoreIcon;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            UnderlineIcon;                                           // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CrewName;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Score;                                                   // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_73RV[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestMapContents
	 * Size -> 0x0040
	 */
	struct FContestMapContents
	{
	public:
		class FString                                              VoyageName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ScoreboardTitle;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FContestMapCrewData>                         CrewsData;                                               // 0x0020(0x0010) ZeroConstructor
		TArray<EScoreReason>                                       ScoreReasonsToShowInfo;                                  // 0x0030(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MerchantSpawnData
	 * Size -> 0x0050
	 */
	struct FMerchantSpawnData
	{
	public:
		TAssetPtr<class UClass>                                    MerchantReference;                                       // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_45MB[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FTransform                                          MerchantTransform;                                       // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.QuestVariableContestIslandArchetype
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableContestIslandArchetype : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableInt
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableInt : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ContestShipLiverySet
	 * Size -> 0x0060
	 */
	struct FContestShipLiverySet
	{
	public:
		struct FGuid                                               OwningCrewID;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TMap<class UClass*, struct FGuid>                          ShipLiveryTeamSet;                                       // 0x0010(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.WeightedEmergentContestVoyageRecipe
	 * Size -> 0x0010
	 */
	struct FWeightedEmergentContestVoyageRecipe
	{
	public:
		class UEmergentContestVoyageRecipeDataAsset*               ContestVoyage;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    WeightedChance;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T6CU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestVoyageInfo
	 * Size -> 0x0020
	 */
	struct FContestVoyageInfo
	{
	public:
		TArray<class UClass*>                                      ValidShipTypes;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		struct FWeightedEmergentContestVoyageRecipe                WeightedContestVoyage;                                   // 0x0010(0x0010) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.WeightedTallTaleContestRecipe
	 * Size -> 0x0010
	 */
	struct FWeightedTallTaleContestRecipe
	{
	public:
		class UTallTaleContestRecipeDataAsset*                     TallTaleContest;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    WeightedChance;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3CIY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TallTaleContestInfo
	 * Size -> 0x0020
	 */
	struct FTallTaleContestInfo
	{
	public:
		TArray<class UClass*>                                      ValidShipTypes;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		struct FWeightedTallTaleContestRecipe                      WeightedTallTaleContest;                                 // 0x0010(0x0010) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ContestVoyagesSelectorUnit
	 * Size -> 0x0010
	 */
	struct FContestVoyagesSelectorUnit
	{
	public:
		class FName                                                FeatureToggle;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UContestVoyagesDataAsset*                            ContestVoyages;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestZoneVendorShipData
	 * Size -> 0x0050
	 */
	struct FContestZoneVendorShipData
	{
	public:
		TAssetPtr<class UClass>                                    VendorShipToSpawn;                                       // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_WV5C[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FTransform                                          ContestZoneWorldLocation;                                // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.InitialShipSpawnLocations
	 * Size -> 0x0010
	 */
	struct FInitialShipSpawnLocations
	{
	public:
		TArray<class AShipSpawnLocation*>                          ShipSpawnLocations;                                      // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContextAction
	 * Size -> 0x0010
	 */
	struct FContextAction
	{
	public:
		class URadialContextBase*                                  Context;                                                 // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialCreationRuleAsset*                            Radial;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CoordinatedKrakenTentacleSpawnInfo
	 * Size -> 0x00C0
	 */
	struct FCoordinatedKrakenTentacleSpawnInfo
	{
	public:
		struct FTransform                                          SpawnTransform;                                          // 0x0000(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor
		struct FTransform                                          FinalSpawnTransform;                                     // 0x0030(0x0030) IsPlainOldData, RepSkip, NoDestructor
		int32_t                                                    ClientCapsuleCullCount;                                  // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldDockToTargetActor;                                 // 0x0064(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RequiresBoxCollider;                                     // 0x0065(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RequiresKnockback;                                       // 0x0066(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PNDV[0x1];                                   // 0x0067(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             BoxExtents;                                              // 0x0068(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_C7OX[0xC];                                   // 0x0074(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          BoxOffset;                                               // 0x0080(0x0030) Edit, IsPlainOldData, NoDestructor
		TWeakObjectPtr<class AKrakenAnimatedTentacle>              SpawnedTentacle;                                         // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		unsigned char                                              UnknownData_P3FO[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrestPartDesc
	 * Size -> 0x0018
	 */
	struct FCrestPartDesc
	{
	public:
		class UStaticMesh*                                         CrestMesh;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UMaterialInterface*>                          CrestMaterials;                                          // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainedSessionSettings
	 * Size -> 0x0038
	 */
	struct FCaptainedSessionSettings
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		class FString                                              PirateId;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               ShipId;                                                  // 0x0028(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationLoadout
	 * Size -> 0x0038
	 */
	struct FShipCustomizationLoadout
	{
	public:
		TArray<class UClass*>                                      Customizations;                                          // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
		TArray<class UClass*>                                      InitialCustomizations;                                   // 0x0010(0x0010) Edit, ZeroConstructor, UObjectWrapper
		TArray<class UClass*>                                      SavedCustomizations;                                     // 0x0020(0x0010) Edit, ZeroConstructor, UObjectWrapper
		bool                                                       HasInitialCustomizationsSet;                             // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ETKN[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PartCustomisation
	 * Size -> 0x0020
	 */
	struct FPartCustomisation
	{
	public:
		class FString                                              Category;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		struct FStringAssetReference                               Customisation;                                           // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PartDesc
	 * Size -> 0x0020
	 */
	struct FPartDesc
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPartCustomisation>                          Customisations;                                          // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationLoadoutPartCustomizations
	 * Size -> 0x0010
	 */
	struct FShipCustomizationLoadoutPartCustomizations
	{
	public:
		TArray<struct FPartDesc>                                   Parts;                                                   // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VotersByOption
	 * Size -> 0x0018
	 */
	struct FVotersByOption
	{
	public:
		int32_t                                                    VoteOption;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4CH6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     Voters;                                                  // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoteSessionData
	 * Size -> 0x0028
	 */
	struct FVoteSessionData
	{
	public:
		TArray<struct FVotersByOption>                             Votes;                                                   // 0x0000(0x0010) ZeroConstructor
		struct FGuid                                               SessionId;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsLocked;                                                // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FC5Y[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProposedVoyageEntry
	 * Size -> 0x0018
	 */
	struct FProposedVoyageEntry
	{
	public:
		class UVoyageProposalDesc*                                 ProposalDesc;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaPlayerState*                                  ProposingPlayerState;                                    // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       VoyageIsShipEntitlement;                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GX89[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BeckonTag
	 * Size -> 0x0002
	 */
	struct FBeckonTag
	{
	public:
		EBeckonNPCGroup                                            NPCGroup;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EBeckonGesture                                             BeckonGesture;                                           // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProposedTaleEntry
	 * Size -> 0x0018
	 */
	struct FProposedTaleEntry
	{
	public:
		class UVoyageDescDataAsset*                                TaleData;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              ProposingObject;                                         // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CanStartTale;                                            // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GEIA[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CustomItemDetectionData
	 * Size -> 0x0010
	 */
	struct FCustomItemDetectionData
	{
	public:
		unsigned char                                              UnknownData_DUS8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CustomTriggerData
	 * Size -> 0x00B8
	 */
	struct FCustomTriggerData
	{
	public:
		class ATriggerBase*                                        TriggerObject;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TMap<int32_t, ECollisionChannel>                           EntitiesToTrigger;                                       // 0x0008(0x0050) ZeroConstructor
		TMap<int32_t, struct FCustomItemDetectionData>             ItemsToTrigger;                                          // 0x0058(0x0050) ZeroConstructor
		bool                                                       DetectingPlayers;                                        // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DetectingShips;                                          // 0x00A9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DetectingEnemies;                                        // 0x00AA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_49GQ[0x5];                                   // 0x00AB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTriggerCollisionHelper*                             CollisionHelper;                                         // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ExplosionShipSizeKnockbackModifier
	 * Size -> 0x0018
	 */
	struct FExplosionShipSizeKnockbackModifier
	{
	public:
		class FName                                                FeatureFlag;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              ShipSize;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      HorizontalVelocity;                                      // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VerticalVelocity;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ExplosionInfo
	 * Size -> 0x0150
	 */
	struct FExplosionInfo
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EHealthChangedReason                                       HealthChangedReason;                                     // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          CollisionChannel;                                        // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8HOI[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxExplosionRadius;                                      // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BaseDamageAmount;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6SZK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         PlayerDamageCurve;                                       // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         OtherPawnDamageCurve;                                    // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerInsideShipDamageMultiplier;                        // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DealFriendlyFireDamage;                                  // 0x002C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_48BL[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FShipDamageParams                                   ShipDamageParams;                                        // 0x0030(0x0010) Edit, DisableEditOnInstance
		int32_t                                                    MaxNumDamageHolesPerShip;                                // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VDL6[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         ShipDamageCurveInMetres;                                 // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldIgnoreZForShipHullDamage;                          // 0x0050(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8XAM[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   ForceToApplyToShip;                                      // 0x0058(0x0030) Edit, DisableEditOnInstance
		float                                                      ForceModifierToApplyToKrakenWrappedShip;                 // 0x0088(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                IgnitionFeatureName;                                     // 0x008C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0YPM[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFireGridCellSelectionParamsDataAsset*               IgnitionParameters;                                      // 0x0098(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FStatus>                                     StatusesToApply;                                         // 0x00A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		bool                                                       ApplyStatusEffectsWhenUnderwater;                        // 0x00B0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MMMS[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StatusEffectInnerRadiusMultiplier;                       // 0x00B4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FKnockBackInfo                                      KnockbackParams;                                         // 0x00B8(0x0050) Edit
		TArray<struct FExplosionShipSizeKnockbackModifier>         ShipSizeKnockbackModifiers;                              // 0x0108(0x0010) Edit, ZeroConstructor
		float                                                      KnockbackInnerRadiusMultiplier;                          // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZFHK[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UForceFeedbackEffect*                                ForceFeedbackEffectLower;                                // 0x0128(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ForceFeedbackEffectInnerRadiusMultiplier;                // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ForceFeedbackTag;                                        // 0x0134(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5SKM[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CameraShake;                                             // 0x0140(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      CameraShakeInnerRadiusMultiplier;                        // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4JIJ[0x4];                                   // 0x014C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileLauncherMechanismSourceWatercraftParams
	 * Size -> 0x0038
	 */
	struct FProjectileLauncherMechanismSourceWatercraftParams
	{
	public:
		float                                                      ShipBoundsMultiplier;                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NearMissChance;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   NearMissShipOffsetInMetres;                              // 0x0008(0x0030) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ProjectileLauncherMechanismSourceShipParams
	 * Size -> 0x0040
	 */
	struct FProjectileLauncherMechanismSourceShipParams
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FProjectileLauncherMechanismSourceWatercraftParams  Params;                                                  // 0x0008(0x0038) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.LevelOfDamageProperties
	 * Size -> 0x0090
	 */
	struct FLevelOfDamageProperties
	{
	public:
		float                                                      LeakAmount;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RepairTime;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UndoRepairTime;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NonOwningCrewUndoRepairTime;                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  HoleDecalMaterial;                                       // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6ZOB[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          HoleDecalComponentTransform;                             // 0x0020(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor
		struct FVector                                             ParticleSystemComponentLocation;                         // 0x0050(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      InternalWaterSamplePositionTopOffset;                    // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InternalWaterSamplePositionBottomOffset;                 // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MNU3[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     ParticleSystem_WaterLeakAboveWater;                      // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ParticleSystem_WaterLeakBelowWater;                      // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ParticleSystem_RepairLeakAboveWater;                     // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ParticleSystem_RepairLeakBelowWater;                     // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ParticleSystem_SplashOnInternalWaterSurface;             // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AuthorityRepairableState
	 * Size -> 0x0018
	 */
	struct FAuthorityRepairableState
	{
	public:
		ERepairableState                                           RepairableState;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5Z6R[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AActor>>                       RepairingList;                                           // 0x0008(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.DeferralReasonPopUpNotificationInfo
	 * Size -> 0x0018
	 */
	struct FDeferralReasonPopUpNotificationInfo
	{
	public:
		class FString                                              DeferralReason;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SingleNPCCompanyRedirectionData
	 * Size -> 0x0040
	 */
	struct FSingleNPCCompanyRedirectionData
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FText                                                VisitNPCTooltip;                                         // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_GMU0[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.MultipleNPCCompaniesRedirectionData
	 * Size -> 0x0048
	 */
	struct FMultipleNPCCompaniesRedirectionData
	{
	public:
		TArray<class UClass*>                                      Companies;                                               // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
		class FText                                                VisitNPCTooltip;                                         // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_0HHO[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ItemDiggingAnimationOverride
	 * Size -> 0x0018
	 */
	struct FItemDiggingAnimationOverride
	{
	public:
		TArray<TAssetPtr<class UClass>>                            Classes;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class UItemDiggingAnimationConfig*                         DiggingAnimationConfig;                                  // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemDiggingAudioOverride
	 * Size -> 0x0018
	 */
	struct FItemDiggingAudioOverride
	{
	public:
		TArray<TAssetPtr<class UClass>>                            Classes;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class UItemDiggingAudioConfig*                             DiggingAudioConfig;                                      // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemDiggingBaseOverride
	 * Size -> 0x0018
	 */
	struct FItemDiggingBaseOverride
	{
	public:
		TArray<TAssetPtr<class UClass>>                            Classes;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class UItemDiggingBaseConfig*                              DiggingBaseConfig;                                       // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemBuryingBaseOverride
	 * Size -> 0x0018
	 */
	struct FItemBuryingBaseOverride
	{
	public:
		TArray<TAssetPtr<class UClass>>                            Classes;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class UItemDiggingBuryConfig*                              BuryingConfig;                                           // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuriedFactor
	 * Size -> 0x0014
	 */
	struct FBuriedFactor
	{
	public:
		int32_t                                                    CurrentBuriedFactor;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FactorToConsiderFullyBuried;                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    BuryStep;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ExhumeStep;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EDigDirection                                              LastDigDirection;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XWHF[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemDiggingMergedConfig
	 * Size -> 0x0028
	 */
	struct FItemDiggingMergedConfig
	{
	public:
		class UItemDiggingBaseConfig*                              BaseConfig;                                              // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UItemDiggingAnimationConfig*                         AnimationConfig;                                         // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UItemDiggingEffectsConfig*                           EffectsConfig;                                           // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UItemDiggingAudioConfig*                             AudioConfig;                                             // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UItemDiggingBuryConfig*                              BuryingConfig;                                           // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemDiggingEffectsOverride
	 * Size -> 0x0018
	 */
	struct FItemDiggingEffectsOverride
	{
	public:
		TArray<TAssetPtr<class UClass>>                            Classes;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class UItemDiggingEffectsConfig*                           DiggingEffectsConfig;                                    // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DioramaDebugMenuEntry
	 * Size -> 0x0030
	 */
	struct FDioramaDebugMenuEntry
	{
	public:
		class UAISpawner*                                          Spawner;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAIDioramaDesc*                                      DioramaDesc;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              DioramaName;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              TaleId;                                                  // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DrapesPartDesc
	 * Size -> 0x0008
	 */
	struct FDrapesPartDesc
	{
	public:
		class UMaterialInterface*                                  DrapesMaterial;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DrunkennessSetupData
	 * Size -> 0x0014
	 */
	struct FDrunkennessSetupData
	{
	public:
		EDrunkennessType                                           DrunkennessType;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B336[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDrunkenness;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GettingDrunkDrunkennessChangePerSec;                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SoberingUpDrunkennessChangePerSec;                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AutoSoberUpWhenFullyDrunk;                               // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WT1G[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmissaryLevelMultiplierModel
	 * Size -> 0x0008
	 */
	struct FEmissaryLevelMultiplierModel
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Multiplier;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmissaryRewardMultiplierModel
	 * Size -> 0x0018
	 */
	struct FEmissaryRewardMultiplierModel
	{
	public:
		class FName                                                EmissaryName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FEmissaryLevelMultiplierModel>               Multipliers;                                             // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmissaryDisplayInformation
	 * Size -> 0x0090
	 */
	struct FEmissaryDisplayInformation
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_YQ77[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Description;                                             // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_CTI3[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FStringAssetReference                               KeyArt;                                                  // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               Icon;                                                    // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.EmoteFlourishCategoryMapping
	 * Size -> 0x00C8
	 */
	struct FEmoteFlourishCategoryMapping
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               IconPath;                                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FEmoteData                                          EmoteData;                                               // 0x0018(0x00A0) Edit, DisableEditOnInstance
		class FString                                              PairName;                                                // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequiredClothingData
	 * Size -> 0x0018
	 */
	struct FRequiredClothingData
	{
	public:
		int32_t                                                    RequiredNumberToMatch;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RGF7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      RequiredClothing;                                        // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ItemRequirementData
	 * Size -> 0x0018
	 */
	struct FItemRequirementData
	{
	public:
		int32_t                                                    RequiredNumberToMatch;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9R9L[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      RequiredItemsInLoadout;                                  // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.EventTaleQuestServiceEntry
	 * Size -> 0x0018
	 */
	struct FEventTaleQuestServiceEntry
	{
	public:
		unsigned char                                              UnknownData_O8LS[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipHullLandscapeDamageEntry
	 * Size -> 0x0030
	 */
	struct FShipHullLandscapeDamageEntry
	{
	public:
		EPhysicalSurface                                           PhysicalSurface;                                         // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6DQF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FInt32Range                                         NumZonesToDamage;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FInt32Range                                         DamageLevel;                                             // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipDamageEntry
	 * Size -> 0x0050
	 */
	struct FShipDamageEntry
	{
	public:
		class UClass*                                              OtherShipSize;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FInt32Range                                         NumZonesToDamageForInstigator;                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FInt32Range                                         DamageLevelForInstigator;                                // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FInt32Range                                         NumZonesToDamageForReceiver;                             // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FInt32Range                                         DamageLevelForReceiver;                                  // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipHullRammingSpurDamageEntry
	 * Size -> 0x0010
	 */
	struct FShipHullRammingSpurDamageEntry
	{
	public:
		TArray<struct FShipDamageEntry>                            DamageAppliedToSelf;                                     // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipHullDamageTypeEntry
	 * Size -> 0x0048
	 */
	struct FShipHullDamageTypeEntry
	{
	public:
		EShipHullDamageType                                        DamageType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QQYB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FShipHullLandscapeDamageEntry                       LandscapeDamageParams;                                   // 0x0008(0x0030) Edit, DisableEditOnInstance
		struct FShipHullRammingSpurDamageEntry                     RammingSpurDamageParams;                                 // 0x0038(0x0010) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipHullDamageLevel
	 * Size -> 0x0018
	 */
	struct FShipHullDamageLevel
	{
	public:
		class UClass*                                              SpeedBand;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FShipHullDamageTypeEntry>                    Params;                                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipHullDamageParams
	 * Size -> 0x0010
	 */
	struct FShipHullDamageParams
	{
	public:
		TArray<struct FShipHullDamageLevel>                        DamageLevels;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.RammableExplosiveEntry
	 * Size -> 0x0010
	 */
	struct FRammableExplosiveEntry
	{
	public:
		class UClass*                                              RammerType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              MinimumSpeedForExplosion;                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VFXHandlerComponentParams
	 * Size -> 0x0040
	 */
	struct FVFXHandlerComponentParams
	{
	public:
		class UParticleSystem*                                     ParticleSystem;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             VFXRelativeOffset;                                       // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             VFXScale;                                                // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            VFXRotationOffset;                                       // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                VFXAttachSocket;                                         // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VFXDrivingCurveValue;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EVfxCustomLocalSpaceMode                                   VFXCustomLocalSpaceMode;                                 // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_N4ZQ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ChargedAttackProjectileWeights
	 * Size -> 0x0008
	 */
	struct FChargedAttackProjectileWeights
	{
	public:
		float                                                      ChargeTime;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariablePlayerStat
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariablePlayerStat : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ClassicFireworkDebugList
	 * Size -> 0x0070
	 */
	struct FClassicFireworkDebugList
	{
	public:
		TArray<class UItemDescSpawnData*>                          Peony;                                                   // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Crackle;                                                 // 0x0010(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Strobe;                                                  // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Brocade;                                                 // 0x0030(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Comet;                                                   // 0x0040(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          HummingSnakes;                                           // 0x0050(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Cakes;                                                   // 0x0060(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.FireworkDebugListByFireworkType
	 * Size -> 0x0020
	 */
	struct FFireworkDebugListByFireworkType
	{
	public:
		TArray<class UItemDescSpawnData*>                          Rockets;                                                 // 0x0000(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UItemDescSpawnData*>                          Cakes;                                                   // 0x0010(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.FlamesOfFateFlameInfo
	 * Size -> 0x0028
	 */
	struct FFlamesOfFateFlameInfo
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6BNR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              LightColour;                                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FColor                                              FXColour;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FColor                                              GlowColour;                                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FColor                                              FlameColour;                                             // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3O57[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            FlameTexture;                                            // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPlayerStat                                         StatToFireWhenTaken;                                     // 0x0020(0x0004) Edit, DisableEditOnInstance
		struct FPlayerStat                                         StatToFireWhenTakenInAlliance;                           // 0x0024(0x0004) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.FlamesOfFateShipInfo
	 * Size -> 0x0010
	 */
	struct FFlamesOfFateShipInfo
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		uint32_t                                                   NumLanterns;                                             // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5ZDL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SailWithFlameOfFateColoursAboardStatData
	 * Size -> 0x000C
	 */
	struct FSailWithFlameOfFateColoursAboardStatData
	{
	public:
		uint32_t                                                   NumberOfUniqueFlameColoursAboard;                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPlayerStat                                         DefaultStatToFire;                                       // 0x0004(0x0004) Edit
		struct FPlayerStat                                         AllianceStatToFire;                                      // 0x0008(0x0004) Edit
	};

	/**
	 * ScriptStruct Athena.FogBankStoryRelatedSettings
	 * Size -> 0x0024
	 */
	struct FFogBankStoryRelatedSettings
	{
	public:
		struct FStoryFlag                                          StoryFlag;                                               // 0x0000(0x0008) Edit
		float                                                      Density;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FogColour;                                               // 0x000C(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      FadeInDuration;                                          // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaximumAudioFogIntensityRTPC;                            // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FogBankSettings
	 * Size -> 0x004C
	 */
	struct FFogBankSettings
	{
	public:
		EFogState                                                  FogState;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QB7L[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Density;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Scale;                                                   // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        FogColour;                                               // 0x0014(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      FadeInDuration;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ActiveDuration;                                          // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeOutDuration;                                         // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Persistent;                                              // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H85J[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviousDensity;                                         // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        PreviousFogColour;                                       // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      MaximumAudioFogIntensityRTPC;                            // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FogColourForSea
	 * Size -> 0x0018
	 */
	struct FFogColourForSea
	{
	public:
		class UClass*                                              Sea;                                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FLinearColor                                        Colour;                                                  // 0x0008(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FogBankManagerFogBankTemplate
	 * Size -> 0x0048
	 */
	struct FFogBankManagerFogBankTemplate
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VOY0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      FogBanks;                                                // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
		struct FWeightedProbabilityRangeOfRanges                   DistanceFromIslandInKm;                                  // 0x0018(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.FogBankManagerIslandTypesToKeepAwayFrom
	 * Size -> 0x0008
	 */
	struct FFogBankManagerIslandTypesToKeepAwayFrom
	{
	public:
		EIslandType                                                IslandType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CZIG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumDistanceFromIslandInKm;                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FogBankManagerIslandNamesToKeepAwayFrom
	 * Size -> 0x000C
	 */
	struct FFogBankManagerIslandNamesToKeepAwayFrom
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinimumDistanceFromIslandInKm;                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DecalEntry
	 * Size -> 0x0028
	 */
	struct FDecalEntry
	{
	public:
		class UDecalComponent*                                     DecalComponent;                                          // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInstanceDynamic*                            DecalMaterial;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        DecalColour;                                             // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    LocationIndex;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I27S[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FootstepLocation
	 * Size -> 0x0018
	 */
	struct FFootstepLocation
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FragileComponentShipDamageTypeEntry
	 * Size -> 0x0010
	 */
	struct FFragileComponentShipDamageTypeEntry
	{
	public:
		class UClass*                                              ShipDamagerType;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      HealthChangePropagated;                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_X5CY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FragileComponentHealthScalarEntry
	 * Size -> 0x0008
	 */
	struct FFragileComponentHealthScalarEntry
	{
	public:
		EHealthChangedReason                                       HealthChangedReason;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PQQX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HealthChangeScalar;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AnimationLODParameters
	 * Size -> 0x0010
	 */
	struct FAnimationLODParameters
	{
	public:
		int32_t                                                    MaxIKEntities;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxIKDistance;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinLODSolverDistance;                                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinFootPlantingActiveDistance;                           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CurrentHealthInfo
	 * Size -> 0x0018
	 */
	struct FCurrentHealthInfo
	{
	public:
		float                                                      Health;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       LastChangedReason;                                       // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XAL3[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize10                               LastInstigatorLocation;                                  // 0x0008(0x000C)
		uint32_t                                                   HealthChangeCount;                                       // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContinuousHealthChange
	 * Size -> 0x000C
	 */
	struct FContinuousHealthChange
	{
	public:
		float                                                      Rate;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChangeApplied;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HN16[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapGeneric
	 * Size -> 0x0020
	 */
	struct FCanvasWorldMapGeneric
	{
	public:
		class AActor*                                              MarkerActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		class UTexture*                                            Icon;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OYRZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericPartDesc
	 * Size -> 0x0018
	 */
	struct FGenericPartDesc
	{
	public:
		struct FStringAssetReference                               Mesh;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    CachedMeshResourceSize;                                  // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TQStructGenWeightedContainer
	 * Size -> 0x0010
	 */
	struct FTQStructGenWeightedContainer
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxOccurrences;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TQStructGenEntry
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FTQStructGenEntry : public FTQStructGenWeightedContainer
	{
	public:
		class UTaleQuestDescAsset*                                 TaleQuestDesc;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPLQuestLocationDataBundle*                          LocationBundle;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LocationFiltering;                                       // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BPMK[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           AcceptableAreaLocation;                                  // 0x0024(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      AcceptableAreaRadius;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TQStructGenGroup
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FTQStructGenGroup : public FTQStructGenWeightedContainer
	{
	public:
		class FName                                                FeatureName;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FTQStructGenEntry>                           Entries;                                                 // 0x0018(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TQStructGenParams
	 * Size -> 0x0078
	 */
	struct FTQStructGenParams
	{
	public:
		int32_t                                                    GenerationIterations;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FailIfNoLocationData;                                    // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UFE2[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreferredDistance;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EventExclusionZoneRadius;                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TransientActorExclusionZoneRadius;                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ModuleCount;                                             // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTQStructGenEntry                                   FinalModuleOverride;                                     // 0x0018(0x0030) Edit
		float                                                      CombatWeight;                                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxCombatOccurrences;                                    // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FTQStructGenGroup>                           CombatGroups;                                            // 0x0050(0x0010) Edit, ZeroConstructor
		int32_t                                                    MaxNonCombatOccurrences;                                 // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_78MP[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTQStructGenGroup>                           NonCombatGroups;                                         // 0x0068(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TQStructGenSelection
	 * Size -> 0x0010
	 */
	struct FTQStructGenSelection
	{
	public:
		class UTaleQuestDescAsset*                                 TaleQuestDesc;                                           // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPLQuestLocationDataAsset*                           LocationData;                                            // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVarLocationData
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVarLocationData : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVarTaleQuest
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVarTaleQuest : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.VoyageHandInEntry
	 * Size -> 0x0010
	 */
	struct FVoyageHandInEntry
	{
	public:
		class UVoyageRecipeDataAsset*                              VoyageRecipe;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              Item;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GlintVisibilityLock
	 * Size -> 0x0001
	 */
	struct FGlintVisibilityLock
	{
	public:
		unsigned char                                              UnknownData_Q37Y[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DirectorSettingEntry
	 * Size -> 0x0010
	 */
	struct FDirectorSettingEntry
	{
	public:
		class UVoyageDescDataAsset*                                VoyageDesc;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FFeatureFlag                                        Feature;                                                 // 0x0008(0x0008) Edit
	};

	/**
	 * ScriptStruct Athena.QuestVariablePageBundle
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariablePageBundle : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.PlayerHideoutInfo
	 * Size -> 0x0018
	 */
	struct FPlayerHideoutInfo
	{
	public:
		class APlayerState*                                        PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class ASpawnLocation*>                              ExitPoints;                                              // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.HoleItemToSpawn
	 * Size -> 0x0028
	 */
	struct FHoleItemToSpawn
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K6VP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemDesc;                                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<EPhysicalSurface>                                   RestrictToSurface;                                       // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance
		class FName                                                FeatureFlag;                                             // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MaxHolePerIslandDataAsset
	 * Size -> 0x000C
	 */
	struct FMaxHolePerIslandDataAsset
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxHoles;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HoleContainer
	 * Size -> 0x0018
	 */
	struct FHoleContainer
	{
	public:
		TArray<TWeakObjectPtr<class AHole>>                        Holes;                                                   // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
		class FName                                                IslandName;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.Leak
	 * Size -> 0x0070
	 */
	struct FLeak
	{
	public:
		unsigned char                                              UnknownData_BL3Z[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWwiseEmitter                                       SFXEmitter;                                              // 0x0030(0x0020)
		class UParticleSystemComponent*                            WaterLeakParticleSystem;                                 // 0x0050(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L77Z[0x18];                                  // 0x0058(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipLeakParams
	 * Size -> 0x001C
	 */
	struct FShipLeakParams
	{
	public:
		float                                                      InternalWaterSamplePositionTopOffset;                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InternalWaterSamplePositionBottomOffset;                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterSplashDelayMin;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterSplashDelayMax;                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HullFloodedPercentageToShiftWaterSamplingPos;            // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterSampleOffsetBelowHullFloodThreshold;                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterSampleOffsetAboveHullFloodThreshold;                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipLeak
	 * Size -> 0x0058
	 */
	struct FShipLeak
	{
	public:
		struct FShipLeakParams                                     Params;                                                  // 0x0000(0x001C)
		unsigned char                                              UnknownData_USKA[0x24];                                  // 0x001C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            SplashParticleSystem;                                    // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RX61[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HullDamageParamSet
	 * Size -> 0x0060
	 */
	struct FHullDamageParamSet
	{
	public:
		struct FShipLeakParams                                     LeakParams;                                              // 0x0000(0x001C) Edit
		float                                                      LeakAmount;                                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTransform                                          InternalHoleDecalOffset;                                 // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor
		EHullDamageDeck                                            Deck;                                                    // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZXHK[0xF];                                   // 0x0051(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HullDamageNamedParamSet
	 * Size -> 0x0070
	 */
	struct FHullDamageNamedParamSet
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VSRU[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHullDamageParamSet                                 Params;                                                  // 0x0010(0x0060) Edit
	};

	/**
	 * ScriptStruct Athena.DebugSuperSailorActionStateParams
	 * Size -> 0x0010
	 */
	struct FDebugSuperSailorActionStateParams
	{
	public:
		float                                                      BaseForwardSpeed;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      YawSpeed;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightTriggerHeldSpdAmp;                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightTriggerHeldYawAmp;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DockToObjectActionStateParams
	 * Size -> 0x0010
	 */
	struct FDockToObjectActionStateParams
	{
	public:
		float                                                      DockTime;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DelayAfterDockingTime;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ForcedFieldOfView;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ForceStash;                                              // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZL7N[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ControlObjectActionStateParams
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FControlObjectActionStateParams : public FDockToObjectActionStateParams
	{
	public:
		bool                                                       UndockToLastKnownLocation;                               // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_K1J8[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UndockDuration;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LookAtOffsetParams
	 * Size -> 0x001C
	 */
	struct FLookAtOffsetParams
	{
	public:
		bool                                                       UseLookAtPosition;                                       // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseSpring;                                               // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y65I[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpringAccel;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinYaw;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxYaw;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinPitch;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxPitch;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECameraLookatAnimationType                                 CameraLookatAnimationType;                               // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5ULN[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ControlWheelActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FControlWheelActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.ControlCapstanArmActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FControlCapstanArmActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.ControlPulleyActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FControlPulleyActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.UseLadderActionStateParams
	 * Size -> 0x003C (FullSize[0x004C] - InheritedSize[0x0010])
	 */
	struct FUseLadderActionStateParams : public FDockToObjectActionStateParams
	{
	public:
		float                                                      ClimbUpSpeed;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ClimbDownSpeed;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LadderRungHeight;                                        // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpeedToEnterSlidingAnimationMs;                          // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxLadderSlidingSpeedMs;                                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InitialDockBottomPitch;                                  // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InitialDockTopPitch;                                     // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TopBottomTolerance;                                      // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0030(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.ClamberActionStateParams
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FClamberActionStateParams : public FDockToObjectActionStateParams
	{
	public:
		float                                                      InitialClamberPitch;                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0014(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.UseMountedWeaponActionStateParams
	 * Size -> 0x0040 (FullSize[0x0058] - InheritedSize[0x0018])
	 */
	struct FUseMountedWeaponActionStateParams : public FControlObjectActionStateParams
	{
	public:
		float                                                      CameraDockTime;                                          // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OVTX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                FireForceFeedbackEffect;                                 // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              FireCameraShake;                                         // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              FireInputId;                                             // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UClass*>                                      AimYawInputId;                                           // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		TArray<class UClass*>                                      AimPitchInputId;                                         // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.UseCannonActionStateParams
	 * Size -> 0x0060
	 */
	struct FUseCannonActionStateParams
	{
	public:
		struct FUseMountedWeaponActionStateParams                  MountedWeaponParams;                                     // 0x0000(0x0058) Edit, DisableEditOnInstance
		float                                                      ReloadAttemptRepeatRate;                                 // 0x0058(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EAVG[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseMapTableActionStateParams
	 * Size -> 0x0004 (FullSize[0x001C] - InheritedSize[0x0018])
	 */
	struct FUseMapTableActionStateParams : public FControlObjectActionStateParams
	{
	public:
		float                                                      CameraDockTime;                                          // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TransitionLadderActionStateParams
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTransitionLadderActionStateParams : public FDockToObjectActionStateParams
	{	};

	/**
	 * ScriptStruct Athena.LinearTransitionLadderActionStateParams
	 * Size -> 0x0004 (FullSize[0x0014] - InheritedSize[0x0010])
	 */
	struct FLinearTransitionLadderActionStateParams : public FTransitionLadderActionStateParams
	{
	public:
		float                                                      Duration;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SplineTransitionLadderActionStateParams
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FSplineTransitionLadderActionStateParams : public FTransitionLadderActionStateParams
	{	};

	/**
	 * ScriptStruct Athena.TeleportActionStateParams
	 * Size -> 0x002C
	 */
	struct FTeleportActionStateParams
	{
	public:
		float                                                      FadeDuration;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x000C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P3SX[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CharacterFadeCompleteTimeout;                            // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TeleportCompleteTimeout;                                 // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TeleportNetRelevancyTimeout;                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WaitingToSpawnActionStateParams
	 * Size -> 0x0014
	 */
	struct FWaitingToSpawnActionStateParams
	{
	public:
		float                                                      ClientStartedTimeout;                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ClientConditionsCompleteTimeout;                         // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ScreenFadeInTime;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TeleportCompleteTimeout;                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TeleportNetRelevancyTimeout;                             // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RepairObjectActionStateParams
	 * Size -> 0x0004
	 */
	struct FRepairObjectActionStateParams
	{
	public:
		float                                                      MountTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UndoRepairActionStateParams
	 * Size -> 0x0004
	 */
	struct FUndoRepairActionStateParams
	{
	public:
		float                                                      MountTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UseItemActionStateParams
	 * Size -> 0x0001
	 */
	struct FUseItemActionStateParams
	{
	public:
		unsigned char                                              UnknownData_4GQX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeadActionStateParams
	 * Size -> 0x0058
	 */
	struct FDeadActionStateParams
	{
	public:
		float                                                      FadeDelay;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeDuration;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZX07[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeathCameraBlackFadeDelay;                               // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeathCameraBlackFadeDuration;                            // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeathCameraBlackFadeEventTimeout;                        // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeathCameraBlackFadeServerTimeout;                       // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        DeathCameraBlackFadeColour;                              // 0x0034(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      DeathCameraDelayBeforeEvaporate;                         // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DeathCameraFadeAudio;                                    // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WI1F[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeathCameraDelay;                                        // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UGhostDataAsset*                                     PlayerGhostDataAsset;                                    // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HideInObjectActionStateParams
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FHideInObjectActionStateParams : public FControlObjectActionStateParams
	{
	public:
		TArray<EHealthChangedReason>                               PreventedHealthChanges;                                  // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.LeaveGhostShipActionStateParams
	 * Size -> 0x0024
	 */
	struct FLeaveGhostShipActionStateParams
	{
	public:
		float                                                      FadeDelay;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeDuration;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8FII[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShovelDigActionStateParams
	 * Size -> 0x0010
	 */
	struct FShovelDigActionStateParams
	{
	public:
		class UCurveFloat*                                         SuccessfulPitchBlendCurve;                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         DeflectedPitchBlendCurve;                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MigrationActionStateParams
	 * Size -> 0x0004
	 */
	struct FMigrationActionStateParams
	{
	public:
		float                                                      ClientSetupResponseTimeout;                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FiredFromActorActionStateParams
	 * Size -> 0x0028
	 */
	struct FFiredFromActorActionStateParams
	{
	public:
		float                                                      GravityScaleOverride;                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MassOverride;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterBrakingFactorOverride;                         // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterBrakingFactorOverrideDuration;                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           MaskFiringLagScaleMinMax;                                // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           MaskFiringLagScalingTimeMinMax;                          // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      MaskFiringLagSpeedToleranceSquared;                      // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeUntilRevertingIgnoredActors;                         // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WaitForDemoResetActionStateParams
	 * Size -> 0x0001
	 */
	struct FWaitForDemoResetActionStateParams
	{
	public:
		unsigned char                                              UnknownData_5RF5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WaterBarrelActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FWaterBarrelActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.DockableCutsceneActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FDockableCutsceneActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.DockableBaseActionStateParams
	 * Size -> 0x001C (FullSize[0x0034] - InheritedSize[0x0018])
	 */
	struct FDockableBaseActionStateParams : public FControlObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0018(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.PlayDockableKeyedInstrumentActionStateParams
	 * Size -> 0x0004 (FullSize[0x001C] - InheritedSize[0x0018])
	 */
	struct FPlayDockableKeyedInstrumentActionStateParams : public FControlObjectActionStateParams
	{
	public:
		float                                                      CameraDockTime;                                          // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapturedByKrakenActionStateParams
	 * Size -> 0x0040
	 */
	struct FCapturedByKrakenActionStateParams
	{
	public:
		class UCurveFloat*                                         MovementAlphaXY;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         MovementAlphaZ;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         MovementRotation;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MovementTime;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceFromTentacleToStartFade;                         // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeInDuration;                                          // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ClientConditionsCompleteTimeout;                         // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinCameraPitch;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxCameraPitch;                                          // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinCameraYaw;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxCameraYaw;                                            // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AnimationProgressionToStopCameraFade;                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlockInteractInputTime;                                  // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IngestedByKrakenActionStateParams
	 * Size -> 0x0004
	 */
	struct FIngestedByKrakenActionStateParams
	{
	public:
		float                                                      StowItemsProgressThreshold;                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SwallowedByKrakenActionStateParams
	 * Size -> 0x0008
	 */
	struct FSwallowedByKrakenActionStateParams
	{
	public:
		float                                                      FadeToBlackDuration;                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeathDelayTime;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LinearTransitionActionStateParams
	 * Size -> 0x0004 (FullSize[0x0014] - InheritedSize[0x0010])
	 */
	struct FLinearTransitionActionStateParams : public FDockToObjectActionStateParams
	{
	public:
		float                                                      Duration;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EnterTunnelOfTheDamnedActionStateParams
	 * Size -> 0x0020
	 */
	struct FEnterTunnelOfTheDamnedActionStateParams
	{
	public:
		float                                                      FadeDuration;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x000C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZRLD[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EjectFromTunnelOfTheDamnedActionStateParams
	 * Size -> 0x0020
	 */
	struct FEjectFromTunnelOfTheDamnedActionStateParams
	{
	public:
		float                                                      FadeDuration;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x000C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7YGW[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ExitTunnelOfTheDamnedActionStateParams
	 * Size -> 0x0014
	 */
	struct FExitTunnelOfTheDamnedActionStateParams
	{
	public:
		float                                                      ClientSetupResponseTimeout;                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAnimationRate;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAnimationScale;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAnimationBlendInTime;                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAnimationBlendOutTime;                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ArrivalTunnelOfTheDamnedActionStateParams
	 * Size -> 0x0024
	 */
	struct FArrivalTunnelOfTheDamnedActionStateParams
	{
	public:
		float                                                      FadeDuration;                                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeEventTimeout;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeServerTimeout;                                       // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x000C(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       FadeAudio;                                               // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Z8ZM[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClientSetupResponseTimeout;                              // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SinkingTunnelOfTheDamnedActionStateParams
	 * Size -> 0x0020
	 */
	struct FSinkingTunnelOfTheDamnedActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0000(0x001C) Edit, DisableEditOnInstance
		float                                                      ClientSetupResponseTimeout;                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogInteractableActionStateParams
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FCaptainsLogInteractableActionStateParams : public FControlObjectActionStateParams
	{
	public:
		class UClass*                                              ItemToSpawn;                                             // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      TimeBeforeUndock;                                        // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AE9B[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AttachedToObjectActionStateParams
	 * Size -> 0x001C (FullSize[0x002C] - InheritedSize[0x0010])
	 */
	struct FAttachedToObjectActionStateParams : public FDockToObjectActionStateParams
	{
	public:
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0010(0x001C) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.VaultPuzzleSolutionPositions
	 * Size -> 0x0010
	 */
	struct FVaultPuzzleSolutionPositions
	{
	public:
		TArray<int32_t>                                            SolutionPositions;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.VaultPuzzleSolutionEntry
	 * Size -> 0x0030
	 */
	struct FVaultPuzzleSolutionEntry
	{
	public:
		struct FVaultPuzzleSolutionPositions                       SolutionPositions;                                       // 0x0000(0x0010) Edit, DisableEditOnInstance
		struct FStringAssetReference                               MaterialSet;                                             // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               TreasureVaultTableMaterialSet;                           // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.QuestVariableDataAsset
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableDataAsset : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.InteractableLightState
	 * Size -> 0x0080
	 */
	struct FInteractableLightState
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RQ4H[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor
		float                                                      Intensity;                                               // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ConeAngleInner;                                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ConeAngleOuter;                                          // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AttenuationRadius;                                       // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FColor                                              LightColour;                                             // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor
		ESimpleLightFunctionType                                   SimpleFunctionType;                                      // 0x0054(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L9A6[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleOffset;                                             // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PulsePhase;                                              // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FlickerFrequency;                                        // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IntensityScaleForWater;                                  // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceToLightClamp;                                 // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ApplyScaleForTranslucency;                               // 0x006C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HUCU[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleForTranslucency;                                    // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		bool                                                       ApplyCapForTranslucency;                                 // 0x0074(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GKSS[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CapForTranslucency;                                      // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		unsigned char                                              UnknownData_KU6O[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractableLightParams
	 * Size -> 0x0110
	 */
	struct FInteractableLightParams
	{
	public:
		bool                                                       DebugDraw;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsSpotlight;                                             // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TKRT[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LightTag;                                                // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VOFG[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInteractableLightState                             OnParameters;                                            // 0x0010(0x0080) Edit
		struct FInteractableLightState                             OffParameters;                                           // 0x0090(0x0080) Edit
	};

	/**
	 * ScriptStruct Athena.LightData
	 * Size -> 0x0003
	 */
	struct FLightData
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LightIsOn_Server;                                        // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LitWithLantern;                                          // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CategorySpec
	 * Size -> 0x0028
	 */
	struct FCategorySpec
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UClass*>                                      FallbackCategories;                                      // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
		class FString                                              DefaultSlotIconURL;                                      // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryManipulatorAutoEquipPolicyEntry
	 * Size -> 0x0010
	 */
	struct FInventoryManipulatorAutoEquipPolicyEntry
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EInventoryManipulatorAutoEquipPolicy                       Policy;                                                  // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_24DP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageDisplayInformation
	 * Size -> 0x00C8
	 */
	struct FVoyageDisplayInformation
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_Y1IC[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Description;                                             // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_S8UE[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              KeyArtUrl;                                               // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              IconUrl;                                                 // 0x0080(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    RumouredHaulMin;                                         // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Locked;                                                  // 0x0094(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PSG9[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category;                                                // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviewImageUrl;                                         // 0x00A8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ThumbnailImageUrl;                                       // 0x00B8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IslandEventTooltipData
	 * Size -> 0x00D8
	 */
	struct FIslandEventTooltipData
	{
	public:
		struct FVoyageDisplayInformation                           DisplayInfo;                                             // 0x0000(0x00C8)
		struct FGuid                                               EventID;                                                 // 0x00C8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FaunaTypeSettings
	 * Size -> 0x0058
	 */
	struct FFaunaTypeSettings
	{
	public:
		bool                                                       bGuaranteedSpawn;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XW1E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FaunaTypeSpawnChance;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           NumFaunaGroups;                                          // 0x0008(0x0020) Edit
		struct FWeightedProbabilityRange                           NumFaunaPerGroup;                                        // 0x0028(0x0020) Edit
		TArray<struct FWeightedAISpawnTypeParams>                  SpawnTypes;                                              // 0x0048(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.Island
	 * Size -> 0x0068
	 */
	struct FIsland
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIslandType                                                IslandType;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M3ZF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Sea;                                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FVector                                             IslandBoundsCentre;                                      // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      IslandBoundsRadius;                                      // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IslandTriggerRadius;                                     // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IslandSafeZoneRadius;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Rotation;                                                // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             CompassDirectionIslandCentre;                            // 0x0034(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class UAICreatureMovementModifierParamsDataAsset*          PetMovementParamsData;                                   // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E9OG[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        IslandFeatureNames;                                      // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.IslandLocationVerifierResult
	 * Size -> 0x0014
	 */
	struct FIslandLocationVerifierResult
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G4DE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AdjustedLocation;                                        // 0x0004(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    ResultCode;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CannonAISpawnerZone
	 * Size -> 0x0014
	 */
	struct FCannonAISpawnerZone
	{
	public:
		struct FVector                                             Centre;                                                  // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IslandNotCannonZone;                                     // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OAUR[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CannonAILocation
	 * Size -> 0x0018
	 */
	struct FCannonAILocation
	{
	public:
		struct FVector                                             Centre;                                                  // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Direction;                                               // 0x000C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RequiredShipCustomizationData
	 * Size -> 0x0018
	 */
	struct FRequiredShipCustomizationData
	{
	public:
		int32_t                                                    RequiredNumberToMatch;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SD4C[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      RequiredShipCustomizations;                              // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutSlot
	 * Size -> 0x0020
	 */
	struct FItemLoadoutSlot
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class AItemInfo*>                                   Items;                                                   // 0x0008(0x0010) ZeroConstructor
		int32_t                                                    Capacity;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B13K[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutComponentSlots
	 * Size -> 0x0020
	 */
	struct FItemLoadoutComponentSlots
	{
	public:
		TArray<class UClass*>                                      WeaponSlots;                                             // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
		TArray<struct FItemLoadoutSlot>                            Slots;                                                   // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ItemPreviewView
	 * Size -> 0x0018
	 */
	struct FItemPreviewView
	{
	public:
		class FName                                                CameraName;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimationAsset*                                     Anim;                                                    // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldSpin;                                              // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Z6LD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CategoryPreviewEntry
	 * Size -> 0x0018
	 */
	struct FCategoryPreviewEntry
	{
	public:
		class UClass*                                              PreviewCategory;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ItemCategoryClass;                                       // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              PreviewClassType;                                        // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ExplosionForceFeedbackInfo
	 * Size -> 0x0028
	 */
	struct FExplosionForceFeedbackInfo
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UForceFeedbackEffect*                                Effect;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UForceFeedbackEffect*                                EffectLower;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LowerTriggerPercentage;                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Tag;                                                     // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShakeOuterRadius;                                        // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProcessableActions
	 * Size -> 0x0018
	 */
	struct FProcessableActions
	{
	public:
		EActionQueueEntryStatus                                    CurrentStatus;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KTSF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     StartTime;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActionIndex;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VJ2D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.KrakenAnimatedTentacleCollisionSegment
	 * Size -> 0x0020
	 */
	struct FKrakenAnimatedTentacleCollisionSegment
	{
	public:
		int32_t                                                    BottomBoneIndex;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TopBoneIndex;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BoneLocationAlpha;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapsuleRadius;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapsuleHalfHeight;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8RFT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   Capsule;                                                 // 0x0018(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenAnimatedTentacleHeldTargetVomittingChance
	 * Size -> 0x0010
	 */
	struct FKrakenAnimatedTentacleHeldTargetVomittingChance
	{
	public:
		float                                                      Chance;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2A3M[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CurrentState;                                            // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenAnimatedTentacleWaterTriggerableFX
	 * Size -> 0x0030
	 */
	struct FKrakenAnimatedTentacleWaterTriggerableFX
	{
	public:
		class UClass*                                              State;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      WaterHeightOffset;                                       // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_N7YP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             FirstPersonTargetVFX;                                    // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             ThirdPersonTargetVFX;                                    // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             AboveWaterVFX;                                           // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             BelowWaterVFX;                                           // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenAnimatedTentacleHitReactAnimation
	 * Size -> 0x0010
	 */
	struct FKrakenAnimatedTentacleHitReactAnimation
	{
	public:
		int32_t                                                    CollisionBoneIndex;                                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_V0L5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HitReactAnimation;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenSpawnLocationExclusionZone
	 * Size -> 0x0010
	 */
	struct FKrakenSpawnLocationExclusionZone
	{
	public:
		struct FVector                                             Centre;                                                  // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenSpawnLocationParams
	 * Size -> 0x0008
	 */
	struct FKrakenSpawnLocationParams
	{
	public:
		float                                                      KrakenRadius;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromExistingLocations;                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LandmarkReactionEventPlayForceFeedbackEntry
	 * Size -> 0x0010
	 */
	struct FLandmarkReactionEventPlayForceFeedbackEntry
	{
	public:
		float                                                      OuterRadius;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YFCF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FlameData
	 * Size -> 0x0002
	 */
	struct FFlameData
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       SkipChangeAnimation;                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.LaunchableProjectileState
	 * Size -> 0x0040
	 */
	struct FLaunchableProjectileState
	{
	public:
		struct FTransform                                          SpawnTransform;                                          // 0x0000(0x0030) IsPlainOldData, NoDestructor
		EProjectileSpawnedState                                    SpawnedState;                                            // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EA0N[0xF];                                   // 0x0031(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FireBroadcast
	 * Size -> 0x0090
	 */
	struct FFireBroadcast
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FHitResult>                                  HitResults;                                              // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference
		struct FVector                                             FirePosition;                                            // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             FireDirection;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FProjectileAim                                      ProjectileAim;                                           // 0x0030(0x0050) ContainsInstancedReference
		int32_t                                                    InaccuracySeed;                                          // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XZ09[0xC];                                   // 0x0084(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerSettingsOutput
	 * Size -> 0x0378
	 */
	struct FLightingControllerSettingsOutput
	{
	public:
		float                                                      FogDensity;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogStartDistance;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LightIntensity;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeBrightness;                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeMoonVisibility;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeStarBrightness;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeSunBrightness;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostLPVIntensity;                                        // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostExposureBias;                                        // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostLPVOcclusionIntensity;                               // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyLightIntensity;                                       // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogBrightnessNear;                                       // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogBrightnessFar;                                        // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostBloomIntensity;                                      // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostBloomThreshold;                                      // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeAuraBrightness;                                   // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostReflectionProbeBrightness;                           // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostReflectionProbeShadowBrightness;                     // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VfxController;                                           // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogMaxOpacity;                                           // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogScatterExp;                                           // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterDensity;                                    // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostLensFlareIntensity;                                  // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EmissiveFoliage;                                         // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EmissiveLights;                                          // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostExposureMinBrightness;                               // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostExposureMaxBrightness;                               // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeMoonBrightness;                                   // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeHorizonCloudBrightness;                           // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyDomeGreenFlashStrength;                               // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostSaturation;                                          // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostContrast;                                            // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudRimlightScale;                                      // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudSkylightScale;                                      // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudSunlightScale;                                      // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudGlobalPressure;                                     // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PostUnderWaterBrightness;                                // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VfxCloudBrightness;                                      // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LightGodRayIntensity;                                    // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudBottomBrightness;                                   // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudSunlightShadowing;                                  // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunDiscScale;                                            // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterSpecularBrightness;                                 // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VfxAmbientScale;                                         // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterMaxOpacity;                                 // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterScatterExp;                                 // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterStartDistance;                              // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterBrightnessNear;                             // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterBrightnessFar;                              // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogDirectionalInscatteringStart;                         // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogUnderwaterDirectionalInscatteringStart;               // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudShadowBrightness;                                   // 0x00CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StormCloudShadowBrightness;                              // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StormPostBloomIntensity;                                 // 0x00D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StormPostBloomThreshold;                                 // 0x00D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DirectionalLightShadowSteppingRate;                      // 0x00DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkullBrightness;                                         // 0x00E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterDirectionalLightMinBrightness;                 // 0x00E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FogColourAway;                                           // 0x00E8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        FogColourTowards;                                        // 0x00F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        LightSunColour;                                          // 0x0108(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkyDomeHorizonColour;                                    // 0x0118(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkyDomeZenithColour;                                     // 0x0128(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkyLightColour;                                          // 0x0138(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        PostAmbientShadowColour;                                 // 0x0148(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        FogColourAwayFar;                                        // 0x0158(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        FogColourUnderwater;                                     // 0x0168(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        FogColourAwayUnderwater;                                 // 0x0178(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterColour;                                             // 0x0188(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterColourShallow;                                      // 0x0198(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterBackLitColour;                                      // 0x01A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterFoamColour;                                         // 0x01B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterFoamHighlightColour;                                // 0x01C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        WaterAmbientColour;                                      // 0x01D8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        PostReflectionProbeTint;                                 // 0x01E8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        CloudRimlightColour;                                     // 0x01F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        CloudSkylightColour;                                     // 0x0208(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        CloudSunlightColour;                                     // 0x0218(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        PostUnderWaterTint;                                      // 0x0228(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkyDomeMoonColour;                                       // 0x0238(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        PostGamma;                                               // 0x0248(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkyDomeSunColour;                                        // 0x0258(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        VFXFoamColour;                                           // 0x0268(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        VFXWindColour;                                           // 0x0278(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        VFXUnderwaterTint;                                       // 0x0288(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormRainColour;                                         // 0x0298(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormSkyLightColour;                                     // 0x02A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormPostGamma;                                          // 0x02B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormFogColourUnderwater;                                // 0x02C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormFogColourAwayUnderwater;                            // 0x02D8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterColour;                                        // 0x02E8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterColourShallow;                                 // 0x02F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterBackLitColour;                                 // 0x0308(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterFoamColour;                                    // 0x0318(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterFoamHighlightColour;                           // 0x0328(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormWaterAmbientColour;                                 // 0x0338(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        StormPostReflectionProbeTint;                            // 0x0348(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SkullEyeColour;                                          // 0x0358(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FLinearColor                                        SandColour;                                              // 0x0368(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.LightingControllerPostProcessParams
	 * Size -> 0x01A0
	 */
	struct FLightingControllerPostProcessParams
	{
	public:
		struct FRainPostProcessSettings                            RainPostProcessParams;                                   // 0x0000(0x00C0) Edit, BlueprintVisible, DisableEditOnInstance
		struct FRainPostProcessSettings                            UnderwaterPostProcessParams;                             // 0x00C0(0x00C0) Edit, BlueprintVisible, DisableEditOnInstance
		class UMaterialInterface*                                  PostProcessUnderWaterPrelightingMaterial;                // 0x0180(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  PostProcessUnderwaterCausticsMaterial;                   // 0x0188(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  PostProcessDistortionMaterial;                           // 0x0190(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  PostProcessColourOverlayMaterial;                        // 0x0198(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingControllerRainParams
	 * Size -> 0x0018
	 */
	struct FLightingControllerRainParams
	{
	public:
		float                                                      RainOcclusionDistance;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDesaturation;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxRainIntensity;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FogInscatteringDistance;                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LPVOcclusionReduction;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxRainWind;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingControllerLightningParams
	 * Size -> 0x0040
	 */
	struct FLightingControllerLightningParams
	{
	public:
		class UCurveFloat*                                         LightningTimeIntensityCurve;                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         LightningDistanceIntensityCurve;                         // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxLightningDistance;                                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyLightIntensity;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyLightMaxLerp;                                         // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunLightIntensity;                                       // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunLightMaxLerp;                                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FoamIntensity;                                           // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FoamMaxLerp;                                             // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RainIntensity;                                           // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LightningDuration;                                       // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SkyLightOcclusion;                                       // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CloudShadowMultiplier;                                   // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NH1R[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerLightingParams
	 * Size -> 0x0044
	 */
	struct FLightingControllerLightingParams
	{
	public:
		float                                                      SunYaw;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunElevation;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderworldSunElevation;                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinSunAngle;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderworldZThreshold;                                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HideoutZThreshold;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderwaterInsideShipBrightnessInBoatSpace;               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterInsideShipBrightnessOutsideBoatSpace;          // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterBrightnessInBoatSpace;                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterDepthDarkenStart;                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterDepthDarkenRange;                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterDepthDarkenMin;                                // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      UnderwaterMurkDensity;                                   // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      SecondaryLPVCascadeOcclusionIntensityScale;              // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		int32_t                                                    LPVPropagationSteps;                                     // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DefaultLightingSet;                                      // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       EnableGodRays;                                           // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_38Q7[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerMoonParams
	 * Size -> 0x0038
	 */
	struct FLightingControllerMoonParams
	{
	public:
		TArray<float>                                              MoonPhaseAngles;                                         // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		float                                                      MoonYaw;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MoonElevation;                                           // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MoonOrbitVerticalOffset;                                 // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MoonMeshDistance;                                        // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MoonMeshSize;                                            // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunInfluenceDuration;                                    // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunInfluenceDistance;                                    // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumMoonPhases;                                           // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DaysInMoonCycle;                                         // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              SunInfluencesRotation : 1;                               // 0x0034(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor
		unsigned char                                              SunInfluencesLighting : 1;                               // 0x0034(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor
		unsigned char                                              UnknownData_1YHK[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerTransformParams
	 * Size -> 0x0090
	 */
	struct FLightingControllerTransformParams
	{
	public:
		struct FTransform                                          NorthStarRelativeTransform;                              // 0x0000(0x0030) Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FTransform                                          SkyDomeRelativeTransform;                                // 0x0030(0x0030) Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            HideoutLightRotation;                                    // 0x0060(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            ArenaTavernLightRotation;                                // 0x006C(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      FogHeight;                                               // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnderworldFogHeight;                                     // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HideoutFogHeight;                                        // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ArenaTavernFogHeight;                                    // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_98TG[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerTimeParams
	 * Size -> 0x0020
	 */
	struct FLightingControllerTimeParams
	{
	public:
		class UCurveFloat*                                         TimeScalerCurve;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunRiseTime;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SunSetTime;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InitialTimeOfDay;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ReflectionCaptureTimeOfDay;                              // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    InitialDay;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TutorialTimeOfDay;                                       // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingControllerIslandDangerParams
	 * Size -> 0x0008
	 */
	struct FLightingControllerIslandDangerParams
	{
	public:
		float                                                      IslandDangerSpringAcceleration;                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDangerValue;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingControllerAssetParams
	 * Size -> 0x0050
	 */
	struct FLightingControllerAssetParams
	{
	public:
		class UMaterialParameterCollection*                        AtmosphericMaterialParams;                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialParameterCollection*                        CloudMaterialParams;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialParameterCollection*                        ScreenEffectsMaterialParams;                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialParameterCollection*                        IslandDangerMaterialParams;                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class ULightingControllerSettings*                         UnderworldLightingSet;                                   // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class ULightingControllerSettings*                         HideoutLightingSet;                                      // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class ULightingControllerSettings*                         ArenaTavernLightingSet;                                  // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         SkyDomeMesh;                                             // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         NorthStarMesh;                                           // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MoonMesh;                                                // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingControllerLightingVars
	 * Size -> 0x0460
	 */
	struct FLightingControllerLightingVars
	{
	public:
		unsigned char                                              UnknownData_WBK1[0x460];                                 // 0x0000(0x0460) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingControllerMaterialInstances
	 * Size -> 0x0020
	 */
	struct FLightingControllerMaterialInstances
	{
	public:
		TArray<class UMaterialInstanceDynamic*>                    SkyDomeMaterials;                                        // 0x0000(0x0010) ZeroConstructor
		class UMaterialInstanceDynamic*                            NorthStarMaterial;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInstanceDynamic*                            MoonMaterial;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BlendableDrowningParams
	 * Size -> 0x0028
	 */
	struct FBlendableDrowningParams
	{
	public:
		float                                                      TimeToEmptyLungs;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeToFillLungs;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DamagePerMinute;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DrownWaterLevel;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GulpingStartTime;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GulpingPeakTime;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ClientErrorOxygenDifference;                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UOLA[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ExtraBubblesFirstPerson;                                 // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WaterModifierZoneParameters
	 * Size -> 0x0078
	 */
	struct FWaterModifierZoneParameters
	{
	public:
		float                                                      OuterRadius;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InnerRadius;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Strength;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseDragScalar;                                           // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_42M8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DragScalar;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9MKH[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBlendableDrowningParams                            DrowningParameters;                                      // 0x0018(0x0028) Edit, BlueprintVisible
		struct FBlendableDrowningParams                            ShipInternalWaterDrowningParameters;                     // 0x0040(0x0028) Edit, BlueprintVisible
		bool                                                       IsSuperHeatedWater;                                      // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ResetOxygenLevel;                                        // 0x0069(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Is3DWaterModifierZone;                                   // 0x006A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H6MB[0x1];                                   // 0x006B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OuterCylinderHalfHeight;                                 // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InnerCylinderHalfHeight;                                 // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AXPW[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WaterModifierZoneParametersAndLocation
	 * Size -> 0x0088
	 */
	struct FWaterModifierZoneParametersAndLocation
	{
	public:
		struct FWaterModifierZoneParameters                        WaterModifierZoneParameters;                             // 0x0000(0x0078) Edit, BlueprintVisible, BlueprintReadOnly
		struct FVector                                             Location;                                                // 0x0078(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LJ9O[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingZoneBlendValues
	 * Size -> 0x0008
	 */
	struct FLightingZoneBlendValues
	{
	public:
		int32_t                                                    LightingSetIndex;                                        // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LightingZoneWeight;                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightningImpact
	 * Size -> 0x0028
	 */
	struct FLightningImpact
	{
	public:
		int64_t                                                    TimeInTicks;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           Location;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              AttachActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaCharacter*                                    TargetCharacter;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TargetedHighPriorityTarget;                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SWE4[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActiveLightning
	 * Size -> 0x00C8
	 */
	struct FActiveLightning
	{
	public:
		struct FLightningImpact                                    Impact;                                                  // 0x0000(0x0028)
		unsigned char                                              UnknownData_LMC6[0xA0];                                  // 0x0028(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightningStrikeFrequency
	 * Size -> 0x0038
	 */
	struct FLightningStrikeFrequency
	{
	public:
		float                                                      MinStrength;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7Q32[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   TimePerStrike;                                           // 0x0008(0x0030) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.LightningTarget
	 * Size -> 0x0008
	 */
	struct FLightningTarget
	{
	public:
		ELightningHitTarget                                        TargetType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_V9SY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Chance;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightningTargetSelector
	 * Size -> 0x0010
	 */
	struct FLightningTargetSelector
	{
	public:
		TArray<struct FLightningTarget>                            Targets;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.LoadableComponentTimerOverride
	 * Size -> 0x0018
	 */
	struct FLoadableComponentTimerOverride
	{
	public:
		class FName                                                FeatureFlag;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              Item;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      LoadTime;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TDQ2[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LoadableComponentState
	 * Size -> 0x0010
	 */
	struct FLoadableComponentState
	{
	public:
		ELoadableState                                             LoadableState;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IINP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             LoadedItem;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanLoadItemCategoryEntry
	 * Size -> 0x0010
	 */
	struct FCanLoadItemCategoryEntry
	{
	public:
		class UClass*                                              CanLoadItemCategory;                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                FeatureToggle;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetLoadoutItem
	 * Size -> 0x0020
	 */
	struct FPetLoadoutItem
	{
	public:
		class UClass*                                              PetEntitlementDesc;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              PetCustomizationDesc;                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FString                                              PetName;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetLoadout
	 * Size -> 0x0018
	 */
	struct FPetLoadout
	{
	public:
		TArray<struct FPetLoadoutItem>                             Items;                                                   // 0x0000(0x0010) Edit, ZeroConstructor
		bool                                                       PetNamingDisallowed;                                     // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_628Q[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentPetIndex;                                         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.Loadout
	 * Size -> 0x0048
	 */
	struct FLoadout
	{
	public:
		struct FItemLoadout                                        ItemLoadout;                                             // 0x0000(0x0020) Edit
		struct FClothingLoadout                                    ClothingLoadout;                                         // 0x0020(0x0010) Edit
		struct FPetLoadout                                         PetLoadout;                                              // 0x0030(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.SaveToLoadoutItemCost
	 * Size -> 0x0028
	 */
	struct FSaveToLoadoutItemCost
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Currency;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Amount;                                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QASA[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SaveToLoadoutCosts
	 * Size -> 0x0020
	 */
	struct FSaveToLoadoutCosts
	{
	public:
		TArray<struct FSaveToLoadoutItemCost>                      CategoryCosts;                                           // 0x0000(0x0010) ZeroConstructor
		TArray<struct FSaveToLoadoutItemCost>                      EntitlementCosts;                                        // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.LoadoutEntry
	 * Size -> 0x00D8
	 */
	struct FLoadoutEntry
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FLoadout                                            Loadout;                                                 // 0x0078(0x0048)
		class FString                                              Tag;                                                     // 0x00C0(0x0010) ZeroConstructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2J91[0x8];                                   // 0x00D0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SupplementalLoadout
	 * Size -> 0x0018
	 */
	struct FSupplementalLoadout
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               LoadoutAsset;                                            // 0x0008(0x0010) Edit, ZeroConstructor, Config
	};

	/**
	 * ScriptStruct Athena.LPVAdaptationState
	 * Size -> 0x00F0
	 */
	struct FLPVAdaptationState
	{
	public:
		struct FTransform                                          InitialTransform;                                        // 0x0000(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor
		struct FTransform                                          DestinationTransform;                                    // 0x0030(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor
		struct FTransform                                          CurrentTransform;                                        // 0x0060(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor
		struct FTransform                                          SavedOffShipTransform;                                   // 0x0090(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor
		float                                                      BlendWeight;                                             // 0x00C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendTime;                                               // 0x00C4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendTranslationTime;                                    // 0x00C8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AdditionalAdaptationTime;                                // 0x00CC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DefaultRotationBlendTime;                                // 0x00D0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DefaultTranslationBlendTime;                             // 0x00D4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DefaultAdditionalBlendTime;                              // 0x00D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ELPVAdaptationType                                         DefaultAdaptationType;                                   // 0x00DC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ELPVAdaptationType                                         AdaptationType;                                          // 0x00DD(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_P4W1[0x2];                                   // 0x00DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bIsPlayerInLPVRefFrameArea : 1;                          // 0x00E0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              bIsLPVAdapting : 1;                                      // 0x00E0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              bAdaptRotationOnly : 1;                                  // 0x00E0(0x0001) BIT_FIELD BlueprintVisible, NoDestructor
		unsigned char                                              bUseInstanceDefaultValues : 1;                           // 0x00E0(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_B23D[0xF];                                   // 0x00E1(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WorldMapShipLocation
	 * Size -> 0x0040
	 */
	struct FWorldMapShipLocation
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              ShipSize;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FVector2D                                           Location;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Rotation;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ReplicatedRotation;                                      // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWorldMapShipType                                          Flags;                                                   // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ESFL[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            CrewLiveryOverlayIcon;                                   // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ReapersMarkLevel;                                        // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              EmissaryLevel;                                           // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OwnerIsInFaction;                                        // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       OwnerIsMaxFaction;                                       // 0x0033(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                OwnerFactionName;                                        // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OwnerIsInvadingShip;                                     // 0x003C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GKRT[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MapTableTutorialHandler
	 * Size -> 0x0010
	 */
	struct FMapTableTutorialHandler
	{
	public:
		class AActor*                                              CachedMapController;                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTutorial2019Component*                              CachedMapControllerTutorialComponent;                    // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldMapSetLocation
	 * Size -> 0x0028
	 */
	struct FWorldMapSetLocation
	{
	public:
		TArray<struct FVector2D>                                   MapPins;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		int32_t                                                    MaxMapPins;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SelectedPin;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WorldX;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WorldY;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Zoom;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6AOR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MaterialInformationVFXData
	 * Size -> 0x0004
	 */
	struct FMaterialInformationVFXData : public FTableRowBase
	{
	public:
		float                                                      DummyVFXValue;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MaterialInformationAudioData
	 * Size -> 0x0010
	 */
	struct FMaterialInformationAudioData : public FTableRowBase
	{
	public:
		class FName                                                SurfaceSwitch;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseAudioAcousticSurfaceParams                    Acoustics;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.MeleeAttackHitResponses
	 * Size -> 0x0001
	 */
	struct FMeleeAttackHitResponses
	{
	public:
		unsigned char                                              DecalsParticlesAudio : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor
		unsigned char                                              Animation : 1;                                           // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor
		unsigned char                                              CameraShake : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor
		unsigned char                                              GamepadRumble : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor
		unsigned char                                              HitIndicator : 1;                                        // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor
	};

	/**
	 * ScriptStruct Athena.MeleeAttackHitResponseData
	 * Size -> 0x00F8
	 */
	struct FMeleeAttackHitResponseData
	{
	public:
		class APawn*                                               AttackingCharacter;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FHitResult                                          Hit;                                                     // 0x0008(0x0080) ContainsInstancedReference
		struct FImpactDamageEvent                                  ImpactDamageEvent;                                       // 0x0088(0x0058)
		bool                                                       DamageConfirmed;                                         // 0x00E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Blocked;                                                 // 0x00E1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HLO8[0x6];                                   // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMeleeAttackDataAsset*                               AttackData;                                              // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AttackCanDamage;                                         // 0x00F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_30DY[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBlocked
	 * Size -> 0x0001
	 */
	struct FEventBlocked
	{
	public:
		unsigned char                                              UnknownData_B8SZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MeleeWeaponMovementSpeedPair
	 * Size -> 0x0008
	 */
	struct FMeleeWeaponMovementSpeedPair
	{
	public:
		EMeleeWeaponMovementSpeed                                  Label;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PNUY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpeedScalar;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeleeWeaponSpecialAttackData
	 * Size -> 0x0010
	 */
	struct FMeleeWeaponSpecialAttackData
	{
	public:
		class UClass*                                              NotificationInputId;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UMeleeAttackDataAsset*                               Asset;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemBlockingParameters
	 * Size -> 0x0004
	 */
	struct FItemBlockingParameters
	{
	public:
		float                                                      BlockingHalfAngle;                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestItemDescAndReward
	 * Size -> 0x0010
	 */
	struct FMerchantQuestItemDescAndReward
	{
	public:
		class UClass*                                              CrateDesc;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FRewardId                                           HandInOnTimeRewardId;                                    // 0x0008(0x0008) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.MerchantMapItemData
	 * Size -> 0x0080
	 */
	struct FMerchantMapItemData
	{
	public:
		struct FTreasureMapTextDesc                                Name;                                                    // 0x0000(0x0048)
		class UTexture*                                            IconImage;                                               // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              CrateItemDesc;                                           // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FMerchantQuestItemDescAndReward>             AcceptableAlternativeCrateItemData;                      // 0x0058(0x0010) ZeroConstructor
		class UClass*                                              FaunaSpecies;                                            // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              FaunaBreed;                                              // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    NumLeftToAllocate;                                       // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumLeftToDeliver;                                        // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantMapContents
	 * Size -> 0x00F0
	 */
	struct FMerchantMapContents
	{
	public:
		struct FTreasureMapTextDesc                                PickupLocation;                                          // 0x0000(0x0048)
		struct FTreasureMapTextDesc                                DeliveryLocation;                                        // 0x0048(0x0048)
		struct FTreasureMapTextDesc                                DeliverByTime;                                           // 0x0090(0x0048)
		class FName                                                DeliveryLocationIslandName;                              // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMerchantMapItemData>                        ItemData;                                                // 0x00E0(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MerchantQuestRequiredItemsGroup
	 * Size -> 0x0010
	 */
	struct FMerchantQuestRequiredItemsGroup
	{
	public:
		TArray<class UMerchantQuestItemData*>                      RequiredItems;                                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.MerchantQuestRequiredItemsGroupList
	 * Size -> 0x0018
	 */
	struct FMerchantQuestRequiredItemsGroupList
	{
	public:
		int32_t                                                    NumRequiredItems;                                        // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RT00[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMerchantQuestRequiredItemsGroup>            RequiredItemsGroups;                                     // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.MerchantQuestRequiredItemsRankEntry
	 * Size -> 0x0018
	 */
	struct FMerchantQuestRequiredItemsRankEntry
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Payout;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMerchantQuestRequiredItemsGroupList>        RequiredItems;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.MermaidAnimMapping
	 * Size -> 0x000C
	 */
	struct FMermaidAnimMapping
	{
	public:
		EMermaidState                                              State;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_V4WN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MontageLabel;                                            // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MessageInABottleVoyageEntry
	 * Size -> 0x0010
	 */
	struct FMessageInABottleVoyageEntry
	{
	public:
		class FName                                                FeatureFlag;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UVoyageRecipeDataAsset*                              VoyageRecipe;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MetalAIFormRustyDamageResponse
	 * Size -> 0x0010
	 */
	struct FMetalAIFormRustyDamageResponse
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      DamageMultiplier;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterHitReactionAnimType                              HitReaction;                                             // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SCO8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MigrationUIContentsDataAssetEntry
	 * Size -> 0x0010
	 */
	struct FMigrationUIContentsDataAssetEntry
	{
	public:
		TArray<class FText>                                        DisplayText;                                             // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FeaturedShipCustomizationCategory
	 * Size -> 0x0010
	 */
	struct FFeaturedShipCustomizationCategory
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FeaturedClothingCategory
	 * Size -> 0x0010
	 */
	struct FFeaturedClothingCategory
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpecialisedClothingCategories
	 * Size -> 0x0020
	 */
	struct FSpecialisedClothingCategories
	{
	public:
		class UClass*                                              DisplayIfWorn;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FFeaturedClothingCategory>                   Categories;                                              // 0x0008(0x0010) Edit, ZeroConstructor
		bool                                                       AllTab;                                                  // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3ZSA[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FeaturedPetCategory
	 * Size -> 0x0010
	 */
	struct FFeaturedPetCategory
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FeaturedShipCustomisationCategory
	 * Size -> 0x0010
	 */
	struct FFeaturedShipCustomisationCategory
	{
	public:
		class UClass*                                              Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BookcaseIndicatorSetting
	 * Size -> 0x0020
	 */
	struct FBookcaseIndicatorSetting
	{
	public:
		class UClass*                                              RelevantCompany;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UStaticMeshComponent*                                IndicatorMesh;                                           // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UMaterialInstanceDynamic*>                    OverriddenMaterials;                                     // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BookcaseCompanyFullnessData
	 * Size -> 0x0010
	 */
	struct FBookcaseCompanyFullnessData
	{
	public:
		float                                                      CurrentFullness;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6UZ2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Company;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetHiddenData
	 * Size -> 0x0028
	 */
	struct FSetHiddenData
	{
	public:
		class ASequencerCutSceneActor*                             SequencerActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class ULevelSequence*                                      LevelSeq;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ActorName;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Visible;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8DHE[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestCrewMember
	 * Size -> 0x0030
	 */
	struct FShipCustomizationChestCrewMember
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              Player;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FNetActorPtr                                        NetPlayerState;                                          // 0x0018(0x0014)
		unsigned char                                              UnknownData_OAJQ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LandmarkReactionKeyFrame
	 * Size -> 0x0010
	 */
	struct FLandmarkReactionKeyFrame
	{
	public:
		class ULandmarkReactionEvent*                              Event;                                                   // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		float                                                      KeyFrame;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LHWM[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCInitialSpawnedCosmeticItems
	 * Size -> 0x0010
	 */
	struct FNPCInitialSpawnedCosmeticItems
	{
	public:
		class UClass*                                              CosmeticItemObject;                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                AttachSocketName;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCCustomAnimationDataStructure
	 * Size -> 0x0038
	 */
	struct FNPCCustomAnimationDataStructure
	{
	public:
		TArray<struct FNPCOneShotAnimationElement>                 OneShotSequences;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FNPCContinuousAnimationElement>              ContinuousSequences;                                     // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UNPCHeldObjectData*                                  WieldableCosmeticItemList;                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FNPCInitialSpawnedCosmeticItems>             InitialSpawnedCosmeticItems;                             // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCCustomAnimationBlueprintPlayingAnimations
	 * Size -> 0x0028
	 */
	struct FNPCCustomAnimationBlueprintPlayingAnimations
	{
	public:
		class UAnimSequenceBase*                                   OneShot;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   ContinouousIn;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   ContinouousLoop_A;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   ContinouousLoop_B;                                       // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   ContinouousOut;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCCustomAnimationBlueprintPlayingMontage
	 * Size -> 0x0028
	 */
	struct FNPCCustomAnimationBlueprintPlayingMontage
	{
	public:
		class UAnimMontage*                                        OneShot;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        ContinouousIn;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        ContinouousLoop_A;                                       // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        ContinouousLoop_B;                                       // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        ContinouousOut;                                          // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCCustomAnimationBlueprintData
	 * Size -> 0x0068
	 */
	struct FNPCCustomAnimationBlueprintData
	{
	public:
		bool                                                       SequenceActive;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LoopActive;                                              // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y9C1[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ActiveSequenceIndex;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsOneShot;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YTBG[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNPCCustomAnimationBlueprintPlayingAnimations       BlueprintPlayingAnimations;                              // 0x0010(0x0028) Edit, BlueprintVisible
		struct FNPCCustomAnimationBlueprintPlayingMontage          BlueprintPlayingFacialMontages;                          // 0x0038(0x0028) Edit, BlueprintVisible
		ENPCCustomAnimationState                                   CustomAnimationState;                                    // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_67DV[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCAnimationIdlesVariantStruct
	 * Size -> 0x0020
	 */
	struct FNPCAnimationIdlesVariantStruct
	{
	public:
		class UAnimSequence*                                       IdleVariant;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       InactiveIdleVariant;                                     // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       InteractIdleVariant;                                     // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IdleVariantIsValid;                                      // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InactiveIdleVariantIsValid;                              // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InteractIdleVariantIsValid;                              // 0x001A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_EVVZ[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OverrideTypeDialogOptionUsageCounter
	 * Size -> 0x0018
	 */
	struct FOverrideTypeDialogOptionUsageCounter
	{
	public:
		class UClass*                                              OverrideType;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<int32_t>                                            OptionUsageCounter;                                      // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCDialogFormattedHeaderByConditionText
	 * Size -> 0x0058
	 */
	struct FNPCDialogFormattedHeaderByConditionText
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_CSH5[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              ParameterName;                                           // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		TArray<class UNPCDialogConditional*>                       Conditions;                                              // 0x0048(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.NPCDialogHeaderByConditionText
	 * Size -> 0x0048
	 */
	struct FNPCDialogHeaderByConditionText
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_5BC4[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class UNPCDialogConditional*>                       Conditions;                                              // 0x0038(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.NPCDialogRankGatedText
	 * Size -> 0x0048
	 */
	struct FNPCDialogRankGatedText
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_K9YX[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class UClass*>                                      RequiredRanks;                                           // 0x0038(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerStatOption
	 * Size -> 0x0008
	 */
	struct FPlayerStatOption
	{
	public:
		struct FPlayerStat                                         StatToFire;                                              // 0x0000(0x0004) Edit
		bool                                                       FireForWholeCrew;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4DXR[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CatalogDescTab
	 * Size -> 0x0018
	 */
	struct FCatalogDescTab
	{
	public:
		struct FStringAssetReference                               FilterIcon;                                              // 0x0000(0x0010) Edit, ZeroConstructor
		class UCatalogDataAsset*                                   Catalog;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FeatureToggledPremiumCatalog
	 * Size -> 0x0010
	 */
	struct FFeatureToggledPremiumCatalog
	{
	public:
		struct FFeatureFlag                                        FeatureToggle;                                           // 0x0000(0x0008) Edit, DisableEditOnInstance
		class UPremiumCatalogDataAsset*                            PremiumCatalog;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShopTypeDataResponse
	 * Size -> 0x0010
	 */
	struct FShopTypeDataResponse
	{
	public:
		EShopType                                                  ShopType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_12ZQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UShopDesc*                                           ShopDesc;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCDialogData
	 * Size -> 0x0018
	 */
	struct FNPCDialogData
	{
	public:
		class UNPCDialogHeader*                                    Header;                                                  // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		TArray<class UNPCDialogOption*>                            Options;                                                 // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.NPCDialogDataForOverrideType
	 * Size -> 0x0018
	 */
	struct FNPCDialogDataForOverrideType
	{
	public:
		class UClass*                                              OverrideType;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UNPCDialogConditionalContext*                        OverrideTypeContext;                                     // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UNPCDialogTreeData*                                  DialogTreeData;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCData
	 * Size -> 0x00B8
	 */
	struct FNPCData
	{
	public:
		struct FNetActorPtr                                        NPC;                                                     // 0x0000(0x0014)
		struct FGuid                                               Id;                                                      // 0x0014(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RYOR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0028(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ASDX[0x20];                                  // 0x0040(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FVector                                             Location;                                                // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                IslandName;                                              // 0x006C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TD7T[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                IslandNameLocalised;                                     // 0x0078(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_AAHD[0x20];                                  // 0x0090(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EInteractableGrammaticalGender                             GrammaticalGender;                                       // 0x00B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z0UU[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetSpawnDefinition
	 * Size -> 0x0030
	 */
	struct FPetSpawnDefinition
	{
	public:
		class UClass*                                              PetDesc;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPetCustomisation                                   PetCustomisation;                                        // 0x0008(0x0028) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.SpawnedPetData
	 * Size -> 0x0010
	 */
	struct FSpawnedPetData
	{
	public:
		class APet*                                                SpawnedPet;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class APetItemInfo*                                        SpawnedInfo;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IslandItemSpawnLocationData
	 * Size -> 0x0018
	 */
	struct FIslandItemSpawnLocationData
	{
	public:
		struct FVector                                             SpawnLocation;                                           // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector                                             SpawnLocationNormal;                                     // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SwitchMechanismTriggerPosition
	 * Size -> 0x0050
	 */
	struct FSwitchMechanismTriggerPosition
	{
	public:
		EMechanismTriggerState                                     MechanismState;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J8GP[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PivotTransform;                                          // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor
		class UWwiseEvent*                                         SwitchStartTransitionAudioEvent;                         // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         SwitchStopTransitionAudioEvent;                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetLoadoutContainer
	 * Size -> 0x0020
	 */
	struct FPetLoadoutContainer
	{
	public:
		struct FPetLoadout                                         Loadout;                                                 // 0x0000(0x0018)
		bool                                                       HasBeenSet;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NYR0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetShopPetBreed
	 * Size -> 0x0090
	 */
	struct FPetShopPetBreed
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_RJQ7[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FStringAssetReference                               Icon;                                                    // 0x0038(0x0010) Edit, ZeroConstructor
		class FText                                                Description;                                             // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_KAU1[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class UClass*>                                      Categories;                                              // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PetShopPetSpecies
	 * Size -> 0x0090
	 */
	struct FPetShopPetSpecies
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_PDR1[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FStringAssetReference                               Icon;                                                    // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class FText                                                Description;                                             // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_5F06[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FPetShopPetBreed>                            Breeds;                                                  // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PlayModePhrases
	 * Size -> 0x0020
	 */
	struct FPlayModePhrases
	{
	public:
		EPlayMode                                                  PlayModeKey;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AY7M[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhrasesRadialDataAsset*                             PhraseDataAsset;                                         // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UNonVerbalRadialDataAsset*                           QuickAccessDataAsset;                                    // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UNonVerbalRadialDataAsset*                           StrategyDataAsset;                                       // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PLSectionBundleEntry
	 * Size -> 0x0010
	 */
	struct FPLSectionBundleEntry
	{
	public:
		class UPirateLegendSection*                                Section;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VYOK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewView
	 * Size -> 0x0020
	 */
	struct FPiratePreviewView
	{
	public:
		class FName                                                CameraName;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LookAtBoneName;                                          // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimationAsset*                                     Anim;                                                    // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldSpin;                                              // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UN8X[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmoteDataEntryFrontend
	 * Size -> 0x0028
	 */
	struct FEmoteDataEntryFrontend
	{
	public:
		class FName                                                EmoteIdent;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TAssetPtr<class UAnimSequenceBase>                         EmotePreviewSequence;                                    // 0x0008(0x001C) ELEMENT_SIZE_MISMATCH UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_FODK[0x4];                                   // 0x0024(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PoolDensityData
	 * Size -> 0x0030
	 */
	struct FPoolDensityData
	{
	public:
		class UWwiseObjectPoolWrapper*                             WwiseObjectPoolDensityWrapper;                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseEmitter                                       DensityEmitter;                                          // 0x0008(0x0020) Transient
		unsigned char                                              UnknownData_N6L7[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NoiseMakerController
	 * Size -> 0x0040
	 */
	struct FNoiseMakerController
	{
	public:
		class UNoiseMakerControllerParams*                         NoiseMakerParams;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxRunningSpeed;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SimulatedMaxRunningSpeed;                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1DLQ[0x30];                                  // 0x0010(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerCompanyProgress
	 * Size -> 0x0028
	 */
	struct FPlayerCompanyProgress
	{
	public:
		class FName                                                CompanyId;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Level;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   XpRequiredToAttain;                                      // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Rank;                                                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              Sig;                                                     // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCompanyProgressCache
	 * Size -> 0x0058
	 */
	struct FPlayerCompanyProgressCache
	{
	public:
		ECompanyStatus                                             CompanyProgressStatus;                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RLCZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FPlayerCompanyProgress>           ProgressInfoByCompany;                                   // 0x0008(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewMemberData
	 * Size -> 0x0010
	 */
	struct FCrewMemberData
	{
	public:
		bool                                                       Vote;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              NumVotes;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EBrigState                                                 BrigState;                                               // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6OND[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                        PlayerState;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewShipData
	 * Size -> 0x0003
	 */
	struct FCrewShipData
	{
	public:
		bool                                                       Vote;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              NumVotes;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EScuttleState                                              ScuttleState;                                            // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewMatchmakingVisibilityData
	 * Size -> 0x0003
	 */
	struct FCrewMatchmakingVisibilityData
	{
	public:
		bool                                                       Vote;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              NumVotes;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EMatchmakingVisibilityState                                MatchmakingVisibilityState;                              // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewArenaRivalVotingData
	 * Size -> 0x0002
	 */
	struct FCrewArenaRivalVotingData
	{
	public:
		bool                                                       IsCrewMemberInFavourOfChangingArenaLobby;                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              NumberOfVotes;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCurseToAudioSwitchValue
	 * Size -> 0x000C
	 */
	struct FPlayerCurseToAudioSwitchValue
	{
	public:
		EPlayerCurseTag                                            CurseTag;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ROPD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SwitchValue;                                             // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerEntitlementsCompact
	 * Size -> 0x0038
	 */
	struct FPlayerEntitlementsCompact
	{
	public:
		EEntitlementStatus                                         Status;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6AQD[0x27];                                  // 0x0001(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Loose;                                                   // 0x0028(0x0010) ZeroConstructor, Transient, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.Entitlements
	 * Size -> 0x0078
	 */
	struct FEntitlements
	{
	public:
		unsigned char                                              UnknownData_94D7[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      PreCachedEntitlementTypes;                               // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		TArray<class UClass*>                                      Entitlements;                                            // 0x0018(0x0010) ZeroConstructor, UObjectWrapper
		unsigned char                                              UnknownData_MD1M[0x50];                                  // 0x0028(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerEntitlements
	 * Size -> 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
	 */
	struct FPlayerEntitlements : public FEntitlements
	{
	public:
		EEntitlementStatus                                         EntitlementsStatus;                                      // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C9M8[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerHeroStatUnit
	 * Size -> 0x000C
	 */
	struct FPlayerHeroStatUnit
	{
	public:
		struct FPlayerStat                                         PlayerStat;                                              // 0x0000(0x0004) Edit, DisableEditOnInstance
		class FName                                                HeroStatId;                                              // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MusicEvent
	 * Size -> 0x0010
	 */
	struct FMusicEvent
	{
	public:
		class UWwiseEvent*                                         StartEvent;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopEvent;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KrakenMusicEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FKrakenMusicEvent : public FMusicEvent
	{	};

	/**
	 * ScriptStruct Athena.TinySharkMusicEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTinySharkMusicEvent : public FMusicEvent
	{	};

	/**
	 * ScriptStruct Athena.DeepSeaRegionAmbienceAudio
	 * Size -> 0x0018
	 */
	struct FDeepSeaRegionAmbienceAudio
	{
	public:
		class UWwiseEvent*                                         PlayerInDeepSeaStart;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         PlayerInDeepSeaStop;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OnlyPostMoodMusicEventsWhenSubmerged;                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IU0Y[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerRelevancyRequest
	 * Size -> 0x0090
	 */
	struct FPlayerRelevancyRequest
	{
	public:
		class AAthenaPlayerController*                             PlayerController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERequestState                                              RequestState;                                            // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RP1Y[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeRemaining;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L20A[0x80];                                  // 0x0010(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WalletBalanceItem
	 * Size -> 0x0008
	 */
	struct FWalletBalanceItem
	{
	public:
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XFG7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Balance;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WalletBalance
	 * Size -> 0x0010
	 */
	struct FWalletBalance
	{
	public:
		TArray<struct FWalletBalanceItem>                          Balances;                                                // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AnimatedMechanismActionState
	 * Size -> 0x0018
	 */
	struct FAnimatedMechanismActionState
	{
	public:
		int32_t                                                    AnimationID;                                             // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K88J[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     StartTime;                                               // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     EndTime;                                                 // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MechanismAnimationEventContainer
	 * Size -> 0x0050
	 */
	struct FMechanismAnimationEventContainer
	{
	public:
		TArray<class UMechanismOneShotEvent*>                      AnimationStartedEvents;                                  // 0x0000(0x0010) ZeroConstructor, Transient
		TArray<class UMechanismAnimationEvent*>                    OneShotTimelineEvents;                                   // 0x0010(0x0010) ZeroConstructor, Transient
		TArray<class UMechanismAnimationEvent*>                    ContinuousTimelineEvents;                                // 0x0020(0x0010) ZeroConstructor, Transient
		TArray<class UMechanismOneShotEvent*>                      AnimationStoppedEvents;                                  // 0x0030(0x0010) ZeroConstructor, Transient
		unsigned char                                              UnknownData_30IP[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MechanismTransformAnimationCurve
	 * Size -> 0x0008
	 */
	struct FMechanismTransformAnimationCurve
	{
	public:
		class UMechanismAnimationCurve_Transform*                  CurveAsset;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PocketWatchTickAnimation
	 * Size -> 0x0010
	 */
	struct FPocketWatchTickAnimation
	{
	public:
		class UCurveFloat*                                         AnimationCurve;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         AnimationSound;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PocketWatchHandParams
	 * Size -> 0x0068
	 */
	struct FPocketWatchHandParams
	{
	public:
		TArray<struct FPocketWatchTickAnimation>                   PrimaryTickAnimations;                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FWeightedProbabilityRange                           PrimaryTickAnimationProbabilities;                       // 0x0010(0x0020) Edit, DisableEditOnInstance
		TArray<struct FPocketWatchTickAnimation>                   SpecialTickAnimations;                                   // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FWeightedProbabilityRange                           SpecialTickAnimationProbabilities;                       // 0x0040(0x0020) Edit, DisableEditOnInstance
		float                                                      ProbabilityOfSpecialTick;                                // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HM8M[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PocketWatchDateDisplay
	 * Size -> 0x0020
	 */
	struct FPocketWatchDateDisplay
	{
	public:
		class UWwiseEvent*                                         DateSwitchSFX;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInstanceDynamic*                            FirstPersonMeshDynamicMaterialInstance;                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInstanceDynamic*                            ThirdPersonMeshDynamicMaterialInstance;                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7USY[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InputSequencePair
	 * Size -> 0x0010
	 */
	struct FInputSequencePair
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAnimMontage*                                        Sequence;                                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InputMontagePair
	 * Size -> 0x0020
	 */
	struct FInputMontagePair
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Into;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Loop;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Outof;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WieldableItemActionVisuals
	 * Size -> 0x0018
	 */
	struct FWieldableItemActionVisuals
	{
	public:
		TArray<class UClass*>                                      BlockActions;                                            // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper
		EWieldableItemAnimVariant                                  AnimVariant;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsAlternate;                                             // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HideItem;                                                // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_O9EM[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AlignmentOfTypePopUpInformation
	 * Size -> 0x0020
	 */
	struct FAlignmentOfTypePopUpInformation
	{
	public:
		class FString                                              AlignmentKey;                                            // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PlayerPopUp;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   ShipPopUp;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmissaryNotificationState
	 * Size -> 0x000C
	 */
	struct FEmissaryNotificationState
	{
	public:
		float                                                      CurrentRepTotal;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumShopBundleOfferItem
	 * Size -> 0x0048
	 */
	struct FPremiumShopBundleOfferItem
	{
	public:
		class UCatalogOfferDataAsset*                              Offer;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsPurchasable;                                           // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TN2I[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LockedReason;                                            // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_TS8A[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PremiumShopOfferItem
	 * Size -> 0x0048
	 */
	struct FPremiumShopOfferItem
	{
	public:
		class UCatalogOfferDataAsset*                              Offer;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsSuperPremium;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AA6X[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LockedReason;                                            // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_VFVS[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PremiumCatalogItemSet
	 * Size -> 0x0048
	 */
	struct FPremiumCatalogItemSet
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_VIMA[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FPremiumShopOfferItem>                       Items;                                                   // 0x0038(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PremiumCatalogLandingPageTab
	 * Size -> 0x0078
	 */
	struct FPremiumCatalogLandingPageTab
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		class FText                                                DisplayName;                                             // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_HGMX[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class UPremiumCatalogLandingPageItemDataAsset*>     Children;                                                // 0x0048(0x0010) Edit, ZeroConstructor
		class FName                                                FeatureToggle;                                           // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                IncludeForPromotion;                                     // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ExcludeFromPromotion;                                    // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       RealMoneyOnly;                                           // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_M5HN[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeaponProjectile
	 * Size -> 0x0340
	 */
	struct FWeaponProjectile
	{
	public:
		unsigned char                                              UnknownData_Q4LN[0xF0];                                  // 0x0000(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileAim                                      AimData;                                                 // 0x00F0(0x0050) ContainsInstancedReference
		class UObject*                                             WeaponMesh;                                              // 0x0140(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9W2G[0x1F8];                                 // 0x0148(0x01F8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileAttackGroup
	 * Size -> 0x0068
	 */
	struct FProjectileAttackGroup
	{
	public:
		TArray<struct FWeaponProjectile>                           Projectiles;                                             // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		unsigned char                                              UnknownData_F78B[0x50];                                  // 0x0018(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileHitScanPerWeaponMeshPairings
	 * Size -> 0x0048
	 */
	struct FProjectileHitScanPerWeaponMeshPairings
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UStaticMesh*                                         TrailsMeshHitScan;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MaterialHitScan;                                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxTrails;                                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MDZP[0x2C];                                  // 0x001C(0x002C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileShotParams
	 * Size -> 0x001C
	 */
	struct FProjectileShotParams
	{
	public:
		int32_t                                                    InaccuracySeed;                                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDistributionMaxAngle;                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfProjectiles;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileMaximumRange;                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileHitScanMaximumRange;                           // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDamage;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDamageMultiplierAtMaximumRange;                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeaponProjectileEffectParams
	 * Size -> 0x0068
	 */
	struct FWeaponProjectileEffectParams
	{
	public:
		bool                                                       ApplyStun;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JXDO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StunDuration;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ApplyKnockback;                                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q9KJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnockBackInfo                                      KnockbackParams;                                         // 0x000C(0x0050) Edit, BlueprintVisible
		int32_t                                                    MinimumHitProjectilesForKnockback;                       // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaximumKnockbackDistance;                                // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       EnableKnockbackFalloffOverDistance;                      // 0x0064(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GNGI[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeaponProjectileParams
	 * Size -> 0x00B0
	 */
	struct FWeaponProjectileParams
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DamageMultiplierAtMaximumRange;                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LifeTime;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TrailFadeOutTime;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Velocity;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeBeforeApplyingGravity;                               // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownForceVelocityFractionPerSecond;                      // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VelocityDampeningPerSecond;                              // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        Color;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              ProjectileId;                                            // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EHealthChangedReason                                       HealthChangeReason;                                      // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XXCT[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponProjectileEffectParams                       ProjectileEffects;                                       // 0x003C(0x0068) Edit, BlueprintVisible
		int32_t                                                    SuggestedMaxSimulationIterations;                        // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SuggestedMinTickTimeSecs;                                // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SuggestedMaxSimulationTimeStep;                          // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AudioEmitterParameters
	 * Size -> 0x0010
	 */
	struct FAudioEmitterParameters
	{
	public:
		class UWwiseObjectPoolWrapper*                             LocalEmitterPool;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             RemoteEmitterPool;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponParameters
	 * Size -> 0x01E8
	 */
	struct FProjectileWeaponParameters
	{
	public:
		int32_t                                                    AmmoClipSize;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AmmoCostPerShot;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EquipDuration;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IntoAimingDuration;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RecoilDuration;                                          // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ReloadDuration;                                          // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FProjectileShotParams                               HipFireProjectileShotParams;                             // 0x0018(0x001C) Edit, BlueprintVisible
		struct FProjectileShotParams                               AimDownSightsProjectileShotParams;                       // 0x0034(0x001C) Edit, BlueprintVisible
		int32_t                                                    InaccuracySeed;                                          // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDistributionMaxAngle;                          // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfProjectiles;                                     // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileMaximumRange;                                  // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileHitScanMaximumRange;                           // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDamage;                                        // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileDamageMultiplierAtMaximumRange;                // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ULTW[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DamagerType;                                             // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ProjectileId;                                            // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWeaponProjectileParams                             AmmoParams;                                              // 0x0080(0x00B0) Edit, BlueprintVisible
		bool                                                       UsesScope;                                               // 0x0130(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ASIT[0x3];                                   // 0x0131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ZoomedRecoilDurationIncrease;                            // 0x0134(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SecondsUntilZoomStarts;                                  // 0x0138(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SecondsUntilPostStarts;                                  // 0x013C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WeaponFiredAINoiseRange;                                 // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaximumRequestPositionDelta;                             // 0x0144(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaximumRequestAngleDelta;                                // 0x0148(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeoutTolerance;                                        // 0x014C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AimingMoveSpeedScalar;                                   // 0x0150(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAimSensitivitySettingCategory                             AimSensitivitySettingCategory;                           // 0x0154(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RJIK[0x3];                                   // 0x0155(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InAimFOV;                                                // 0x0158(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendSpeed;                                              // 0x015C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         DryFireSfx;                                              // 0x0160(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAudioEmitterParameters                             AudioEmitterParameters;                                  // 0x0168(0x0010) Edit, BlueprintVisible
		class FName                                                RumbleTag;                                               // 0x0178(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       KnockbackEnabled;                                        // 0x0180(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LNOQ[0x3];                                   // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKnockBackInfo                                      KnockbackParams;                                         // 0x0184(0x0050) Edit, BlueprintVisible
		bool                                                       StunEnabled;                                             // 0x01D4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9MN2[0x3];                                   // 0x01D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StunDuration;                                            // 0x01D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TargetingOffset;                                         // 0x01DC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TestProjectileWeaponParameters
	 * Size -> 0x0001
	 */
	struct FTestProjectileWeaponParameters
	{
	public:
		bool                                                       PassCanTrigger;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ProjectileTimeStamp
	 * Size -> 0x0008
	 */
	struct FProjectileTimeStamp
	{
	public:
		unsigned char                                              UnknownData_YITI[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RemoteProjectileAim
	 * Size -> 0x0060
	 */
	struct FRemoteProjectileAim
	{
	public:
		struct FProjectileAim                                      AimData;                                                 // 0x0000(0x0050) ContainsInstancedReference
		bool                                                       IsRelativeAim;                                           // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FGL9[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileTimeStamp                                TimeStamp;                                               // 0x0058(0x0008)
	};

	/**
	 * ScriptStruct Athena.FireRequestHitActorWorldTransform
	 * Size -> 0x0020
	 */
	struct FFireRequestHitActorWorldTransform
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FireRequest
	 * Size -> 0x00B0
	 */
	struct FFireRequest
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SJ7G[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRemoteProjectileAim                                RemoteAimData;                                           // 0x0010(0x0060) BlueprintVisible, ContainsInstancedReference
		TArray<struct FHitResult>                                  HitResults;                                              // 0x0070(0x0010) ZeroConstructor, ContainsInstancedReference
		TArray<struct FFireRequestHitActorWorldTransform>          HitActorWorldTransforms;                                 // 0x0080(0x0010) ZeroConstructor
		struct FGuid                                               TelemetryAttackId;                                       // 0x0090(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    InaccuracySeed;                                          // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0YOK[0xC];                                   // 0x00A4(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConfigurationComboAndTrigger
	 * Size -> 0x0030
	 */
	struct FConfigurationComboAndTrigger
	{
	public:
		TArray<int8_t>                                             RequiredConfigurationCombo;                              // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate
		class AActor*                                              TriggerToActivate;                                       // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class AActor*>                                      TriggeredActionMechanisms;                               // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate
		EPuzzleStatueActivatedMechanismType                        ActivatedMechanismType;                                  // 0x0028(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EX1U[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReactionSequenceStateInfo
	 * Size -> 0x0010
	 */
	struct FReactionSequenceStateInfo
	{
	public:
		EReactionSequenceState                                     State;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPuzzleStatueActivatedMechanismType                        ActivatedMechanismType;                                  // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QQRZ[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     TimeStateStarted;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PuzzleStatueConfigurationPosition
	 * Size -> 0x0040
	 */
	struct FPuzzleStatueConfigurationPosition
	{
	public:
		struct FTransform                                          PivotTransform;                                          // 0x0000(0x0030) Edit, IsPlainOldData, NoDestructor
		class UWwiseEvent*                                         PositionAudioEvent;                                      // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B4UE[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VaultButtonData
	 * Size -> 0x0A90
	 */
	struct FVaultButtonData
	{
	public:
		struct FTransformBlendCurve                                ButtonPressAnimation;                                    // 0x0000(0x0500) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
		struct FTransformBlendCurve                                ButtonActivationAnimation;                               // 0x0500(0x0500) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
		float                                                      IncorrectSolutionPenaltyInSeconds;                       // 0x0A00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ButtonHoldTime;                                          // 0x0A04(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_11KP[0x78];                                  // 0x0A08(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                ButtonMesh;                                              // 0x0A80(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U6RE[0x8];                                   // 0x0A88(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VaultReserved
	 * Size -> 0x0014
	 */
	struct FVaultReserved
	{
	public:
		bool                                                       IsReserved;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SXHY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RiddleActionLocation
	 * Size -> 0x0008
	 */
	struct FRiddleActionLocation
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleLocations                                           RiddleLocation;                                          // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleActionLocationOffsets                               RiddleActionLocationOffset;                              // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E7K5[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ValidRiddleOptions
	 * Size -> 0x0018
	 */
	struct FValidRiddleOptions
	{
	public:
		struct FRiddleActionLocation                               RiddleActionLocation;                                    // 0x0000(0x0008) Edit
		TArray<struct FRiddleActionLocation>                       ValidRiddleActionLocations;                              // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RiddleActionInfo
	 * Size -> 0x0040
	 */
	struct FRiddleActionInfo
	{
	public:
		ERiddleActions                                             RiddleAction;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J0UO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                GotoLocationPhraseId;                                    // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoLocationWithOffsetPhraseId;                          // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoOffsetPhraseId;                                      // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoUndergroundLocationPhraseId;                         // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoUndergroundLocationWithOffsetPhraseId;               // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoUndergroundOffsetPhraseId;                           // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                GotoNonVagueNonUniqueLandmarkPhraseId;                   // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeToTriggerGateCompletion;                             // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RiddleTextPhrasebookEntry
	 * Size -> 0x0010
	 */
	struct FRiddleTextPhrasebookEntry
	{
	public:
		class FName                                                Id;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class URiddleTextPhraseDataAsset*                          Phrase;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageProposalAssetData
	 * Size -> 0x0030
	 */
	struct FVoyageProposalAssetData
	{
	public:
		struct FStringAssetReference                               Mesh;                                                    // 0x0000(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               IconInv;                                                 // 0x0010(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               IconPrv;                                                 // 0x0020(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoyageProposalCompanyAssetData
	 * Size -> 0x0028
	 */
	struct FVoyageProposalCompanyAssetData
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               OpenVoyageProposalMesh;                                  // 0x0008(0x0010) Edit, ZeroConstructor
		TArray<struct FVoyageProposalAssetData>                    Ranks;                                                   // 0x0018(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CanvasLOD
	 * Size -> 0x000C
	 */
	struct FCanvasLOD
	{
	public:
		bool                                                       IsCanvasCountLimited;                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CSLK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumCanvasesAtThisLOD;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ResolutionScaler;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuriedTreasureChestParams
	 * Size -> 0x0048
	 */
	struct FBuriedTreasureChestParams
	{
	public:
		int32_t                                                    MaxSmallCrewSizeForNumDigsSelection;                     // 0x0000(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DP10[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRange                           NumDigsRequiredForSmallCrewSize;                         // 0x0008(0x0020) Edit, Config
		struct FWeightedProbabilityRange                           NumDigsRequiredForBiggerCrewSize;                        // 0x0028(0x0020) Edit, Config
	};

	/**
	 * ScriptStruct Athena.VoyageProposalOverride
	 * Size -> 0x0020
	 */
	struct FVoyageProposalOverride
	{
	public:
		TArray<class FName>                                        NecessaryFeatures;                                       // 0x0000(0x0010) Edit, ZeroConstructor
		class UClass*                                              Proposal;                                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    ProposalIndex;                                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IGOH[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmissaryCompanyQuestIcons
	 * Size -> 0x0028
	 */
	struct FEmissaryCompanyQuestIcons
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               Background;                                              // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FStringAssetReference>                       Icons;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.QuestVarPLSectionBundle
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVarPLSectionBundle : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVarPLSection
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVarPLSection : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.RatManagerPseudoRandomEntry
	 * Size -> 0x0018
	 */
	struct FRatManagerPseudoRandomEntry
	{
	public:
		double                                                     TimeBoundary;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RatSpeed;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RatScale;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LocationName;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RatManagerRatInfestationLevel
	 * Size -> 0x0090
	 */
	struct FRatManagerRatInfestationLevel
	{
	public:
		float                                                      WaterLevel;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0LC9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   RatSpawnFrequency;                                       // 0x0008(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   RatSpeed;                                                // 0x0038(0x0030) Edit
		TArray<class FName>                                        Locations;                                               // 0x0068(0x0010) Edit, ZeroConstructor
		double                                                     Modulo;                                                  // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FRatManagerPseudoRandomEntry>                Intervals;                                               // 0x0080(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ReapersMarkTrackedBootyItem
	 * Size -> 0x0010
	 */
	struct FReapersMarkTrackedBootyItem
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EReapersMarkTrackedBootyItemType                           ItemType;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BEQ3[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReapersMarkStatusStatInfo
	 * Size -> 0x0010
	 */
	struct FReapersMarkStatusStatInfo
	{
	public:
		class UClass*                                              Status;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPlayerStat                                         StatToFire;                                              // 0x0008(0x0004) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_A50J[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReapersMarkCurseStatInfo
	 * Size -> 0x0008
	 */
	struct FReapersMarkCurseStatInfo
	{
	public:
		EPlayerCurseTag                                            Curse;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZK56[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerStat                                         StatToFire;                                              // 0x0004(0x0004) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ReapersMarkLevelMultiplier
	 * Size -> 0x0010
	 */
	struct FReapersMarkLevelMultiplier
	{
	public:
		class UClass*                                              CompanyId;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      GoldMultiplier;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      XPMultiplier;                                            // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ReapersMarkLevelEntry
	 * Size -> 0x0018
	 */
	struct FReapersMarkLevelEntry
	{
	public:
		int32_t                                                    VoyageCount;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M9LW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FReapersMarkLevelMultiplier>                 CompanyMultipliers;                                      // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ContentTypeSelectorPair
	 * Size -> 0x0010
	 */
	struct FContentTypeSelectorPair
	{
	public:
		class UContentTypeSelectionConditional*                    ContentTypeSelectorCondition;                            // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStorageContainerContentTypeSelector*                ContentTypeSelector;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerNode
	 * Size -> 0x0010
	 */
	struct FStorageContainerNode
	{
	public:
		class UClass*                                              ItemDesc;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    NumItems;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KKYJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ResourceCacheEntry
	 * Size -> 0x0010
	 */
	struct FResourceCacheEntry
	{
	public:
		TArray<class UObject*>                                     Resources;                                               // 0x0000(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.RewardRequestSucceededEvent
	 * Size -> 0x0018
	 */
	struct FRewardRequestSucceededEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestFailedEvent
	 * Size -> 0x0014
	 */
	struct FRewardRequestFailedEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		ERewardRequestFailureReason                                FailureReason;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HC9J[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConsistentPercentageRewardDistributionModel
	 * Size -> 0x0008
	 */
	struct FConsistentPercentageRewardDistributionModel
	{
	public:
		float                                                      PrimaryCrewPercentage;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SecondaryCrewsPercentage;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NumCrewsPercentageModel
	 * Size -> 0x0008
	 */
	struct FNumCrewsPercentageModel
	{
	public:
		uint32_t                                                   NumCrews;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Percentage;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RelativePercentageRewardDistributionModel
	 * Size -> 0x0018
	 */
	struct FRelativePercentageRewardDistributionModel
	{
	public:
		float                                                      DefaultPercentage;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GL0L[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNumCrewsPercentageModel>                    NumCrewsPercentageMap;                                   // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RewardDistributionModelData
	 * Size -> 0x0020
	 */
	struct FRewardDistributionModelData
	{
	public:
		struct FConsistentPercentageRewardDistributionModel        ConsistentPercentage;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRelativePercentageRewardDistributionModel          RelativePercentage;                                      // 0x0008(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.RewardPopUpNotificationInfo
	 * Size -> 0x0010
	 */
	struct FRewardPopUpNotificationInfo
	{
	public:
		struct FRewardId                                           RewardId;                                                // 0x0000(0x0008) Edit, DisableEditOnInstance
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RiddleTextRenderer
	 * Size -> 0x0058
	 */
	struct FRiddleTextRenderer
	{
	public:
		float                                                      MaskSizeScale;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SVJL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFont*                                               Font;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontScale;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontMaxScale;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontScaleChange;                                         // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FontLineSpacingScale;                                    // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FString>                                      DroppedTextCharacters;                                   // 0x0020(0x0010) Edit, ZeroConstructor
		bool                                                       VerticallyCentredText;                                   // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HorizontallyCentredText;                                 // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UI4N[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxTextHeightRatioForRiddleText;                         // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MarginSize;                                              // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           OriginRatio;                                             // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      StepSpacingRatio;                                        // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StepSpacingWithDroppedTailInLastLineRatio;               // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaskOffsetRatio;                                         // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           MaskBorderRatio;                                         // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RiddleMapContents
	 * Size -> 0x0018
	 */
	struct FRiddleMapContents
	{
	public:
		TArray<struct FTreasureMapTextDesc>                        Text;                                                    // 0x0000(0x0010) ZeroConstructor
		int32_t                                                    Progress;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L5SZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RugsPartDesc
	 * Size -> 0x0008
	 */
	struct FRugsPartDesc
	{
	public:
		class UMaterialInterface*                                  RugsMaterial;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RumbleParameters
	 * Size -> 0x0020
	 */
	struct FRumbleParameters
	{
	public:
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              CameraShakeEffect;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       Looping;                                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ASWF[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Tag;                                                     // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_48OF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeagullManagerLocationBank
	 * Size -> 0x0018
	 */
	struct FSeagullManagerLocationBank
	{
	public:
		TArray<class FName>                                        Locations;                                               // 0x0000(0x0010) Edit, ZeroConstructor
		class UShipCreatureManagerCreatureInstanceMotionModifierDataAsset* MotionModifierDataAsset;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeagullManagerFormationOffset
	 * Size -> 0x0010
	 */
	struct FSeagullManagerFormationOffset
	{
	public:
		TArray<struct FVector>                                     Offsets;                                                 // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SeagullManagerFormation
	 * Size -> 0x0018
	 */
	struct FSeagullManagerFormation
	{
	public:
		int32_t                                                    NumInFormation;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KH31[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSeagullManagerFormationOffset>              FormationOffsets;                                        // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SeagullManagerPseudoRandomEntry
	 * Size -> 0x0048
	 */
	struct FSeagullManagerPseudoRandomEntry
	{
	public:
		double                                                     TimeBoundary;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SeagullSpeed;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SeagullScale;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    BankIndex;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LocationName;                                            // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumInFormation;                                          // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FormationOffsetsIndex;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SpeedModifierCurveIndex;                                 // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<int32_t>                                            RollCurveIndices;                                        // 0x0028(0x0010) ZeroConstructor
		TArray<int32_t>                                            OffsetCurveIndices;                                      // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestVariableItemSpawnDataTypeArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableItemSpawnDataTypeArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ServiceStatusNotification
	 * Size -> 0x0010
	 */
	struct FServiceStatusNotification
	{
	public:
		uint32_t                                                   NotificationId;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XA91[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActivatedDateTimeUtc;                                    // 0x0008(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AISpawnActionStateParams
	 * Size -> 0x0010
	 */
	struct FAISpawnActionStateParams
	{
	public:
		float                                                      SpawnTimeMax;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       BeginInvis;                                              // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HC5R[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InvisTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       SkipAnimTimeCheck;                                       // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3QYS[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AIDeadActionStateParams
	 * Size -> 0x0004
	 */
	struct FAIDeadActionStateParams
	{
	public:
		float                                                      DeathDelay;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AISwimmingCreatureDeadActionStateEventMapItem
	 * Size -> 0x0008
	 */
	struct FAISwimmingCreatureDeadActionStateEventMapItem
	{
	public:
		ESwimmingCreatureDeathCustomEventEnum                      Event;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E4AK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FireAtTimeLeftInState;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AISwimmingCreatureDeadActionStateParams
	 * Size -> 0x001C (FullSize[0x0020] - InheritedSize[0x0004])
	 */
	struct FAISwimmingCreatureDeadActionStateParams : public FAIDeadActionStateParams
	{
	public:
		float                                                      TimeLeftInStateToStartDithering;                         // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FAISwimmingCreatureDeadActionStateEventMapItem> CustomEvents;                                            // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		float                                                      DoQuickDeathTestWhenLessThanTimeLeftInState;             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      QuickDeathTime;                                          // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipHullAudioData
	 * Size -> 0x0048
	 */
	struct FShipHullAudioData
	{
	public:
		struct FWwiseEmitter                                       Emitter;                                                 // 0x0000(0x0020) BlueprintVisible, BlueprintReadOnly
		class UWwiseObjectPoolWrapper*                             WwiseObjectPoolWrapper;                                  // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WwiseEvent;                                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Name;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Offset;                                                  // 0x0038(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor
		unsigned char                                              SetRTPC_Pitch : 1;                                       // 0x0044(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NoDestructor
		unsigned char                                              SetRTPC_Roll : 1;                                        // 0x0044(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NoDestructor
		unsigned char                                              SetRTPC_Velocity : 1;                                    // 0x0044(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, NoDestructor
		unsigned char                                              UnknownData_1VB6[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCreatureManagerCreatureInstance
	 * Size -> 0x00A8
	 */
	struct FShipCreatureManagerCreatureInstance
	{
	public:
		class UMeshComponent*                                      CreatureMeshComponent;                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopCreatureSounds;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2QH2[0x98];                                  // 0x0010(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestMutualExclusion
	 * Size -> 0x0010
	 */
	struct FShipCustomizationChestMutualExclusion
	{
	public:
		class UClass*                                              A;                                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              B;                                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipMetadata
	 * Size -> 0x0020
	 */
	struct FShipMetadata
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class UClass*                                              ShipTypeObject;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ShipCategoryObject;                                      // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipTemplate
	 * Size -> 0x0008
	 */
	struct FShipTemplate
	{
	public:
		class UClass*                                              ShipSizeObject;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PartsCustomisation
	 * Size -> 0x0020
	 */
	struct FPartsCustomisation
	{
	public:
		TArray<struct FPartDesc>                                   Parts;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<class UClass*>                                      InitialEntitlements;                                     // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ShipDesc
	 * Size -> 0x0048
	 */
	struct FShipDesc
	{
	public:
		struct FShipMetadata                                       MetaData;                                                // 0x0000(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
		struct FShipTemplate                                       Template;                                                // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly
		struct FPartsCustomisation                                 Customisation;                                           // 0x0028(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.PersistenceModel
	 * Size -> 0x0000
	 */
	struct FPersistenceModel
	{	};

	/**
	 * ScriptStruct Athena.ShipVoyageModel
	 * Size -> 0x0018
	 */
	struct FShipVoyageModel : public FPersistenceModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                EntitlementId;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipPartsCataloguePartCustomisation
	 * Size -> 0x0020
	 */
	struct FShipPartsCataloguePartCustomisation
	{
	public:
		class FString                                              FriendlyName;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		TArray<struct FPartCustomisation>                          Customisation;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipPartsCataloguePartCustomisations
	 * Size -> 0x0020
	 */
	struct FShipPartsCataloguePartCustomisations
	{
	public:
		class FString                                              PartName;                                                // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		TArray<struct FShipPartsCataloguePartCustomisation>        Customisations;                                          // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipPartsCatalogue
	 * Size -> 0x0010
	 */
	struct FShipPartsCatalogue
	{
	public:
		TArray<struct FShipPartsCataloguePartCustomisations>       Parts;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.WreckQueryPriorityEntry
	 * Size -> 0x0002
	 */
	struct FWreckQueryPriorityEntry
	{
	public:
		EWreckSpawnCheckFlag                                       FlagIdent;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWreckSpawnBlockType                                       BlockType;                                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WreckSpawnQueryPriorityData
	 * Size -> 0x0010
	 */
	struct FWreckSpawnQueryPriorityData
	{
	public:
		TArray<struct FWreckQueryPriorityEntry>                    PriorityTable;                                           // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CustomWreckEntry
	 * Size -> 0x001C
	 */
	struct FCustomWreckEntry
	{
	public:
		struct FGuid                                               OwningCrewID;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TWeakObjectPtr<class ACustomShipwreck>                     WreckObject;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		bool                                                       WreckExpired;                                            // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0XWF[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipwreckSiteRotation
	 * Size -> 0x0018
	 */
	struct FShipwreckSiteRotation
	{
	public:
		struct FRotator                                            Base;                                                    // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            MaxVariance;                                             // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShopOfferPrice
	 * Size -> 0x0048
	 */
	struct FShopOfferPrice
	{
	public:
		EWalletCurrencyId                                          Currency;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SRG7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayPrice;                                            // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_Q05F[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		uint32_t                                                   Price;                                                   // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5LR5[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShopOfferPrerequisites
	 * Size -> 0x0068
	 */
	struct FShopOfferPrerequisites
	{
	public:
		TArray<class FString>                                      Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
		TMap<class FString, uint32_t>                              Reputations;                                             // 0x0010(0x0050) ZeroConstructor
		uint32_t                                                   EntitlementRequirementThreshold;                         // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EUSY[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShopOffer
	 * Size -> 0x01E0
	 */
	struct FShopOffer
	{
	public:
		struct FGuid                                               OfferId;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DisplayName;                                             // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FShopOfferPrice                                     Price;                                                   // 0x0030(0x0048)
		class FString                                              ThumbnailImageUrl;                                       // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      ClientIds;                                               // 0x0088(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class FString                                              CatalogName;                                             // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      PurchaseStats;                                           // 0x00A8(0x0010) ZeroConstructor
		struct FShopOfferPrerequisites                             Prerequisites;                                           // 0x00B8(0x0068)
		struct FShopOfferPrerequisites                             ExclusionConditions;                                     // 0x0120(0x0068)
		EShopOfferAvailability                                     Availability;                                            // 0x0188(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FWWW[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FString>                         MetaData;                                                // 0x0190(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DigAnimParams
	 * Size -> 0x0018
	 */
	struct FDigAnimParams
	{
	public:
		EShovelDigType                                             DigType;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7B6Z[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeStampOfUnlockingWielderMovement;                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeStampOfEnterGround;                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeStampOfLeaveGround;                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldableItemAnimVariant                                  AnimVariant;                                             // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QPRX[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DigRequestInformation
	 * Size -> 0x0008
	 */
	struct FDigRequestInformation
	{
	public:
		class UWwiseEvent*                                         RevealSFX;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HiddenActionStateParams
	 * Size -> 0x0005
	 */
	struct FHiddenActionStateParams
	{
	public:
		bool                                                       MakeInvincibleWhileInState;                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       DisableCollisionWhileInState;                            // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       MakeInvisibleWhileInState;                               // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       HideNamePlatesWhileInState;                              // 0x0003(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       DisableGravityWhileInState;                              // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SirenStatuesSelector_BasedOnShipSize_Entry
	 * Size -> 0x0030
	 */
	struct FSirenStatuesSelector_BasedOnShipSize_Entry
	{
	public:
		TAssetPtr<class UClass>                                    ShipSize;                                                // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_XH3L[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<TAssetPtr<class UClass>>                            SirenStatueTypes;                                        // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.SkeletonAudioEvents
	 * Size -> 0x0020
	 */
	struct FSkeletonAudioEvents
	{
	public:
		class UWwiseEvent*                                         PlayLoop;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StopLoop;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         StartOneShot;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         LeaveOneShot;                                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SkeletonAICharacterItemSpecificAudioEvents
	 * Size -> 0x0030
	 */
	struct FSkeletonAICharacterItemSpecificAudioEvents
	{
	public:
		TArray<class UClass*>                                      ItemCategories;                                          // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
		struct FSkeletonAudioEvents                                Events;                                                  // 0x0010(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SkeletonAICharacterStrategyAudioEvents
	 * Size -> 0x0038
	 */
	struct FSkeletonAICharacterStrategyAudioEvents
	{
	public:
		class UClass*                                              AIStrategy;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FSkeletonAudioEvents                                DefaultEvents;                                           // 0x0008(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FSkeletonAICharacterItemSpecificAudioEvents> ItemSpecificEventOverrides;                              // 0x0028(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SkellyFortPlayerStat
	 * Size -> 0x0010
	 */
	struct FSkellyFortPlayerStat
	{
	public:
		class UClass*                                              GameEventType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FPlayerStat                                         StatToFire;                                              // 0x0008(0x0004) Edit
		unsigned char                                              UnknownData_KG4J[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AdditionalCaptainTarget
	 * Size -> 0x00C8
	 */
	struct FAdditionalCaptainTarget
	{
	public:
		TAssetPtr<class UClass>                                    PawnClass;                                               // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_06Y1[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UClass*                                              ClassId;                                                 // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAthenaAIFormDataAsset*                              Form;                                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAthenaAIControllerParamsDataAsset*                  Skillset;                                                // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TAssetPtr<class UClass>                                    ItemDropComponentClass;                                  // 0x0038(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_2FEH[0x4];                                   // 0x0054(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class ULoadoutAsset*                                       Loadout;                                                 // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                NameplateOverride;                                       // 0x0060(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_N88Q[0x20];                                  // 0x0078(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FPlayerStat>                                 CrewStatsToFireWhenDefeated;                             // 0x0098(0x0010) Edit, ZeroConstructor
		TArray<struct FPlayerStat>                                 AllianceStatsToFireWhenDefeated;                         // 0x00A8(0x0010) Edit, ZeroConstructor
		bool                                                       IsUsingDialogue;                                         // 0x00B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YUA2[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              OverrideAICombatDialogue;                                // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AdditionalWave
	 * Size -> 0x0040
	 */
	struct FAdditionalWave
	{
	public:
		TArray<struct FAdditionalCaptainTarget>                    TargetOptions;                                           // 0x0000(0x0010) Edit, ZeroConstructor
		struct FWeightedProbabilityRange                           NumberOfTargets;                                         // 0x0010(0x0020) Edit
		bool                                                       RandomSelect;                                            // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VGZ3[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AICombatDialogue;                                        // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyConditionalStatsTriggerType
	 * Size -> 0x0010
	 */
	struct FCompanyConditionalStatsTriggerType
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ConditionalStatsTriggerType;                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariableTransform
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FQuestVariableTransform : public FQuestVariable
	{
	public:
		class FName                                                SocketName;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StaggerModifiers
	 * Size -> 0x0010
	 */
	struct FStaggerModifiers
	{
	public:
		float                                                      StaggerSpeedModifierX;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StaggerSpeedModifierY;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StaggerAmplitudeModifierX;                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StaggerAmplitudeModifierY;                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StaggerModifiersEntry
	 * Size -> 0x0030
	 */
	struct FStaggerModifiersEntry
	{
	public:
		EStaggerReason                                             StaggerToModify;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_22PU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EStaggerReason>                                     StaggersThatCancelThisModifier;                          // 0x0008(0x0010) Edit, ZeroConstructor
		bool                                                       OnlyWhenSprinting;                                       // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FMDC[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStaggerModifiers                                   Modifiers;                                               // 0x001C(0x0010) Edit
		unsigned char                                              UnknownData_0OT6[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestVariableText
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableText : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.StandardAnchorDynamicsParameters
	 * Size -> 0x0028
	 */
	struct FStandardAnchorDynamicsParameters
	{
	public:
		float                                                      AnchorForce;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VelocityDeadZoneThreshold;                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         UnaryWheelAngleBasedTorque;                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         ForwardSpeedBasedTorque;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BaseHandbrakeTorque;                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeAfterAnchorDownToGrabWantedYaw;                      // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         YawDeltaVsCorrectiveTorquePerKgMass;                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StormScalingParameters
	 * Size -> 0x00D0
	 */
	struct FStormScalingParameters
	{
	public:
		class FName                                                MaterialMaskPropertyName;                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RainOpacityPropertyName;                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RadiusCurve;                                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         OuterRadiusCurve;                                        // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RainSheetOuterOpacityCurve;                              // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RainSheetInnerOpacityCurve;                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         BaseCloudHeightCurve;                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         BaseCloudMaskCurve;                                      // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RingCloudHeightCurve;                                    // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RingCloudMaskCurve;                                      // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         TopCloudHeightCurve;                                     // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         TopCloudMaskCurve;                                       // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         PressureZoneRadiusCurve;                                 // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         PressureZoneTargetCurve;                                 // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         PressureZonePushCurve;                                   // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         PressureZoneWeightCurve;                                 // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RainStrengthCurve;                                       // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         WindStrengthCurve;                                       // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         WindInnerRadiusCurve;                                    // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         WaterStrengthCurve;                                      // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveLinearColor*                                   RainSheetOuterScaleCurve;                                // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveLinearColor*                                   RainSheetInnerScaleCurve;                                // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveLinearColor*                                   BaseCloudScaleCurve;                                     // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveLinearColor*                                   RingCloudScaleCurve;                                     // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveLinearColor*                                   TopCloudScaleCurve;                                      // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AngryWaterLerpRatio;                                     // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NU0P[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StormAvoidanceArea
	 * Size -> 0x0040
	 */
	struct FStormAvoidanceArea
	{
	public:
		struct FVector2D                                           Location;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7T0H[0x34];                                  // 0x000C(0x0034) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StrongholdKeyInfo
	 * Size -> 0x0010
	 */
	struct FStrongholdKeyInfo
	{
	public:
		class UClass*                                              SkellyFortEventType;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              StrongholdKey;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StunnedActionStateParams
	 * Size -> 0x0018
	 */
	struct FStunnedActionStateParams
	{
	public:
		float                                                      StunDuration;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LockCameraMovement;                                      // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TriggerStunScreenSpaceVFX;                               // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ApplyStunAnim;                                           // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EStunAnimationType                                         StunAnimType;                                            // 0x0007(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InterruptMeleeAttacks;                                   // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EStunnedActionStateDurationType                            DurationType;                                            // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EStunnedActionStateItemWielding                            IsItemWieldingAllowed;                                   // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4AQ4[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DamagerType;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlateData
	 * Size -> 0x0020
	 */
	struct FPlateData
	{
	public:
		class FName                                                MaterialParameterName;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETinySharkTypes                                            SoulType;                                                // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ODM1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         PlayEffigyPlacementAudioEvent;                           // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UBAV[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SwimmingCreatureLoadedMaterial
	 * Size -> 0x0010
	 */
	struct FSwimmingCreatureLoadedMaterial
	{
	public:
		class UMaterialInstance*                                   MaterialInstance;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CastShadows;                                             // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_J7UR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LoadoutCacheEntry
	 * Size -> 0x0058
	 */
	struct FLoadoutCacheEntry
	{
	public:
		class FString                                              PirateId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FLoadout                                            Loadout;                                                 // 0x0010(0x0048)
	};

	/**
	 * ScriptStruct Athena.QuestVariableAssetArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableAssetArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableAIDioramaDesc
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableAIDioramaDesc : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableCrewShipManifest
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableCrewShipManifest : public FQuestVariableActor
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableNotificationDesc
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableNotificationDesc : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableAISpawnerArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableAISpawnerArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.ForkedStep
	 * Size -> 0x0028
	 */
	struct FForkedStep
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               Id;                                                      // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FJR3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Step[0x10];                                              // 0x0018(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ForkedStep.Step
	};

	/**
	 * ScriptStruct Athena.CampaignRanks
	 * Size -> 0x0018
	 */
	struct FCampaignRanks
	{
	public:
		class FName                                                CampaignId;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      Ranks;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.TelemetryStepContext
	 * Size -> 0x00A0
	 */
	struct FTelemetryStepContext
	{
	public:
		struct FQuestVariableName                                  Name;                                                    // 0x0000(0x0020) Edit
		struct FQuestVariableDataAsset                             Asset;                                                   // 0x0020(0x0020) Edit
		struct FQuestVariableAsset                                 AssetRef;                                                // 0x0040(0x0020) Edit
		struct FQuestVariableClass                                 Type;                                                    // 0x0060(0x0020) Edit
		struct FQuestVariableActor                                 Actor;                                                   // 0x0080(0x0020) Edit
	};

	/**
	 * ScriptStruct Athena.QuestDesc
	 * Size -> 0x0028
	 */
	struct FQuestDesc
	{
	public:
		unsigned char                                              UnknownData_WRSA[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Title;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsEmergent;                                              // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_B4AH[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IslandName;                                              // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MFVD[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureLocationData
	 * Size -> 0x0020
	 */
	struct FTreasureLocationData
	{
	public:
		struct FVector                                             WorldSpaceLocation;                                      // 0x0000(0x000C) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor
		struct FVector                                             IslandSpaceLocation;                                     // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           MapSpaceLocation;                                        // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TreasureData
	 * Size -> 0x0038
	 */
	struct FTreasureData
	{
	public:
		struct FTreasureLocationData                               TreasureLocation;                                        // 0x0000(0x0020) Edit, BlueprintVisible
		class UClass*                                              TreasureChestDesc;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UItemSpawnData*                                      TreasureSpawnData;                                       // 0x0028(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DigRadius;                                               // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RPKS[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.XMarksTheSpotQuestDesc
	 * Size -> 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
	 */
	struct FXMarksTheSpotQuestDesc : public FQuestDesc
	{
	public:
		TArray<struct FTreasureData>                               Treasure;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference
		TAssetPtr<class UTexture>                                  MapTexture;                                              // 0x0038(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_5X46[0x4];                                   // 0x0054(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UTexture>                                  MapInventoryTexture;                                     // 0x0058(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_OOMH[0x4];                                   // 0x0074(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      RotationFromNorth;                                       // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               MapGroupGuid;                                            // 0x007C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AJZM[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAIBoobyTrapSpawner*>                         BoobyTrapSpawners;                                       // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x00A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TinVoyageDebugEntry
	 * Size -> 0x0030
	 */
	struct FTinVoyageDebugEntry
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		ETinVoyageDifficulty                                       Difficulty;                                              // 0x0008(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NH1A[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TAssetPtr<class UClass>                                    VoyageProposal;                                          // 0x0010(0x001C) ELEMENT_SIZE_MISMATCH Edit, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_S534[0x4];                                   // 0x002C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.XMarksTheSpotMapMark
	 * Size -> 0x0010
	 */
	struct FXMarksTheSpotMapMark
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Rotation;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsUnderground;                                           // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_K0AM[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VaultTreasureRarity
	 * Size -> 0x0038
	 */
	struct FVaultTreasureRarity
	{
	public:
		class UClass*                                              VaultKeyDesc;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FItemSpawnParams                                    SpawnParams;                                             // 0x0008(0x0028) Edit
		class UWeightedItemDescSpawnDataAsset*                     ReferencedSpawnDistributionAsset;                        // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialStepDependencies
	 * Size -> 0x0058
	 */
	struct FTutorialStepDependencies
	{
	public:
		class AAthenaPlayerController*                             Controller;                                              // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HWKC[0x50];                                  // 0x0008(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialSequence
	 * Size -> 0x0090
	 */
	struct FTutorialSequence
	{
	public:
		unsigned char                                              UnknownData_H5NB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentStep;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EOJH[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialStepDependencies                           Dependencies;                                            // 0x0020(0x0058) Transient, RepSkip
		unsigned char                                              UnknownData_X003[0x18];                                  // 0x0078(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStep
	 * Size -> 0x0080
	 */
	struct FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_U7ZU[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialStepDependencies                           Dependencies;                                            // 0x0020(0x0058) Transient
		unsigned char                                              UnknownData_ZC5C[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepPlayIntroAnimatic
	 * Size -> 0x0028 (FullSize[0x00A8] - InheritedSize[0x0080])
	 */
	struct FTutorialStepPlayIntroAnimatic : public FTutorialStep
	{
	public:
		class UFirstPersonAnimationInstance*                       AnimInstance;                                            // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LOEM[0x20];                                  // 0x0088(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepEatBanana
	 * Size -> 0x00E0 (FullSize[0x0160] - InheritedSize[0x0080])
	 */
	struct FTutorialStepEatBanana : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_I0EM[0xE0];                                  // 0x0080(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepUseMap
	 * Size -> 0x00F0 (FullSize[0x0170] - InheritedSize[0x0080])
	 */
	struct FTutorialStepUseMap : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_RKSB[0xE8];                                  // 0x0080(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AWieldableItem*                                      TutorialMap;                                             // 0x0168(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialStepBuyVoyage
	 * Size -> 0x0098 (FullSize[0x0118] - InheritedSize[0x0080])
	 */
	struct FTutorialStepBuyVoyage : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_NDCB[0x98];                                  // 0x0080(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepCycleWeapons
	 * Size -> 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
	 */
	struct FTutorialStepCycleWeapons : public FTutorialStep
	{	};

	/**
	 * ScriptStruct Athena.TutorialStepSellTreasure
	 * Size -> 0x0208 (FullSize[0x0288] - InheritedSize[0x0080])
	 */
	struct FTutorialStepSellTreasure : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_MAQJ[0x8];                                   // 0x0080(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemInfo*                                           SpawnedChest;                                            // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RYR4[0x1F8];                                 // 0x0090(0x01F8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepBuyClothes
	 * Size -> 0x0018 (FullSize[0x0098] - InheritedSize[0x0080])
	 */
	struct FTutorialStepBuyClothes : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_ZHHQ[0x18];                                  // 0x0080(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepReturnToStranger
	 * Size -> 0x00E0 (FullSize[0x0160] - InheritedSize[0x0080])
	 */
	struct FTutorialStepReturnToStranger : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_BLLD[0xE0];                                  // 0x0080(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepBeginTallTale
	 * Size -> 0x0048 (FullSize[0x00C8] - InheritedSize[0x0080])
	 */
	struct FTutorialStepBeginTallTale : public FTutorialStep
	{
	public:
		unsigned char                                              UnknownData_PHPQ[0x48];                                  // 0x0080(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepEndOfTutorial
	 * Size -> 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
	 */
	struct FTutorialStepEndOfTutorial : public FTutorialStep
	{	};

	/**
	 * ScriptStruct Athena.MainTutorialSequence
	 * Size -> 0x0B10 (FullSize[0x0BA0] - InheritedSize[0x0090])
	 */
	struct FMainTutorialSequence : public FTutorialSequence
	{
	public:
		unsigned char                                              UnknownData_CH64[0x28];                                  // 0x0090(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialStepPlayIntroAnimatic                      PlayIntro;                                               // 0x00B8(0x00A8) Protected
		struct FTutorialStepEatBanana                              EatBanana;                                               // 0x0160(0x0160) Protected
		struct FTutorialStepUseMap                                 UseMap;                                                  // 0x02C0(0x0170) Protected
		struct FTutorialStepBuyVoyage                              BuyVoyage;                                               // 0x0430(0x0118) Protected
		struct FTutorialStepCycleWeapons                           CycleWeapons;                                            // 0x0548(0x0080) Protected
		struct FTutorialStepSellTreasure                           SellTreasure;                                            // 0x05C8(0x0288) Protected
		struct FTutorialStepBuyClothes                             BuyClothes;                                              // 0x0850(0x0098) Protected
		struct FTutorialStepReturnToStranger                       ReturnToStranger;                                        // 0x08E8(0x0160) Protected
		struct FTutorialStepBeginTallTale                          BeginTallTale;                                           // 0x0A48(0x00C8) Protected
		struct FTutorialStepEndOfTutorial                          EndOfTutorial;                                           // 0x0B10(0x0080) Protected
		unsigned char                                              UnknownData_C6W6[0x10];                                  // 0x0B90(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialAnimationResult
	 * Size -> 0x0010
	 */
	struct FTutorialAnimationResult
	{
	public:
		unsigned char                                              UnknownData_UE4U[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFirstPersonAnimationInstance*                       AnimInstance;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BlockDecalMaterials
	 * Size -> 0x0010
	 */
	struct FBlockDecalMaterials
	{
	public:
		TArray<class UMaterialInterface*>                          BlockMaterials;                                          // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.VfxStoryStoryRelatedSettings
	 * Size -> 0x000C
	 */
	struct FVfxStoryStoryRelatedSettings
	{
	public:
		struct FStoryFlag                                          StoryFlag;                                               // 0x0000(0x0008) Edit
		float                                                      EmitterValue;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VomitVFXObject
	 * Size -> 0x0018
	 */
	struct FVomitVFXObject
	{
	public:
		class FName                                                VFXName;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             FirstPerson;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             ThirdPerson;                                             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VomitVFX
	 * Size -> 0x0200
	 */
	struct FVomitVFX
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C30W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVomitVFXObject>                             VomitVFXObjects;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		class FName                                                SocketName1st;                                           // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location1st;                                             // 0x0020(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation1st;                                             // 0x002C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class UParticleSystemComponent*                            Component1st;                                            // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                SocketName3rd;                                           // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location3rd;                                             // 0x0048(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation3rd;                                             // 0x0054(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class UParticleSystemComponent*                            Component3rd;                                            // 0x0060(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      No1stObjects;                                            // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		class AController*                                         Controller;                                              // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_80M1[0x180];                                 // 0x0080(0x0180) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VomitScreenFX
	 * Size -> 0x002C
	 */
	struct FVomitScreenFX
	{
	public:
		float                                                      EnterDuration;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullOnDuration;                                          // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ExitDuration;                                            // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DebugInterval;                                           // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WDKJ[0x1C];                                  // 0x0010(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VomitProjectiles
	 * Size -> 0x0050
	 */
	struct FVomitProjectiles
	{
	public:
		class UClass*                                              VomitProjectileClass;                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Speed;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AdditionalLiftAngle;                                     // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Radius;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ImpactDelay;                                             // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ImpactCutoff;                                            // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ImpactsMin;                                              // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ImpactsMax;                                              // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          ChannelToIgnoreInShip;                                   // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DebugLaunchClientProjectiles;                            // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_74JU[0x22];                                  // 0x002E(0x0022) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageGeneratorSimBlackboard
	 * Size -> 0x0040
	 */
	struct FVoyageGeneratorSimBlackboard
	{
	public:
		unsigned char                                              UnknownData_VA15[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MatchmakingVoyageRecipe
	 * Size -> 0x0008 (FullSize[0x0148] - InheritedSize[0x0140])
	 */
	struct FMatchmakingVoyageRecipe : public FVoyageRecipe
	{
	public:
		EMatchmakingServerType                                     ServerType;                                              // 0x0140(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EContestType                                               ContestType;                                             // 0x0141(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NWOR[0x6];                                   // 0x0142(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WaterBarrelFeedbackLevel
	 * Size -> 0x0010
	 */
	struct FWaterBarrelFeedbackLevel
	{
	public:
		float                                                      Strength;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YGR2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                Effect;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WaterSensitiveHealthChange
	 * Size -> 0x0008
	 */
	struct FWaterSensitiveHealthChange
	{
	public:
		bool                                                       HealthChangeEnabled;                                     // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TRK2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HealthChangeAmount;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelDesc
	 * Size -> 0x0028
	 */
	struct FWheelDesc
	{
	public:
		struct FStringAssetReference                               WheelMesh;                                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    WheelCachedMeshResourceSize;                             // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UMaterialInterface*>                          WheelMeshOverrideMaterials;                              // 0x0018(0x0010) Edit, ZeroConstructor, AdvancedDisplay
	};

	/**
	 * ScriptStruct Athena.WheelAnimationProperties
	 * Size -> 0x0078
	 */
	struct FWheelAnimationProperties
	{
	public:
		float                                                      MaxWheelAngle;                                           // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinWheelAngle;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWheelSpeed;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpeedForFastTurns;                                       // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpeedForMidTurns;                                        // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Left180ZoneAMin;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Left180ZoneAMax;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Left180ZoneBMin;                                         // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Left180ZoneBMax;                                         // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Right180ZoneAMin;                                        // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Right180ZoneAMax;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Right180ZoneBMin;                                        // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Right180ZoneBMax;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftMid180ZoneAMin;                                      // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftMid180ZoneAMax;                                      // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightMid180ZoneAMin;                                     // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightMid180ZoneAMax;                                     // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Animation180AngleMap;                                    // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ServerWheelBlend;                                        // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WheelBlend;                                              // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceMaxDriftSpeed;                                 // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XJXJ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         TurbulenceInputScale;                                    // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceMaxDriftPercentageCounter;                     // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceMaxDriftBoostPercentage;                       // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceLockJitterRate;                                // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceLockJitter;                                    // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TurbulenceSmoothRate;                                    // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SteeringAngleFeedbackThreshold;                          // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelEventProperties
	 * Size -> 0x0008
	 */
	struct FWheelEventProperties
	{
	public:
		float                                                      VelocityThresholdForStopped;                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeadZoneForCenter;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelPartsScales
	 * Size -> 0x0048
	 */
	struct FWheelPartsScales
	{
	public:
		struct FVector                                             FractureWestScale;                                       // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             FractureEastScale;                                       // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             FractureSouthScale;                                      // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             PlankWestScale;                                          // 0x0024(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             PlankEastScale;                                          // 0x0030(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             PlankSouthScale;                                         // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WheelAdditiveProperties
	 * Size -> 0x0020
	 */
	struct FWheelAdditiveProperties
	{
	public:
		float                                                      RightHandOnHandleAMin;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightHandOnHandleAMax;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightHandOnHandleBMin;                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightHandOnHandleBMax;                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftHandOnHandleAMin;                                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftHandOnHandleAMax;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftHandOnHandleBMin;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftHandOnHandleBMax;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelAdditiveAlphaSets
	 * Size -> 0x0024
	 */
	struct FWheelAdditiveAlphaSets
	{
	public:
		float                                                      IsAdditiveRightFingerIdle;                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IsAdditiveLeftFingerIdle;                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IsAdditiveIdle;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftFingerAdditiveValue;                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightFingerAdditiveValue;                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      fullBodyAdditiveValue;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RHandAdditiveBlendValue;                                 // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LHandAdditiveBlendValue;                                 // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullBodyAdditiveBlendValue;                              // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BlendAdditiveValues
	 * Size -> 0x0010
	 */
	struct FBlendAdditiveValues
	{
	public:
		float                                                      HandAdditiveBlendValueON;                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HandAdditiveBlendValueOFF;                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullBodyAdditiveBlendValueON;                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FullBodyAdditiveBlendValueOFF;                           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelArmIKDownWithinRange
	 * Size -> 0x0020
	 */
	struct FWheelArmIKDownWithinRange
	{
	public:
		float                                                      LeftArmDownRangeAMin;                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftArmDownRangeAMax;                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftArmDownRangeBMin;                                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LeftArmDownRangeBMax;                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmDownRangeAMin;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmDownRangeAMax;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmDownRangeBMin;                                   // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RightArmDownRangeBMax;                                   // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WheelArmIKBoolSets
	 * Size -> 0x0004
	 */
	struct FWheelArmIKBoolSets
	{
	public:
		bool                                                       LeftIKOn;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RightIKOn;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       LeftArmDown;                                             // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RightArmDown;                                            // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WieldedItemData
	 * Size -> 0x0010
	 */
	struct FWieldedItemData
	{
	public:
		class AActor*                                              Wieldable;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              ItemCategory;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPetSelectedArrayAnimations
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationPetSelectedArrayAnimations
	{
	public:
		class UAnimSequence*                                       HeldBaseIdle_A;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       HeldBaseIdle_B;                                          // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPets
	 * Size -> 0x00E0
	 */
	struct FAthenaAnimationPets
	{
	public:
		unsigned char                                              UnknownData_66S6[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EAthenaAnimationPetSpawnState                              PetSpawnState;                                           // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PetIsSad;                                                // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FlyingScared;                                            // 0x000A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       StaticBaseHeldPoseActive;                                // 0x000B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseAlternativeStrokeAnimations;                          // 0x000C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CurrentlyLocomoting;                                     // 0x000D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseShowingLocomotionSet;                                 // 0x000E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		EAthenaAnimationPetHeldState                               CurrentHeldState;                                        // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAthenaAnimationPetRoamingState                            CurrentRoamingState;                                     // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldedItemAnimationState                                 ParentCurrentWieldedState;                               // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YFWS[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationLocomotion                          ParentLocomotionData;                                    // 0x0018(0x0068) BlueprintVisible, BlueprintReadOnly
		EAthenaAnimationJumpingState                               ParentJumpingState;                                      // 0x0080(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0EA6[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPetsAnimationData*                                  PetAnimations;                                           // 0x0088(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationPetSelectedArrayAnimations          PetSelectedArrayAnimations;                              // 0x0090(0x0010) BlueprintVisible, BlueprintReadOnly
		EAthenaAnimationPetHeldReactionState                       ReactState;                                              // 0x00A0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E56L[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      JumpAlphaBlend;                                          // 0x00A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CurrentlyJumping;                                        // 0x00A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Submerged;                                               // 0x00A9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LCVG[0x36];                                  // 0x00AA(0x0036) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetRoamingAnimationStateLoadableWeightedDefinition
	 * Size -> 0x0018
	 */
	struct FPetRoamingAnimationStateLoadableWeightedDefinition
	{
	public:
		struct FStringAssetReference                               LoadableDefinition;                                      // 0x0000(0x0010) ZeroConstructor
		float                                                      Weight;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_004S[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetRoamingAnimationStateDefinitionWeightedDataAsset
	 * Size -> 0x0010
	 */
	struct FPetRoamingAnimationStateDefinitionWeightedDataAsset
	{
	public:
		class UPetRoamingAnimationStateDefinitionDataAsset*        AnimationDefinitionData;                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weighting;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_W8I4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetRoamingAnimationStateDefinitionWrapper
	 * Size -> 0x0048
	 */
	struct FPetRoamingAnimationStateDefinitionWrapper
	{
	public:
		struct FStringAssetReference                               LoadableDefinition;                                      // 0x0000(0x0010) ZeroConstructor
		TArray<struct FPetRoamingAnimationStateLoadableWeightedDefinition> LoadableWeightedDefinitions;                             // 0x0010(0x0010) ZeroConstructor
		EAthenaAnimationPetRoamingState                            AnimationState;                                          // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BMZU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPetRoamingAnimationStateDefinitionDataAsset*        DefinitionAsset;                                         // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FPetRoamingAnimationStateDefinitionWeightedDataAsset> WeightedDefinitionAssets;                                // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		bool                                                       LoadOnDemand;                                            // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseWeightedAnimationArray;                               // 0x0041(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4RM6[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationCycleMontage
	 * Size -> 0x0018
	 */
	struct FPetAnimationCycleMontage
	{
	public:
		class UAnimMontage*                                        In;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        Loop;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        Out;                                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetRoamingAnimationState
	 * Size -> 0x0038
	 */
	struct FPetRoamingAnimationState
	{
	public:
		EPetMontageAnimationType                                   AnimationType;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TQ6G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        MontageData;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPetAnimationCycleMontage                           CycleData;                                               // 0x0010(0x0018)
		EWieldAnimationLocation                                    CurrentWieldableLocation;                                // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldAnimationLocation                                    ResetWieldableLocation;                                  // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NVCP[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendInTime;                                             // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendOutTime;                                            // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Uninterruptable;                                         // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ResetWieldableIfInterrupted;                             // 0x0035(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AllowHappyReact;                                         // 0x0036(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_EE25[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AnimationInterruptData
	 * Size -> 0x0004
	 */
	struct FAnimationInterruptData
	{
	public:
		unsigned char                                              UnknownData_8TH1[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationDataRoaming
	 * Size -> 0x00A0
	 */
	struct FPetAnimationDataRoaming
	{
	public:
		class UPetRoamingAnimationStateDefinitionsDataAsset*       RoamingAnimationStateDefinitionsAsset;                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Locomotion_In;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Locomotion;                                              // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Locomotion_Out;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Locomotion_Scared;                                       // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Locomotion_Sad_Additive;                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TurnLeft;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TurnRight;                                               // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TurnLeftIntoLocomotion;                                  // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TurnRightIntoLocomotion;                                 // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Arrive;                                                  // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Exit;                                                    // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   LandingLoop;                                             // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Landing_Out;                                             // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TakingOff_In;                                            // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   TakingOffLoop;                                           // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Flying;                                                  // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Flying_Scared;                                           // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   PositiveMood;                                            // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   CloseRadiusPositiveMood;                                 // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedPetAnimation
	 * Size -> 0x0010
	 */
	struct FWeightedPetAnimation
	{
	public:
		class UAnimSequence*                                       Animation;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weighting;                                               // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_W24L[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedPetAnimations
	 * Size -> 0x0010
	 */
	struct FWeightedPetAnimations
	{
	public:
		TArray<struct FWeightedPetAnimation>                       Weightings;                                              // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PetAnimationCycle
	 * Size -> 0x0018
	 */
	struct FPetAnimationCycle
	{
	public:
		class UAnimSequenceBase*                                   In;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Loop;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Out;                                                     // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetAnimationDataJump
	 * Size -> 0x0020
	 */
	struct FPetAnimationDataJump
	{
	public:
		class UAnimSequenceBase*                                   JumpStart;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   JumpCycle;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   PreImpact;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   LandLight;                                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HeldStateSpecificBlendWeight
	 * Size -> 0x0008
	 */
	struct FHeldStateSpecificBlendWeight
	{
	public:
		EAthenaAnimationPetHeldState                               HeldState;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_53KG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendWeight;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.JumpHeldAdditiveBlendWeight
	 * Size -> 0x0018
	 */
	struct FJumpHeldAdditiveBlendWeight
	{
	public:
		TArray<struct FHeldStateSpecificBlendWeight>               HeldStateSpecificBlendWeights;                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
		float                                                      DefaultBlendWeight;                                      // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3XR3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AlternateHeldPose
	 * Size -> 0x0010
	 */
	struct FAlternateHeldPose
	{
	public:
		class UAnimSequenceBase*                                   AlternateHeldPose;                                       // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AlternateHeldPoseStrength;                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0U2U[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationDataBeingHeld
	 * Size -> 0x0160
	 */
	struct FPetAnimationDataBeingHeld
	{
	public:
		struct FWeightedPetAnimations                              WeightedBaseIdle;                                        // 0x0000(0x0010) Edit, BlueprintVisible
		struct FWeightedAnimationTimeoutSelector                   WeightedIdleTimeouts;                                    // 0x0010(0x0010) Edit, BlueprintVisible
		class UAnimSequenceBase*                                   DefaultIdle;                                             // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Equip;                                                   // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Drop;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Chew;                                                    // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   PositiveFeedingReact;                                    // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   PositiveFeedingReactShown;                               // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   NegativeFeedingReact;                                    // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   NegativeFeedingReactShown;                               // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   RefuseFeedingReact;                                      // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   RefuseFeedingReactShown;                                 // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPetAnimationCycle                                  Stroke;                                                  // 0x0070(0x0018) Edit, BlueprintVisible
		struct FPetAnimationCycle                                  StrokeAlternate;                                         // 0x0088(0x0018) Edit, BlueprintVisible
		struct FPetAnimationCycle                                  Give;                                                    // 0x00A0(0x0018) Edit, BlueprintVisible
		class UBlendSpace*                                         Locomotion;                                              // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         ShowingLocomotion;                                       // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   Underwater;                                              // 0x00C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequenceBase*                                   ShowingUnderwater;                                       // 0x00D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPetAnimationDataJump                               Jump;                                                    // 0x00D8(0x0020) Edit, BlueprintVisible
		struct FPetAnimationDataJump                               JumpAlternateStroke;                                     // 0x00F8(0x0020) Edit, BlueprintVisible
		struct FPetAnimationDataJump                               JumpShowing;                                             // 0x0118(0x0020) Edit, BlueprintVisible
		struct FJumpHeldAdditiveBlendWeight                        JumpHeldAdditiveBlendWeight;                             // 0x0138(0x0018) Edit, BlueprintVisible
		struct FAlternateHeldPose                                  AlternateHeldPose;                                       // 0x0150(0x0010) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.ServerWieldSet
	 * Size -> 0x001C
	 */
	struct FServerWieldSet
	{
	public:
		struct FNetActorPtr                                        WieldedItem;                                             // 0x0000(0x0014)
		int32_t                                                    EpochId;                                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Fast;                                                    // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PZNU[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MapTransformRenderData
	 * Size -> 0x0024
	 */
	struct FMapTransformRenderData
	{
	public:
		struct FVector2D                                           Pivot;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           Position;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		EBlendMode                                                 BlendMode;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_072N[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           Size;                                                    // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      RotationToNorth;                                         // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationOffset;                                          // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MapTextureRenderData
	 * Size -> 0x0020
	 */
	struct FMapTextureRenderData
	{
	public:
		class UMapRenderResource*                                  RenderResource;                                          // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInstance*                                   Material;                                                // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMapTransformRenderData>                     Transforms;                                              // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceCannonManagerCrewSizeSettings
	 * Size -> 0x0040
	 */
	struct FNPCOnSurfaceCannonManagerCrewSizeSettings
	{
	public:
		int32_t                                                    CrewSize;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IZCY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   TimeBetweenShots;                                        // 0x0008(0x0030) Edit
		float                                                      ChanceOfNearMiss;                                        // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OAU6[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceCannonManagerCannon
	 * Size -> 0x0040
	 */
	struct FNPCOnSurfaceCannonManagerCannon
	{
	public:
		class ACannon*                                             Cannon;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TS0E[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          NearestLocation;                                         // 0x0010(0x0030) IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceFloodedLevel
	 * Size -> 0x0008
	 */
	struct FNPCOnSurfaceFloodedLevel
	{
	public:
		float                                                      NormalisedWaterLevel;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ENPCOnSurfaceFloodedLevel                                  FloodedLevel;                                            // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_V4I1[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceShipSizeFloodedLevels
	 * Size -> 0x0018
	 */
	struct FNPCOnSurfaceShipSizeFloodedLevels
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FNPCOnSurfaceFloodedLevel>                   FloodedLevels;                                           // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceLocationsEntry
	 * Size -> 0x0078
	 */
	struct FNPCOnSurfaceLocationsEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                SpawnLocationsName;                                      // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ENPCOnSurfaceFloodedLevel                                  InvalidWhen;                                             // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z0BI[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TAssetPtr<class UClass>                                    AnimationData;                                           // 0x0010(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_H5K3[0x4];                                   // 0x002C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      FadeOutDelay;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AlternateFadeOutDelay;                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CheckPlayerIsNearby;                                     // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsesActiveAnimations;                                    // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KSCI[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PlayerNearbyVOGroupName;                                 // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UGJE[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   PlayerNearbyVOCooldown;                                  // 0x0048(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceLocationGroup
	 * Size -> 0x0018
	 */
	struct FNPCOnSurfaceLocationGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FNPCOnSurfaceLocationsEntry>                 LocationsEntries;                                        // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCOnDespawnVOEntry
	 * Size -> 0x000C
	 */
	struct FNPCOnDespawnVOEntry
	{
	public:
		ENPCOnSurfaceDespawnReason                                 DespawnReason;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GIQM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                VOGroupName;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCReactionVOEntry
	 * Size -> 0x0058
	 */
	struct FNPCReactionVOEntry
	{
	public:
		TAssetPtr<class UClass>                                    ActorToReactTo;                                          // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_XWB0[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                VOGroupName;                                             // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   VOCooldown;                                              // 0x0028(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.NPCReactionDualActorVOEntry
	 * Size -> 0x0078
	 */
	struct FNPCReactionDualActorVOEntry
	{
	public:
		TAssetPtr<class UClass>                                    Actor1ToReactTo;                                         // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_EJYR[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UClass>                                    Actor2ToReactTo;                                         // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_T7X7[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                VOGroupName;                                             // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   VOCooldown;                                              // 0x0048(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceStateInfo
	 * Size -> 0x00D8
	 */
	struct FNPCOnSurfaceStateInfo
	{
	public:
		class FName                                                StateName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                LocationGroupName;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PeriodicallyChangeLocation;                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ChangeLocationEvenIfPlayerIsNearby;                      // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DLBZ[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   ChangeLocationTime;                                      // 0x0018(0x0030) Edit
		bool                                                       HideWhenInDanger;                                        // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_93Z2[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InternalWaterWarningDepth;                               // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                InternalWaterWarningVOGroupName;                         // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   InternalWaterWarningVOCooldown;                          // 0x0058(0x0030) Edit
		bool                                                       UseCannons;                                              // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DespawnIfNoCrewOnShip;                                   // 0x0089(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0YTG[0x2];                                   // 0x008A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AppearVOGroupName;                                       // 0x008C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8OJH[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNPCOnDespawnVOEntry>                        DespawnVOGroupEntries;                                   // 0x0098(0x0010) Edit, ZeroConstructor
		TArray<struct FNPCReactionVOEntry>                         OnActorDamagedReactions;                                 // 0x00A8(0x0010) Edit, ZeroConstructor
		TArray<struct FNPCReactionVOEntry>                         OnActorKilledReactions;                                  // 0x00B8(0x0010) Edit, ZeroConstructor
		TArray<struct FNPCReactionDualActorVOEntry>                OnActorSpawnedActorReactions;                            // 0x00C8(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceVOEntry
	 * Size -> 0x0010
	 */
	struct FNPCOnSurfaceVOEntry
	{
	public:
		class USceneDialogueData*                                  DialogueData;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         VOEvent;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCOnSurfaceVOGroup
	 * Size -> 0x0018
	 */
	struct FNPCOnSurfaceVOGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FNPCOnSurfaceVOEntry>                        VOEntries;                                               // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.OpenableItemMaterialAnimationReactionComponentAnimationNameAndSfxCueSet
	 * Size -> 0x0040
	 */
	struct FOpenableItemMaterialAnimationReactionComponentAnimationNameAndSfxCueSet
	{
	public:
		class FName                                                Open;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                OpeningFirstTime;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OpeningFirstTimeSfx;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Opening;                                                 // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OpeningSfx;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Closing;                                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         ClosingSfx;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Closed;                                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OpenableItemMeshAnimationReactionComponentAnimationNameAndSfxCueSet
	 * Size -> 0x0040
	 */
	struct FOpenableItemMeshAnimationReactionComponentAnimationNameAndSfxCueSet
	{
	public:
		class FName                                                Open;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                OpeningFirstTime;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OpeningFirstTimeSfx;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Opening;                                                 // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OpeningSfx;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Closing;                                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         ClosingSfx;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Closed;                                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingZoneParameters
	 * Size -> 0x0020
	 */
	struct FLightingZoneParameters
	{
	public:
		int32_t                                                    PriorityLayer;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TargetLightingIndex;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OuterRadius;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InnerRadius;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsUnderwaterZone;                                        // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Is3DLightingZone;                                        // 0x0015(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HMR3[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OuterCylinderHalfHeight;                                 // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InnerCylinderHalfHeight;                                 // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClueSiteTypeToMarkId
	 * Size -> 0x0010
	 */
	struct FClueSiteTypeToMarkId
	{
	public:
		class UClass*                                              ClueSiteType;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              MapMarkId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TradeRouteMapTextData
	 * Size -> 0x0078
	 */
	struct FTradeRouteMapTextData
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_HUGF[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETradeRouteMapTextIdentifier                               TextId;                                                  // 0x0038(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YUOC[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTreasureMapWidgetText                              TextLayout;                                              // 0x003C(0x0038) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_6J5F[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TradeRouteMapTextLayout
	 * Size -> 0x0010
	 */
	struct FTradeRouteMapTextLayout
	{
	public:
		TArray<struct FTradeRouteMapTextData>                      TextFields;                                              // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.EntitlementAllowance
	 * Size -> 0x0028
	 */
	struct FEntitlementAllowance
	{
	public:
		TAssetPtr<class UClass>                                    Entitlement;                                             // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_YQLR[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    AllowedNumber;                                           // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WH9S[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementBundle
	 * Size -> 0x0030
	 */
	struct FEntitlementBundle
	{
	public:
		bool                                                       IsCommodity;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6BJI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              BundleKey;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FGuid                                               BundleOfferId;                                           // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		TArray<class UClass*>                                      BundleContents;                                          // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.EntitlementMapEntry
	 * Size -> 0x0018
	 */
	struct FEntitlementMapEntry
	{
	public:
		class FName                                                Identifier;                                              // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringClassReference                               EntitlementDesc;                                         // 0x0008(0x0010) Edit, ZeroConstructor, EditConst
	};

	/**
	 * ScriptStruct Athena.EntitlementRedirectorEntry
	 * Size -> 0x0010
	 */
	struct FEntitlementRedirectorEntry
	{
	public:
		class FName                                                DeprecatedIdentifier;                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Identifier;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FeaturedEntitlements
	 * Size -> 0x0028
	 */
	struct FFeaturedEntitlements
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               EntitlementsAsset;                                       // 0x0008(0x0010) Edit, ZeroConstructor, Config
		struct FStringAssetReference                               SupplementalEntitlementMap;                              // 0x0018(0x0010) Edit, ZeroConstructor, Config
	};

	/**
	 * ScriptStruct Athena.UnlockableEntitlementCategory
	 * Size -> 0x0018
	 */
	struct FUnlockableEntitlementCategory
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      Entitlements;                                            // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.AimSensitivitySettingParams
	 * Size -> 0x000C
	 */
	struct FAimSensitivitySettingParams
	{
	public:
		struct FFloatInterval                                      Range;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Default;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AimSensitivitySettingsEntry
	 * Size -> 0x001C
	 */
	struct FAimSensitivitySettingsEntry
	{
	public:
		EAimSensitivitySettingCategory                             SettingCategory;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CCKR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAimSensitivitySettingParams                        SettingParams_Mouse;                                     // 0x0004(0x000C) Edit
		struct FAimSensitivitySettingParams                        SettingParams_Controller;                                // 0x0010(0x000C) Edit
	};

	/**
	 * ScriptStruct Athena.AimSensitivitySettingsDefaults
	 * Size -> 0x0010
	 */
	struct FAimSensitivitySettingsDefaults
	{
	public:
		TArray<struct FAimSensitivitySettingsEntry>                Entries;                                                 // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.IndividualMeshConsumer
	 * Size -> 0x0080
	 */
	struct FIndividualMeshConsumer
	{
	public:
		unsigned char                                              UnknownData_W9KF[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                          OverrideMaterials;                                       // 0x0018(0x0010) ZeroConstructor
		TArray<class UMaterialInterface*>                          OverrideFallbackMaterials;                               // 0x0028(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_HG6K[0x48];                                  // 0x0038(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MeshRegistration
	 * Size -> 0x0058
	 */
	struct FMeshRegistration
	{
	public:
		TArray<struct FIndividualMeshConsumer>                     RegisteredComponents;                                    // 0x0000(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_7HLH[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              MeshFallbackCategory;                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UObject*                                             FallbackMeshToAssign;                                    // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_F3FZ[0x30];                                  // 0x0028(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IndividualMeshScoring
	 * Size -> 0x0018
	 */
	struct FIndividualMeshScoring
	{
	public:
		struct FGuid                                               RegistrationToken;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              MeshOwner;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeshScoring
	 * Size -> 0x0030
	 */
	struct FMeshScoring
	{
	public:
		class FName                                                MeshName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FIndividualMeshScoring>                      RegisteredComponents;                                    // 0x0008(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_I8Y1[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IndividualMeshScoringToAdd
	 * Size -> 0x0020
	 */
	struct FIndividualMeshScoringToAdd
	{
	public:
		class FName                                                MeshName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FIndividualMeshScoring                              IndividualMeshScoring;                                   // 0x0008(0x0018)
	};

	/**
	 * ScriptStruct Athena.AppearMaterialParams
	 * Size -> 0x0028
	 */
	struct FAppearMaterialParams
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         AppearCurveAsset;                                        // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         DisppearCurveAsset;                                      // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GBE1[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DynamicMaterialsList
	 * Size -> 0x0010
	 */
	struct FDynamicMaterialsList
	{
	public:
		TArray<TWeakObjectPtr<class UMaterialInstanceDynamic>>     Materials;                                               // 0x0000(0x0010) ZeroConstructor, Transient, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.MaterialAnimatorAnimationEntry
	 * Size -> 0x0018
	 */
	struct FMaterialAnimatorAnimationEntry
	{
	public:
		class FName                                                AnimationName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                NextAnimationName;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         AnimationCurve;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MaterialAnimatorGroup
	 * Size -> 0x0018
	 */
	struct FMaterialAnimatorGroup
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMaterialAnimatorAnimationEntry>             Animations;                                              // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MaterialAnimatorGroupInstance
	 * Size -> 0x0020
	 */
	struct FMaterialAnimatorGroupInstance
	{
	public:
		class FName                                                MaterialParamName;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CurrentAnimation;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                WantedAnimation;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentAnimTime;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AnimDuration;                                            // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DynamicMaterialListContainer
	 * Size -> 0x0010
	 */
	struct FDynamicMaterialListContainer
	{
	public:
		TArray<class UMaterialInstanceDynamic*>                    MaterialsList;                                           // 0x0000(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.MaterialManipulationSettings
	 * Size -> 0x0030
	 */
	struct FMaterialManipulationSettings
	{
	public:
		TArray<struct FScalarParameterValue>                       ScalarParameterValues;                                   // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<struct FTextureParameterValue>                      TextureParameterValues;                                  // 0x0010(0x0010) Edit, ZeroConstructor
		TArray<struct FVectorParameterValue>                       VectorParameterValues;                                   // 0x0020(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MeshAnimatorAnimationMeshEntry
	 * Size -> 0x0458
	 */
	struct FMeshAnimatorAnimationMeshEntry
	{
	public:
		struct FRuntimeVectorCurve                                 Position;                                                // 0x0000(0x0170) Edit
		struct FRuntimeVectorCurve                                 Rotation;                                                // 0x0170(0x0170) Edit
		bool                                                       ModifyScale;                                             // 0x02E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YOX1[0x7];                                   // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeVectorCurve                                 Scale;                                                   // 0x02E8(0x0170) Edit
	};

	/**
	 * ScriptStruct Athena.MeshAnimatorAnimationEntry
	 * Size -> 0x0020
	 */
	struct FMeshAnimatorAnimationEntry
	{
	public:
		class FName                                                AnimationName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                NextAnimationName;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMeshAnimatorAnimationMeshEntry>             PerMeshAnimations;                                       // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MeshAnimatorSyncData
	 * Size -> 0x0010
	 */
	struct FMeshAnimatorSyncData
	{
	public:
		double                                                     AnimationStartTime;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AnimationIndex;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_26JC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MeshAnimatorInstance
	 * Size -> 0x0070
	 */
	struct FMeshAnimatorInstance
	{
	public:
		unsigned char                                              UnknownData_KYE1[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMeshComponent*>                              Meshes;                                                  // 0x0060(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.ActionMappingKeyLookupFallback
	 * Size -> 0x0010
	 */
	struct FActionMappingKeyLookupFallback
	{
	public:
		class FName                                                ActionBeingLookedUp;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ActionToAlsoLookup;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VirtualActionBindingDefinition
	 * Size -> 0x0020
	 */
	struct FVirtualActionBindingDefinition
	{
	public:
		TArray<class FName>                                        ActionNames;                                             // 0x0000(0x0010) Edit, ZeroConstructor
		class FString                                              BindingName;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VirtualAxisBindingDefinition
	 * Size -> 0x0048
	 */
	struct FVirtualAxisBindingDefinition
	{
	public:
		TArray<class FName>                                        AxisNames;                                               // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<class FName>                                        CombinedAxisNamesX;                                      // 0x0010(0x0010) Edit, ZeroConstructor
		TArray<class FName>                                        CombinedAxisNamesY;                                      // 0x0020(0x0010) Edit, ZeroConstructor
		class FString                                              BindingName;                                             // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		float                                                      Scale;                                                   // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4641[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SingleStickMappingAxis
	 * Size -> 0x0018
	 */
	struct FSingleStickMappingAxis
	{
	public:
		class FString                                              BindingName;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		bool                                                       Invert;                                                  // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7ULT[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SingleStickMapping
	 * Size -> 0x0050
	 */
	struct FSingleStickMapping
	{
	public:
		TArray<struct FSingleStickMappingAxis>                     BindToLeftX;                                             // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<struct FSingleStickMappingAxis>                     BindToLeftY;                                             // 0x0010(0x0010) Edit, ZeroConstructor
		TArray<struct FSingleStickMappingAxis>                     BindToRightX;                                            // 0x0020(0x0010) Edit, ZeroConstructor
		TArray<struct FSingleStickMappingAxis>                     BindToRightY;                                            // 0x0030(0x0010) Edit, ZeroConstructor
		TArray<class FString>                                      Unbind;                                                  // 0x0040(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SingleStickMappingUserSettingsBoolean
	 * Size -> 0x000C
	 */
	struct FSingleStickMappingUserSettingsBoolean
	{
	public:
		class FName                                                SettingName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Value;                                                   // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NTMF[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SingleStickMappingUserSettingsInteger
	 * Size -> 0x000C
	 */
	struct FSingleStickMappingUserSettingsInteger
	{
	public:
		class FName                                                SettingName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Value;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SingleStickSettings
	 * Size -> 0x0020
	 */
	struct FSingleStickSettings
	{
	public:
		TArray<struct FSingleStickMappingUserSettingsBoolean>      UserSettingsBooleans;                                    // 0x0000(0x0010) Edit, ZeroConstructor
		TArray<struct FSingleStickMappingUserSettingsInteger>      UserSettingsIntegers;                                    // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ConditionalStat
	 * Size -> 0x0030
	 */
	struct FConditionalStat
	{
	public:
		struct FPlayerStat                                         Stat;                                                    // 0x0000(0x0004) Edit
		EConditionalStatType                                       StatType;                                                // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2H1F[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Range;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPlayerTrackedObjective                             TrackedObjective;                                        // 0x000C(0x0010) Edit
		ETrackedObjectiveType                                      TrackedObjectiveType;                                    // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EConditionalStatType                                       TrackedObjectiveTargetType;                              // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C87R[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStatCondition*>                              Conditions;                                              // 0x0020(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.ConditionalStatsTriggerUnit
	 * Size -> 0x0018
	 */
	struct FConditionalStatsTriggerUnit
	{
	public:
		class UClass*                                              TriggerType;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UConditionalStatsAsset*>                      ConditionalStatsAssets;                                  // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StatEvent
	 * Size -> 0x0020
	 */
	struct FStatEvent
	{
	public:
		unsigned char                                              UnknownData_8YY7[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ObjectOfInterest;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U73B[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.Locator
	 * Size -> 0x0020
	 */
	struct FLocator
	{
	public:
		EShipLocation                                              Location;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5I46[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Position;                                                // 0x0004(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FQuat                                               Rotation;                                                // 0x0010(0x0010) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CameraSpringArmPlayModeParameters
	 * Size -> 0x0008
	 */
	struct FCameraSpringArmPlayModeParameters
	{
	public:
		EPlayMode                                                  PlayMode;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CVAY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraPullbackSpeed;                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DamageableVulnerabilityPair
	 * Size -> 0x0010
	 */
	struct FDamageableVulnerabilityPair
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      DamageMultiplier;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_F24Q[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HealthRegenState
	 * Size -> 0x0008
	 */
	struct FHealthRegenState
	{
	public:
		float                                                      CurrentPoolAmount;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERegenerationState                                         State;                                                   // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BQQB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterHitReactionDamagerTypeToAnimTypePair
	 * Size -> 0x0010
	 */
	struct FCharacterHitReactionDamagerTypeToAnimTypePair
	{
	public:
		class UClass*                                              DamagerType;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_ETM3[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VisualFeedbackEntry
	 * Size -> 0x0008
	 */
	struct FVisualFeedbackEntry
	{
	public:
		class UEffectBlendObjectBase*                              Effect;                                                  // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VisualFeedbackList
	 * Size -> 0x0018
	 */
	struct FVisualFeedbackList
	{
	public:
		TArray<struct FVisualFeedbackEntry>                        Entires;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference
		float                                                      StartDelay;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TransitionTime;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ParticleSystemPicker
	 * Size -> 0x0020
	 */
	struct FParticleSystemPicker
	{
	public:
		class UParticleSystem*                                     ObserverAboveEffectAboveWater;                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ObserverBelowEffectBelowWater;                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ObserverAboveEffectBelowWater;                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UParticleSystem*                                     ObserverBelowEffectAboveWater;                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VfxSpawner
	 * Size -> 0x0090
	 */
	struct FVfxSpawner
	{
	public:
		unsigned char                                              UnknownData_TO2V[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             EmitterTemplate;                                         // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USceneComponent*                                     AttachToComponent;                                       // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USceneComponent*                                     SocketOwnerComponent;                                    // 0x0018(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             Owner;                                                   // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VZP7[0x68];                                  // 0x0028(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VfxSelectorEntry
	 * Size -> 0x0028
	 */
	struct FVfxSelectorEntry
	{
	public:
		class UObject*                                             ParticleSystem;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WiseEvent;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             WwisePoolToUse;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RTPCName;                                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RTPCValue;                                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NY5E[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VfxSelectorRange
	 * Size -> 0x0030
	 */
	struct FVfxSelectorRange
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxValue;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVfxSelectorEntry                                   EffectParams;                                            // 0x0008(0x0028) Edit
	};

	/**
	 * ScriptStruct Athena.PersistenceIdentifier
	 * Size -> 0x0018
	 */
	struct FPersistenceIdentifier
	{
	public:
		class FString                                              Identifier;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FName                                                Name;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StandardHullDragDynamicsParameters
	 * Size -> 0x0018
	 */
	struct FStandardHullDragDynamicsParameters
	{
	public:
		float                                                      ForwardDragForcePerMPS;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BackwardsDragForcePerMPS;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SidewaysDragCounterForcePerMPS;                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSailFractionToCountAsFullyUpForDragCalc;              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ForwardDragWhenBeached;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterZoneDragAmp;                                        // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StandardRudderDynamicsParameters
	 * Size -> 0x0008
	 */
	struct FStandardRudderDynamicsParameters
	{
	public:
		float                                                      SteeringBoostMultiplier;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RudderBrakeAmplitude;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StandardSailDynamicsParameters
	 * Size -> 0x000C
	 */
	struct FStandardSailDynamicsParameters
	{
	public:
		float                                                      ForceGeneratedByWindSpeedPerMPS;                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AirDragPerSailPerMPS;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PowerRatioOfSailForwardForceToFullForce;                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BowSplashProbe
	 * Size -> 0x0008 (FullSize[0x0130] - InheritedSize[0x0128])
	 */
	struct FBowSplashProbe : public FSplashProbe
	{
	public:
		EShipAlignmentType                                         ShipAlignmentType;                                       // 0x0128(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J9X3[0x7];                                   // 0x0129(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipPartCustomizationInfo
	 * Size -> 0x0018
	 */
	struct FShipPartCustomizationInfo
	{
	public:
		class FName                                                PartName;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               Customization;                                           // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipSizePartCustomizationInfo
	 * Size -> 0x0018
	 */
	struct FShipSizePartCustomizationInfo
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FShipPartCustomizationInfo>                  Customizations;                                          // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationCategorySettings
	 * Size -> 0x0020
	 */
	struct FShipCustomizationCategorySettings
	{
	public:
		class UClass*                                              ShipCustomizationCategory;                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UClass*>                                      EligibleShipSizes;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		bool                                                       IsTinSessionOnly;                                        // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YEG5[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipLiveryTextureSwap
	 * Size -> 0x0018
	 */
	struct FShipLiveryTextureSwap
	{
	public:
		class UMaterialInterface*                                  TargetMaterial;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                TargetParameterName;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTexture2D*                                          TargetTexture;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipLiveryRGBSwap
	 * Size -> 0x0020
	 */
	struct FShipLiveryRGBSwap
	{
	public:
		class UMaterialInterface*                                  TargetMaterial;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                TargetParameterName;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        TargetRGBValue;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipLivery
	 * Size -> 0x0020
	 */
	struct FShipLivery
	{
	public:
		TArray<struct FShipLiveryTextureSwap>                      LiveryTextureSwaps;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<struct FShipLiveryRGBSwap>                          LiveryRGBSwaps;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MilestoneAlignmentThreshold
	 * Size -> 0x0048
	 */
	struct FMilestoneAlignmentThreshold
	{
	public:
		class FText                                                MilestoneRequirementDescription;                         // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_3PQT[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class UClass*>                                      Entitlements;                                            // 0x0038(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.MilestoneAlignment
	 * Size -> 0x0010
	 */
	struct FMilestoneAlignment
	{
	public:
		TArray<struct FMilestoneAlignmentThreshold>                MilestoneAlignmentThresholds;                            // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainsLogPartDesc
	 * Size -> 0x0030
	 */
	struct FCaptainsLogPartDesc
	{
	public:
		struct FStringAssetReference                               BookSkeletalMesh;                                        // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    BookSkeletalMeshResourceSize;                            // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               BookStaticMesh;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		int64_t                                                    BookStaticMeshResourceSize;                              // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementPartDesc
	 * Size -> 0x0038
	 */
	struct FShipAnnouncementPartDesc
	{
	public:
		struct FStringAssetReference                               Icon;                                                    // 0x0000(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               Alignment;                                               // 0x0010(0x0010) Edit, ZeroConstructor
		EShipAnnouncementAlignment                                 AlignmentId;                                             // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QMK6[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AudioCueKey;                                             // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AllianceNotificationData
	 * Size -> 0x0010
	 */
	struct FAllianceNotificationData
	{
	public:
		EAllianceNotificationType                                  NotificationType;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AFKM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AlliancePennantData
	 * Size -> 0x0038
	 */
	struct FAlliancePennantData
	{
	public:
		struct FStringAssetReference                               PennantDesc;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<struct FAllianceNotificationData>                   PopUpNotificationDescs;                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		struct FStringAssetReference                               GenericPopupAllianceIcon;                                // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		class UTexture*                                            MapFlagIcon;                                             // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipSizePartCustomizationNameData
	 * Size -> 0x0018
	 */
	struct FShipSizePartCustomizationNameData
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class FName>                                        PartNames;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GhostPlayModeParameters
	 * Size -> 0x000C
	 */
	struct FGhostPlayModeParameters
	{
	public:
		EPlayMode                                                  PlayMode;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IEYO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationPerSecond;                                       // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DisplacementPerSecond;                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewindComponentParameters
	 * Size -> 0x0010
	 */
	struct FRewindComponentParameters
	{
	public:
		float                                                      MaxTimeSpan;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeStampModifier;                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxPredictionTimeDelta;                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxRecordPerSecond;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewindPhysicsServiceEntry
	 * Size -> 0x0030
	 */
	struct FRewindPhysicsServiceEntry
	{
	public:
		class URewindComponent*                                    Rewindable;                                              // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WAZD[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerActivityIconInfo
	 * Size -> 0x0018
	 */
	struct FPlayerActivityIconInfo
	{
	public:
		EPlayerActivityType                                        ActivityType;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G3MB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               ActivityIcon;                                            // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PlayerActivityLifetimeRule
	 * Size -> 0x000C
	 */
	struct FPlayerActivityLifetimeRule
	{
	public:
		EPlayerActivityType                                        ActivityType;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M9BN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActivityDuration;                                        // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayerActivityType                                        ActivityToEnd;                                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int8_t                                                     ActivityPriority;                                        // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4SW2[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NonVerbalPhraseData
	 * Size -> 0x0040
	 */
	struct FNonVerbalPhraseData
	{
	public:
		class FText                                                TextToBroadcast;                                         // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_06LA[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       RequiresWieldedItemObjectNameAsArgument;                 // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WieldedItemObjectNameIsNotLocalised;                     // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_E567[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NonVerbalPageData
	 * Size -> 0x0048
	 */
	struct FNonVerbalPageData
	{
	public:
		TArray<struct FNonVerbalPhraseData>                        Phrases;                                                 // 0x0000(0x0010) Edit, ZeroConstructor
		class FText                                                PageName;                                                // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_0JSA[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PhraseData
	 * Size -> 0x0040
	 */
	struct FPhraseData
	{
	public:
		class FText                                                TextToBroadcast;                                         // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_0ZX4[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       RequiresWieldedItemObjectNameAsArgument;                 // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WieldedItemObjectNameIsNotLocalised;                     // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2OA2[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RadialInstance
	 * Size -> 0x0078
	 */
	struct FRadialInstance
	{
	public:
		unsigned char                                              UnknownData_7EX3[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_G83V[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class URadialContentRule*                                  Content;                                                 // 0x0040(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialAction*                                       PrimaryAction;                                           // 0x0048(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialAction*                                       SecondaryAction;                                         // 0x0050(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialAction*                                       TertiaryAction;                                          // 0x0058(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialAction*                                       QuaternaryAction;                                        // 0x0060(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class URadialManagerInputComponent*                        InputComponent;                                          // 0x0068(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldActionsUpdateWhenContextChanges;                   // 0x0070(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       ShouldContentUpdateWhenContextChanges;                   // 0x0071(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       ShouldRadialCloseWhenWieldingNewItem;                    // 0x0072(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       ShouldRadialCloseWhenStowingWieldedItem;                 // 0x0073(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Z0RJ[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RadialRuleInstanceMapping
	 * Size -> 0x0080
	 */
	struct FRadialRuleInstanceMapping
	{
	public:
		class URadialCreationRuleAsset*                            Rule;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FRadialInstance                                     Instance;                                                // 0x0008(0x0078) Transient, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.RadialInputBindings
	 * Size -> 0x0010
	 */
	struct FRadialInputBindings
	{
	public:
		class UClass*                                              GamepadActivatedId;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              GamepadDectivatedId;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BaseRadialEntry
	 * Size -> 0x0020
	 */
	struct FBaseRadialEntry
	{
	public:
		struct FRadialInputBindings                                RadialBindings;                                          // 0x0000(0x0010) Edit, DisableEditOnInstance
		class URadialCreationRuleAsset*                            RadialCreationRule;                                      // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class URadialContextBase*                                  RadialContextBase;                                       // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InteractionInputComponentTickFunction
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FInteractionInputComponentTickFunction : public FTickFunction
	{
	public:
		class UInteractionInputComponent*                          Target;                                                  // 0x0048(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DropItemParams
	 * Size -> 0x0048
	 */
	struct FDropItemParams
	{
	public:
		TArray<TAssetPtr<class UClass>>                            AttachOnDropParentTypes;                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper
		struct FVector                                             DropItemOffset;                                          // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      MaxShallowWaterHeightToAllowItemDrop;                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          DropItemPosTestTraceChannel;                             // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T9U9[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WaterVolumeOverlapRadius;                                // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDroppedItemPitchRoll;                                 // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ItemWorldProxyCapsuleCastRadius;                         // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ItemWorldProxyCapsuleCastHeight;                         // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ItemWorldProxyCapsuleDownCastRadiusModifier;             // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LineTraceDepth;                                          // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SweepPercentageOnHit;                                    // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HitDiffTolerance;                                        // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LineTraceOffsetUpwardsFromStart;                         // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActionVisualsOverride
	 * Size -> 0x0020
	 */
	struct FActionVisualsOverride
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWieldableItemActionVisuals                         ActionVisuals;                                           // 0x0008(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.HoldToUseInput
	 * Size -> 0x0040
	 */
	struct FHoldToUseInput
	{
	public:
		class FName                                                FeatureFlag;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              StartUse;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              StopUse;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWieldableItemActionVisuals                         ActionVisuals;                                           // 0x0018(0x0018) Edit, DisableEditOnInstance
		class UHoldToUseInputVisualModifier*                       WieldableVisualModifier;                                 // 0x0030(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		bool                                                       SplitActionRules;                                        // 0x0038(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2DH4[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LightingZoneParametersAndLocation
	 * Size -> 0x002C
	 */
	struct FLightingZoneParametersAndLocation
	{
	public:
		struct FLightingZoneParameters                             LightingZoneParameters;                                  // 0x0000(0x0020) Edit, BlueprintVisible, BlueprintReadOnly
		struct FVector                                             Location;                                                // 0x0020(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RainZoneParameters
	 * Size -> 0x000C
	 */
	struct FRainZoneParameters
	{
	public:
		float                                                      OuterRadius;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InnerRadius;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Strength;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RainZoneParametersAndLocation
	 * Size -> 0x0014
	 */
	struct FRainZoneParametersAndLocation
	{
	public:
		struct FRainZoneParameters                                 RainZoneParameters;                                      // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly
		struct FVector2D                                           Location;                                                // 0x000C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipInternalWaterParams
	 * Size -> 0x0038
	 */
	struct FShipInternalWaterParams
	{
	public:
		class UCurveFloat*                                         SloshinessCurve;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWaterAmount;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWaterHeight;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CorrectiveSpeed;                                         // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxClientWaterError;                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterStartHeight;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VisibleWaterLevelSpringAccel;                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinShowAmount;                                           // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxTipAdjustmentDepth;                                   // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxTipAdjustmentRoll;                                    // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinTipAdjustmentAmount;                                  // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         FillPercentageVSMaxRollAngleCurve;                       // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MountpointParams
	 * Size -> 0x0070
	 */
	struct FMountpointParams
	{
	public:
		class UClass*                                              PreviewTrinket;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              PreviewTrinketDesc;                                      // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FTransform                                          MountpointRelativePosition;                              // 0x0010(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FVector                                             InteractionBoxExtent;                                    // 0x0040(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PSF2[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      AcceptedMountableTypes;                                  // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		float                                                      MaxNudgeAngle;                                           // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L6BD[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TrinketMetadata
	 * Size -> 0x0040
	 */
	struct FTrinketMetadata
	{
	public:
		TAssetPtr<class UClass>                                    TrinketDescription;                                      // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, EditConst, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZV4T[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UClass>                                    TrinketMountableType;                                    // 0x0020(0x001C) ELEMENT_SIZE_MISMATCH Edit, EditConst, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_2HMX[0x4];                                   // 0x003C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ReplicatedMountpointData
	 * Size -> 0x0018
	 */
	struct FReplicatedMountpointData
	{
	public:
		class UInteractableComponentWithActionRules*               InteractableComponentWithActionRules;                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CurrentTrinketClassIndex;                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_33CU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              InteractingPlayerReplicated;                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OpenTrinketBoxActionRuleVerbiage
	 * Size -> 0x0070
	 */
	struct FOpenTrinketBoxActionRuleVerbiage
	{
	public:
		class FText                                                OpenTrinketBoxVerbiage;                                  // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_A1WS[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ReplaceTrinketVerbiage;                                  // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_RF7L[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.MountTrinketActionRuleParams
	 * Size -> 0x0088
	 */
	struct FMountTrinketActionRuleParams
	{
	public:
		class UClass*                                              PressedNotificationInputId;                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              ReleasedNotificationInputId;                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      InteractionInputHoldTime;                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2LNC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOpenTrinketBoxActionRuleVerbiage                   ActionRuleVerbiage;                                      // 0x0018(0x0070) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.StraightenNudgedTrinketActionRuleParams
	 * Size -> 0x0040
	 */
	struct FStraightenNudgedTrinketActionRuleParams
	{
	public:
		class UClass*                                              StraightenNudgedTrinketNotificationInputId;              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FText                                                StraightenNudgedTrinketText;                             // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_HQ7P[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.MountpointClientState
	 * Size -> 0x0050
	 */
	struct FMountpointClientState
	{
	public:
		class USceneComponent*                                     TrinketRootComponent;                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              TrinketClassCached;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FTransform                                          TrinketRelativePivotOffset;                              // 0x0010(0x0030) IsPlainOldData, NoDestructor
		class UNudgeInterpolationParamsDataAsset*                  NudgeInterpolationParamsDataAsset;                       // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTrinketSfxDataAsset*                                SfxDataAsset;                                            // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MountpointWaterLevelParams
	 * Size -> 0x000C
	 */
	struct FMountpointWaterLevelParams
	{
	public:
		float                                                      WaterLevelDifferenceBetweenUpdates;                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ZOffsetFromWaterToDisableMountpoint;                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_25X9[0x4];                                   // 0x0008(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AttackTimingWindow
	 * Size -> 0x0008
	 */
	struct FAttackTimingWindow
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EndTime;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StunAttackerOnHitSurfacePair
	 * Size -> 0x0010
	 */
	struct FStunAttackerOnHitSurfacePair
	{
	public:
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StunDuration;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TNBZ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ImpactSurfaceData
	 * Size -> 0x0010
	 */
	struct FImpactSurfaceData
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OLQA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImpactDataAsset*                                    ImpactData;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ImpactProjectileData
	 * Size -> 0x0018
	 */
	struct FImpactProjectileData
	{
	public:
		class UClass*                                              ProjectileId;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FImpactSurfaceData>                          SurfaceList;                                             // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DeepSeaRegionData
	 * Size -> 0x001C
	 */
	struct FDeepSeaRegionData
	{
	public:
		unsigned char                                              UnknownData_A3O2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeepSeaRegionRadius;                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSwimDepth;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldUseDeepSeaSwimmingBounds;                          // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5CEC[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SwimmingBoundsRadius;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SlowDownZoneWidth;                                       // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DeepSeaRegionScreenEffects
	 * Size -> 0x0010
	 */
	struct FDeepSeaRegionScreenEffects
	{
	public:
		bool                                                       ShouldUseScreenEffects;                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_097Y[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DepthFadeEnd;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RadialFadeStart;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RadialFadeEnd;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ManagedItems
	 * Size -> 0x0010
	 */
	struct FManagedItems
	{
	public:
		TArray<class AItemProxy*>                                  Items;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CappedItemsByGroup
	 * Size -> 0x0058
	 */
	struct FCappedItemsByGroup
	{
	public:
		TMap<class UItemCapGroup*, struct FManagedItems>           ItemGroupMapping;                                        // 0x0000(0x0050) ZeroConstructor
		unsigned char                                              UnknownData_FNCQ[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemSpawnWeightedType
	 * Size -> 0x0028
	 */
	struct FItemSpawnWeightedType
	{
	public:
		class UClass*                                              Type;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InvertFeatureCheck;                                      // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KSVK[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Weight;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class USpawnRequirement*>                           Requirements;                                            // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.ItemSpawnDistribution
	 * Size -> 0x0010
	 */
	struct FItemSpawnDistribution
	{
	public:
		TArray<struct FItemSpawnWeightedType>                      WeightedList;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawnData
	 * Size -> 0x0030
	 */
	struct FWeightedItemDescSpawnData
	{
	public:
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Feature;                                                 // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InvertFeatureCheck;                                      // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NWV1[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USpawnRequirement*>                           Requirements;                                            // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
		bool                                                       CustomLifetimeManagement;                                // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q0VR[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawnDataWithRandomQuantity
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FWeightedItemDescSpawnDataWithRandomQuantity : public FWeightedItemDescSpawnData
	{
	public:
		struct FWeightedProbabilityRange                           ProbabilityRange;                                        // 0x0030(0x0020) Edit
	};

	/**
	 * ScriptStruct Athena.TaleQuestWeightedItemDescSpawnData
	 * Size -> 0x0018
	 */
	struct FTaleQuestWeightedItemDescSpawnData
	{
	public:
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LimitMaxSpawnedItems;                                    // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LCHG[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTimesCanBeSelected;                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_96MZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectSpawnDistributionParams
	 * Size -> 0x0014
	 */
	struct FBuoyantObjectSpawnDistributionParams
	{
	public:
		struct FFloatRange                                         ObjectDistanceFromSpawnCentre;                           // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      MinDistanceBetweenObjects;                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectSpawnParams
	 * Size -> 0x0048
	 */
	struct FBuoyantObjectSpawnParams
	{
	public:
		class UBuoyantObjectSpawnProfileDataAsset*                 ArenaSpawnProfile;                                       // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBuoyantObjectSpawnProfileDataAsset*                 FloatingItemsWithBarrelsOfPlentySpawnProfile;            // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBuoyantObjectSpawnProfileDataAsset*                 MerchantAllianceBarrelsOfPlentySpawnProfile;             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          HitTestTraceChannel;                                     // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_40BV[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      ExcludedShipSizes;                                       // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		struct FBuoyantObjectSpawnDistributionParams               SpawnDistributionParams;                                 // 0x0030(0x0014) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_IEM3[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectWeightedGroup
	 * Size -> 0x0030
	 */
	struct FBuoyantObjectWeightedGroup
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_37GG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRange                           NumberOfItems;                                           // 0x0008(0x0020) Edit, DisableEditOnInstance
		class UItemSpawnDistributionAsset*                         Items;                                                   // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectSpawnProfile
	 * Size -> 0x00E8
	 */
	struct FBuoyantObjectSpawnProfile
	{
	public:
		struct FWeightedProbabilityRangeOfRanges                   TravelDistanceToSpawnObjects;                            // 0x0000(0x0030) Edit, DisableEditOnInstance
		struct FWeightedProbabilityRange                           NumberOfBarrelsToSpawn;                                  // 0x0030(0x0020) Edit, DisableEditOnInstance
		struct FWeightedProbabilityRange                           NumberOfSpecialItemTypesToSpawn;                         // 0x0050(0x0020) Edit, DisableEditOnInstance
		struct FFloatRange                                         SpawnCentreDistanceInFrontOfShip;                        // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FFloatRange                                         SpawnCentreOffsetFromShipPath;                           // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FFloatRange                                         ObjectSpawnDepth;                                        // 0x0090(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FFloatRange                                         ObjectLifetime;                                          // 0x00A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      ObjectSinkingTime;                                       // 0x00B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ObjectSinkRadius;                                        // 0x00B4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinShipSpeedInKnotsToSpawnObjects;                       // 0x00B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WildlifeSpawnHeight;                                     // 0x00BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChanceOfSpawningSpecialItems;                            // 0x00C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ADRR[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              WildlifeType;                                            // 0x00C8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              BarrelType;                                              // 0x00D0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FBuoyantObjectWeightedGroup>                 SpecialItemTypes;                                        // 0x00D8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AthenaStreamedLevelData
	 * Size -> 0x0070
	 */
	struct FAthenaStreamedLevelData
	{
	public:
		int32_t                                                    LevelId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                PackagePath;                                             // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EIG0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ULevelStreaming*>                             Levels;                                                  // 0x0010(0x0010) ZeroConstructor
		TMap<class FString, class FName>                           LevelPaths;                                              // 0x0020(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FeatureToggledLevel
	 * Size -> 0x0018
	 */
	struct FFeatureToggledLevel
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               Level;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.FeatureToggledLevels
	 * Size -> 0x0018
	 */
	struct FFeatureToggledLevels
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FStringAssetReference>                       Levels;                                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AmmoChangeEffectParams
	 * Size -> 0x0040
	 */
	struct FAmmoChangeEffectParams
	{
	public:
		float                                                      InputRangeMin;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InputRangeMax;                                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OutputRangeMin;                                          // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OutputRangeMax;                                          // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OutputRangeThreshold;                                    // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseThresholdValueAsNewOutputRangeMax;                    // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QNLC[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         LerpSpeedCurve;                                          // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FScalarParameterValue                               ScalarParameterValue;                                    // 0x0020(0x001C) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_JGQ2[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OutOfAmmoDestructionEffects
	 * Size -> 0x0080
	 */
	struct FOutOfAmmoDestructionEffects
	{
	public:
		float                                                      DestroyDelayDuration;                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DestroyDuration;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InterpTarget;                                            // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3P9K[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         DestroyLerpCurve;                                        // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FScalarParameterValue                               ScalarParameterValue;                                    // 0x0018(0x001C) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_W6HH[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             DestroyVfx;                                              // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                VfxSocketName;                                           // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         DestroyAudioEvent;                                       // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             DestroyAudioPool;                                        // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseEmitterCreationParams                         DestroySfxParams;                                        // 0x0058(0x0028)
	};

	/**
	 * ScriptStruct Athena.EventAmmoChanged
	 * Size -> 0x0004
	 */
	struct FEventAmmoChanged
	{
	public:
		int32_t                                                    Ammo;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AmmoEffectState
	 * Size -> 0x0008
	 */
	struct FAmmoEffectState
	{
	public:
		struct FEventAmmoChanged                                   LastAmmoEvent;                                           // 0x0000(0x0004)
		bool                                                       ShouldSkipUpdates;                                       // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_73GX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientCargoRunCrewDataUnit
	 * Size -> 0x0020
	 */
	struct FClientCargoRunCrewDataUnit
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FGuid>                                       NPCPickUpPoints;                                         // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RewardDefinition
	 * Size -> 0x0040
	 */
	struct FRewardDefinition
	{
	public:
		class FName                                                RewardIdentifier;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IgnorePopUp;                                             // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QB3R[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UReward*>                                     Rewards;                                                 // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
		TArray<class UClass*>                                      PrerequisiteEntitlements;                                // 0x0028(0x0010) Edit, ZeroConstructor, UObjectWrapper
		bool                                                       AllowedFromInsecureSources;                              // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AwardToAccountAndNotJustToPirate;                        // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EmissaryExempt;                                          // 0x003A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LA3K[0x5];                                   // 0x003B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedRewardEntry
	 * Size -> 0x0020
	 */
	struct FWeightedRewardEntry
	{
	public:
		struct FRewardId                                           Reward;                                                  // 0x0000(0x0008) Edit
		class FString                                              WeightingConfigurationKey;                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		float                                                      FallbackWeight;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y99C[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedRewardDistribution
	 * Size -> 0x0018
	 */
	struct FWeightedRewardDistribution
	{
	public:
		TArray<struct FWeightedRewardEntry>                        RewardWeightings;                                        // 0x0000(0x0010) Edit, ZeroConstructor
		unsigned char                                              UnknownData_FHK8[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedRewardTableUnit
	 * Size -> 0x0010
	 */
	struct FWeightedRewardTableUnit
	{
	public:
		class UClass*                                              Entitlement;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Value;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedRewardTable
	 * Size -> 0x0010
	 */
	struct FWeightedRewardTable
	{
	public:
		TArray<struct FWeightedRewardTableUnit>                    Rewards;                                                 // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FeatureToggledIsland
	 * Size -> 0x0010
	 */
	struct FFeatureToggledIsland
	{
	public:
		class FName                                                FeatureName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                IslandName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmergentVoyageSourceIconInfo
	 * Size -> 0x0002
	 */
	struct FEmergentVoyageSourceIconInfo
	{
	public:
		EQuestMapIcon                                              IconType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEmergentVoyageSource                                      VoyageSource;                                            // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardGroup
	 * Size -> 0x0010
	 */
	struct FRewardGroup
	{
	public:
		TArray<class UClass*>                                      Rewards;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.RewardGroupList
	 * Size -> 0x0018
	 */
	struct FRewardGroupList
	{
	public:
		int32_t                                                    NumRewards;                                              // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8MYF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRewardGroup>                                RewardGroups;                                            // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PerChapterRankRewardEntry
	 * Size -> 0x0018
	 */
	struct FPerChapterRankRewardEntry
	{
	public:
		int32_t                                                    Rank;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Payout;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FRewardGroupList>                            Rewards;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.LandmarkReaction
	 * Size -> 0x0038
	 */
	struct FLandmarkReaction
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2VOD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RelevantRadiusInMetres;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<ERiddleActions>                                     ActionsThatTriggerThisReaction;                          // 0x0008(0x0010) Edit, ZeroConstructor
		class UWwiseEvent*                                         GateCompletedAudioCue;                                   // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         GateCompletedMusicCue;                                   // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FLandmarkReactionKeyFrame>                   Events;                                                  // 0x0028(0x0010) Edit, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.LandmarkTreasureLocationEntry
	 * Size -> 0x0020
	 */
	struct FLandmarkTreasureLocationEntry
	{
	public:
		class FString                                              LandmarkName;                                            // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash
		TArray<struct FVector>                                     Locations;                                               // 0x0010(0x0010) Edit, ZeroConstructor, EditConst
	};

	/**
	 * ScriptStruct Athena.Encounter
	 * Size -> 0x0030
	 */
	struct FEncounter
	{
	public:
		class AActor*                                              EncounterActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3RG9[0x28];                                  // 0x0008(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EncounterListenerData
	 * Size -> 0x0040
	 */
	struct FEncounterListenerData
	{
	public:
		TArray<EEncounterListenerType>                             EncounterListenerTypes;                                  // 0x0000(0x0010) ZeroConstructor
		TArray<class AActor*>                                      EncounterListenerActors;                                 // 0x0010(0x0010) ZeroConstructor
		TArray<struct FVector>                                     EncounterListenerLocations;                              // 0x0020(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_AS5B[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCDialogOverrideTypeWithConditionalsUnit
	 * Size -> 0x0018
	 */
	struct FNPCDialogOverrideTypeWithConditionalsUnit
	{
	public:
		class UClass*                                              OverrideType;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UNPCDialogConditional*>                       Conditionals;                                            // 0x0008(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.SceneDialogueStructure
	 * Size -> 0x0078
	 */
	struct FSceneDialogueStructure
	{
	public:
		class FText                                                LocalisableName;                                         // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_TJG6[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Text;                                                    // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_R056[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ENPCChatType                                               ChatType;                                                // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K52W[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayAfter;                                              // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetTextWithScaledWidthBackground
	 * Size -> 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
	 */
	struct FTreasureMapWidgetTextWithScaledWidthBackground : public FTreasureMapWidgetText
	{
	public:
		struct FTreasureMapWidgetTexture                           Background;                                              // 0x0038(0x0028) Edit, BlueprintVisible
		float                                                      MaxTextWidthForDefaultTextureScale;                      // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinScaleModifier;                                        // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxScaleModifier;                                        // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z7C4[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BountyMapLayoutTarget
	 * Size -> 0x0098
	 */
	struct FBountyMapLayoutTarget
	{
	public:
		struct FTreasureMapWidgetTextWithScaledWidthBackground     Name;                                                    // 0x0000(0x0070) Edit, BlueprintVisible
		struct FTreasureMapWidgetTexture                           MugShot;                                                 // 0x0070(0x0028) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.UserSettingsMapMarkDefinition
	 * Size -> 0x0048
	 */
	struct FUserSettingsMapMarkDefinition
	{
	public:
		class UClass*                                              MarkId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TAssetPtr<class UTexture>                                  DefaultTexture;                                          // 0x0008(0x001C) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_6UG2[0x4];                                   // 0x0024(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TAssetPtr<class UTexture>                                  HighContrastTexture;                                     // 0x0028(0x001C) ELEMENT_SIZE_MISMATCH Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_2GV5[0x4];                                   // 0x0044(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.FeedStruct
	 * Size -> 0x0010
	 */
	struct FFeedStruct
	{
	public:
		class AActor*                                              ActorToFeed;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       WantRules;                                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KZTL[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationTurningStructure
	 * Size -> 0x0010
	 */
	struct FFaunaAnimationTurningStructure
	{
	public:
		class UAnimSequence*                                       TurnLeft;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TurnRight;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationStartledStructure
	 * Size -> 0x0018
	 */
	struct FFaunaAnimationStartledStructure
	{
	public:
		class UAnimSequence*                                       StartledLowAgitation;                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StartledHighAgitation;                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StartledOneShot;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationPigStarvingStructure
	 * Size -> 0x0030
	 */
	struct FFaunaAnimationPigStarvingStructure
	{
	public:
		class UAnimSequence*                                       StarveIn;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StarveLoop;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StarveOut;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StarveDeath;                                             // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StarveStartledLow;                                       // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       StarveStartledHigh;                                      // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationEatingStructure
	 * Size -> 0x0010
	 */
	struct FFaunaAnimationEatingStructure
	{
	public:
		class UAnimSequence*                                       EatingNormal;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       EatingStarving;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationSnakeBiteStructure
	 * Size -> 0x0020
	 */
	struct FFaunaAnimationSnakeBiteStructure
	{
	public:
		class UAnimSequence*                                       BiteStanceIn;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BiteStanceOut;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BiteStanceLoopIdle;                                      // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       BiteStanceAttack;                                        // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationSnakeCharmStructure
	 * Size -> 0x0018
	 */
	struct FFaunaAnimationSnakeCharmStructure
	{
	public:
		class UAnimSequence*                                       CharmIn;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CharmLoop;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CharmOut;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationSnakeAttack
	 * Size -> 0x0058
	 */
	struct FFaunaAnimationSnakeAttack
	{
	public:
		struct FFaunaAnimationSnakeBiteStructure                   BiteForwards;                                            // 0x0000(0x0020) Edit, BlueprintVisible
		struct FFaunaAnimationSnakeBiteStructure                   BiteBackwards;                                           // 0x0020(0x0020) Edit, BlueprintVisible
		struct FFaunaAnimationSnakeCharmStructure                  Charm;                                                   // 0x0040(0x0018) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationBaseStructure
	 * Size -> 0x0120
	 */
	struct FFaunaAnimationBaseStructure
	{
	public:
		TArray<class UAnimSequence*>                               Idle;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               Locomotion;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FFaunaAnimationTurningStructure                     Turning;                                                 // 0x0020(0x0010) Edit, BlueprintVisible
		struct FFaunaAnimationStartledStructure                    Startled;                                                // 0x0030(0x0018) Edit, BlueprintVisible
		TArray<class UBlendSpace1D*>                               Impact;                                                  // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               DyingLoop;                                               // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               Death;                                                   // 0x0068(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               Special;                                                 // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FFaunaAnimationPigStarvingStructure                 PigStarving;                                             // 0x0088(0x0030) Edit, BlueprintVisible
		struct FFaunaAnimationEatingStructure                      Eating;                                                  // 0x00B8(0x0010) Edit, BlueprintVisible
		struct FFaunaAnimationSnakeAttack                          SnakeAttack;                                             // 0x00C8(0x0058) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationLocationStructure
	 * Size -> 0x0360
	 */
	struct FFaunaAnimationLocationStructure
	{
	public:
		struct FFaunaAnimationBaseStructure                        OnLand;                                                  // 0x0000(0x0120) Edit, BlueprintVisible
		struct FFaunaAnimationBaseStructure                        OnSea;                                                   // 0x0120(0x0120) Edit, BlueprintVisible
		struct FFaunaAnimationBaseStructure                        Underwater;                                              // 0x0240(0x0120) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationStructure
	 * Size -> 0x06C0
	 */
	struct FFaunaAnimationStructure
	{
	public:
		struct FFaunaAnimationLocationStructure                    FreeRange;                                               // 0x0000(0x0360) Edit, BlueprintVisible
		struct FFaunaAnimationLocationStructure                    Caged;                                                   // 0x0360(0x0360) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationCurrentPlayingAnimations
	 * Size -> 0x0060
	 */
	struct FFaunaAnimationCurrentPlayingAnimations
	{
	public:
		class UBlendSpace1D*                                       LandLocomotionA;                                         // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       LandLocomotionB;                                         // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SeaLocomotionA;                                          // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SeaLocomotionB;                                          // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       UnderwaterLocomotionA;                                   // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       UnderwaterLocomotionB;                                   // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LandIdleA;                                               // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LandIdleB;                                               // 0x0038(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SeaIdleA;                                                // 0x0040(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       SeaIdleB;                                                // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       UnderwaterIdleA;                                         // 0x0050(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       UnderwaterIdleB;                                         // 0x0058(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantMapLayoutItem
	 * Size -> 0x0060
	 */
	struct FMerchantMapLayoutItem
	{
	public:
		struct FTreasureMapWidgetText                              Name;                                                    // 0x0000(0x0038) Edit, BlueprintVisible
		struct FTreasureMapWidgetTexture                           IconImage;                                               // 0x0038(0x0028) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AllowedItemsBasedOnFeature
	 * Size -> 0x0010
	 */
	struct FAllowedItemsBasedOnFeature
	{
	public:
		class FName                                                FeatureName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UContainerAllowedItemsDataAsset*                     AllowedItems;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerBackingStore
	 * Size -> 0x0040
	 */
	struct FStorageContainerBackingStore
	{
	public:
		TArray<struct FAllowedItemsBasedOnFeature>                 AllowedItems;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, RepSkip
		int32_t                                                    MaxCapacityPerNode;                                      // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumNodes;                                             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxCapacityTotal;                                        // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1FES[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStorageContainerNode>                       ContainerNodes;                                          // 0x0020(0x0010) ZeroConstructor
		bool                                                       AllowedItemsAreCached;                                   // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DBCW[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UContainerAllowedItemsDataAsset*                     CachedAllowedItems;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerWeightedItemListEntry
	 * Size -> 0x0010
	 */
	struct FStorageContainerWeightedItemListEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_X4SL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemDesc;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerWeightedItemListFeatureGroup
	 * Size -> 0x0018
	 */
	struct FStorageContainerWeightedItemListFeatureGroup
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FStorageContainerWeightedItemListEntry>      Entries;                                                 // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StorageContainerWeightedItemListEntryList
	 * Size -> 0x0018
	 */
	struct FStorageContainerWeightedItemListEntryList
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DQWI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStorageContainerWeightedItemListEntry>      Entries;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.StorageContainerContentSpawnerEntry
	 * Size -> 0x0040
	 */
	struct FStorageContainerContentSpawnerEntry
	{
	public:
		class UClass*                                              ItemDesc;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UStorageContainerSpawnerItemListBase*                ItemList;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRangeOfRanges                   AmountToStock;                                           // 0x0010(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.TypedStorageContainerContentTypeSelectorEntry
	 * Size -> 0x0018
	 */
	struct FTypedStorageContainerContentTypeSelectorEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinimumUses;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaximumUses;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_A85Z[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ContentSpawnerType;                                      // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerContentTypeSelectorEntry
	 * Size -> 0x0018
	 */
	struct FStorageContainerContentTypeSelectorEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MinimumUses;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaximumUses;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XM9R[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStorageContainerContentSpawner*                     ContentSpawner;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpawnerTypeMapping
	 * Size -> 0x0010
	 */
	struct FSpawnerTypeMapping
	{
	public:
		class UClass*                                              Type;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UStorageContainerContentSpawner*                     Spawner;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpawnerTypeMappings
	 * Size -> 0x0010
	 */
	struct FSpawnerTypeMappings
	{
	public:
		TArray<struct FSpawnerTypeMapping>                         Mappings;                                                // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CategoryTypeMapEntry
	 * Size -> 0x0020
	 */
	struct FCategoryTypeMapEntry
	{
	public:
		class FString                                              Type;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		TArray<class UClass*>                                      Categories;                                              // 0x0010(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.VaultKeyMapping
	 * Size -> 0x0010
	 */
	struct FVaultKeyMapping
	{
	public:
		class UClass*                                              VaultKey;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              VaultMedallion;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LockData
	 * Size -> 0x0570
	 */
	struct FLockData
	{
	public:
		bool                                                       UnlockBySpecificKey;                                     // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FJQK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              RequiredKey;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FTransform                                          KeyMeshTargetTransform;                                  // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor
		bool                                                       StartLocked;                                             // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FQYA[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HandToLockLerpDuration;                                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LocalPredictionTimeout;                                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UnlockAudioCueTriggerTime;                               // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         UnlockAudioCue;                                          // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         CrewOnlyUnlockMusic;                                     // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             SfxPool;                                                 // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NQBT[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransformBlendCurve                                UnlockAnimationLerp;                                     // 0x0070(0x0500) Edit
	};

	/**
	 * ScriptStruct Athena.VaultLock
	 * Size -> 0x0590
	 */
	struct FVaultLock
	{
	public:
		int32_t                                                    Tier;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FSQP[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLockData                                           VaultLock;                                               // 0x0010(0x0570) Edit
		class UStaticMeshMemoryConstraintComponent*                MeshComponent;                                           // 0x0580(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U3WE[0x8];                                   // 0x0588(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LockState
	 * Size -> 0x0630
	 */
	struct FLockState
	{
	public:
		struct FLockData                                           LockData;                                                // 0x0000(0x0570)
		bool                                                       Locked;                                                  // 0x0570(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4IVX[0x7];                                   // 0x0571(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              RequiredKey;                                             // 0x0578(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AItemInfo*                                           KeyItem;                                                 // 0x0580(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMeshMemoryConstraintComponent*                TargetKeyMesh;                                           // 0x0588(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UnlockBySpecificKey;                                     // 0x0590(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QB65[0x7];                                   // 0x0591(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemInfo*                                           RequiredSpecificKey;                                     // 0x0598(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class ULockComponent*                                      OwnerLockComponent;                                      // 0x05A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentAnimationSequenceTime;                            // 0x05A8(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		bool                                                       IsInUnlockingSequence;                                   // 0x05AC(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor
		ELockAnimationState                                        AnimationSequenceState;                                  // 0x05AD(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HL6T[0x2];                                   // 0x05AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInterpolatingItem*                                  InterpolatingItem;                                       // 0x05B0(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		class AActor*                                              UnlockingInteractor;                                     // 0x05B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ANRW[0x70];                                  // 0x05C0(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedGoldReward
	 * Size -> 0x000C
	 */
	struct FWeightedGoldReward
	{
	public:
		struct FRewardId                                           RewardId;                                                // 0x0000(0x0008) Edit
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawnDataAssetWithWeight
	 * Size -> 0x0018
	 */
	struct FWeightedItemDescSpawnDataAssetWithWeight
	{
	public:
		class UWeightedItemDescSpawnDataAsset*                     WeightedItemSpawnDataAsset;                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       LimitMaxSpawnedItems;                                    // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_L76K[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTimesCanBeSelected;                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PRTY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawnDataAssetsWithWeights
	 * Size -> 0x0010
	 */
	struct FWeightedItemDescSpawnDataAssetsWithWeights
	{
	public:
		TArray<struct FWeightedItemDescSpawnDataAssetWithWeight>   WeightedItemSpawnDatas;                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CollectorsChestItemSlotDefinition
	 * Size -> 0x0040
	 */
	struct FCollectorsChestItemSlotDefinition
	{
	public:
		TArray<TAssetPtr<class UClass>>                            TargetObjectTypes;                                       // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
		struct FTransform                                          RelativeTransform;                                       // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ItemSnapshot
	 * Size -> 0x0038
	 */
	struct FItemSnapshot
	{
	public:
		unsigned char                                              UnknownData_62XF[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemInfo*                                           ProtectedItemInfo;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               ItemDesc;                                                // 0x0018(0x0010) ZeroConstructor
		struct FGuid                                               Id;                                                      // 0x0028(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CollectorsChestStoredItemInfo
	 * Size -> 0x0058
	 */
	struct FCollectorsChestStoredItemInfo
	{
	public:
		class AItemInfo*                                           ItemInfo;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TWeakObjectPtr<class USceneComponent>                      SourceAttachParent;                                      // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper
		class FName                                                SourceAttachSocket;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    ItemStoreTimestamp;                                      // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FItemSnapshot                                       StoredItemSnapshot;                                      // 0x0020(0x0038)
	};

	/**
	 * ScriptStruct Athena.GoldInContainerData
	 * Size -> 0x0028
	 */
	struct FGoldInContainerData
	{
	public:
		struct FRewardId                                           RewardIdentifier;                                        // 0x0000(0x0008) Edit, DisableEditOnInstance
		struct FVector                                             Position;                                                // 0x0008(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FVector                                             Scale;                                                   // 0x0014(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class UStaticMesh*                                         GoldMesh;                                                // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MarkerVariantDesc
	 * Size -> 0x0038
	 */
	struct FMarkerVariantDesc
	{
	public:
		class UClass*                                              Variant;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              MarkerType;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       UseActorMarker;                                          // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NKZQ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               MarkerVfx;                                               // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringClassReference                               MarkerClass;                                             // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ClientMarkerRepresentation
	 * Size -> 0x0010
	 */
	struct FClientMarkerRepresentation
	{
	public:
		class UBaseWorldMarker*                                    MarkerPtr;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             MarkerVisualObjectPtr;                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LocationBootyStorage
	 * Size -> 0x0030
	 */
	struct FLocationBootyStorage
	{
	public:
		unsigned char                                              IslandHash;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XU6U[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IslandName;                                              // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
		struct FVector                                             IslandLocation;                                          // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor
		TArray<struct FItemSnapshot>                               StoredTreasure;                                          // 0x0018(0x0010) ZeroConstructor, RepSkip
		unsigned char                                              StoredTreasureCount;                                     // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VNMS[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewBootyStorage
	 * Size -> 0x0020
	 */
	struct FCrewBootyStorage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FLocationBootyStorage>                       CrewStorage;                                             // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CampfireDamageLightingChance
	 * Size -> 0x0010
	 */
	struct FCampfireDamageLightingChance
	{
	public:
		class UClass*                                              DamageType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      Chance;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6R7O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StateChangeCoordination
	 * Size -> 0x0010
	 */
	struct FStateChangeCoordination
	{
	public:
		class ACoordinatedCutsceneTrigger*                         OtherCutscene;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECutsceneActivatonState                                    OtherCutsceneStateChangeCondition;                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECutsceneActivatonState                                    CutsceneStateChangeResponse;                             // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CE8Z[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CutsceneTriggerEditorOnlyData
	 * Size -> 0x0003
	 */
	struct FCutsceneTriggerEditorOnlyData
	{
	public:
		bool                                                       AlwaysShowCutsceneName;                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AlwaysShowShapeComponentOutlines;                        // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       PrintStateChangesToScreen;                               // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CutsceneAnimationElement
	 * Size -> 0x0018
	 */
	struct FCutsceneAnimationElement
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAnimSequenceBase*>                           OneShotSequences;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CutscenePool
	 * Size -> 0x0040
	 */
	struct FCutscenePool
	{
	public:
		class FName                                                CutsceneName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Priority;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActivationChance;                                        // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldQueue;                                             // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_U66Z[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AdditionalPoolCooldown;                                  // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCutscenePoolType*                                   PoolType;                                                // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		TArray<class USceneDialogueData*>                          DialogueData;                                            // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<float>                                              CutsceneLengths;                                         // 0x0030(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CutsceneGroup
	 * Size -> 0x0018
	 */
	struct FCutsceneGroup
	{
	public:
		float                                                      GroupCooldown;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AUC6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCutscenePool>                               Pools;                                                   // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.CutsceneResponseData
	 * Size -> 0x0008
	 */
	struct FCutsceneResponseData
	{
	public:
		class FName                                                CutsceneName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PeriodicResponse
	 * Size -> 0x0030
	 */
	struct FPeriodicResponse
	{
	public:
		struct FFloatRange                                         PeriodRange;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		class UObject*                                             Owner;                                                   // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OX24[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PossessableSequence
	 * Size -> 0x0018
	 */
	struct FPossessableSequence
	{
	public:
		class AActor*                                              ActorToPossess;                                          // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              TrackNameToPossess;                                      // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CutScenePlayData
	 * Size -> 0x0038
	 */
	struct FCutScenePlayData
	{
	public:
		int32_t                                                    PlayIndex;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XKEW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     StartTimeInSeconds;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USceneDialogueData*                                  DialogueData;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FText>                                        LocalisableNames;                                        // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<struct FPossessableSequence>                        PossessableSequences;                                    // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CutSceneLoadData
	 * Size -> 0x0018
	 */
	struct FCutSceneLoadData
	{
	public:
		struct FStringAssetReference                               SequenceToPlayAssetReference;                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
		class AActor*                                              SpawnablesParent;                                        // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NamedPointsCollectionGroup
	 * Size -> 0x0028
	 */
	struct FNamedPointsCollectionGroup
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FOrientedPoint>                              GroupPoints;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<ENamedPointGroupSearchTag>                          GroupTags;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyMeshVoteIndicator
	 * Size -> 0x0010
	 */
	struct FCompanyMeshVoteIndicator
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UStaticMeshComponent*                                Mesh;                                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StaticMeshVoteIndicator
	 * Size -> 0x0018
	 */
	struct FStaticMeshVoteIndicator
	{
	public:
		int32_t                                                    VoteId;                                                  // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PVXR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCompanyMeshVoteIndicator>                   CompanyMeshes;                                           // 0x0008(0x0010) ZeroConstructor, Transient, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.InlineVotingParameterSet
	 * Size -> 0x0018
	 */
	struct FInlineVotingParameterSet
	{
	public:
		float                                                      HoldTime;                                                // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_P1HC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVoteConsumerInlineBase*                             Consumer;                                                // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
		class UVoteValidatorInlineBase*                            Validator;                                               // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeaRock
	 * Size -> 0x000C
	 */
	struct FSeaRock
	{
	public:
		struct FVector2D                                           Location;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastDesc
	 * Size -> 0x0040
	 */
	struct FMastDesc
	{
	public:
		class UStaticMesh*                                         MastUnbrokenMesh;                                        // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastMainYardMesh;                                        // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastTopYardMesh;                                         // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastTopgallantYardMesh;                                  // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastPennantMesh;                                         // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaterialInterface*                                  MastPennantMaterial;                                     // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastSecondaryPennantMesh;                                // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         MastCrowsNestMesh;                                       // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RammableDamageEntry
	 * Size -> 0x0018
	 */
	struct FRammableDamageEntry
	{
	public:
		class UClass*                                              RammerType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageAmount;                                            // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RAVL[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RammableDamageSpeedEntry
	 * Size -> 0x0018
	 */
	struct FRammableDamageSpeedEntry
	{
	public:
		class UClass*                                              SpeedBand;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FRammableDamageEntry>                        DamageRammerTypes;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.SittingActionStateParams
	 * Size -> 0x0088 (FullSize[0x00A0] - InheritedSize[0x0018])
	 */
	struct FSittingActionStateParams : public FControlObjectActionStateParams
	{
	public:
		EControllableObjectType                                    ControllableObjectType;                                  // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4UOM[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              SeatAnimationId;                                         // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FLookAtOffsetParams                                 LookAtOffsetParams;                                      // 0x0028(0x001C) Edit, BlueprintVisible, BlueprintReadOnly
		bool                                                       ShouldHideFirstPersonMesh;                               // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BLXZ[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         OnSitSfx;                                                // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OnStandSfx;                                              // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             SeatPool;                                                // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AllowInteractWithOtherObjectsWhileSitting;               // 0x0060(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1D6H[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      AllowedInteractableTypes;                                // 0x0068(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		TArray<class UClass*>                                      AllowedInteractionNotificationInputIds;                  // 0x0078(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
		ESittingActionStateDockingMode                             DockingMode;                                             // 0x0088(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableDisengageInput;                                   // 0x0089(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ThirdPersonCameraEnabled;                                // 0x008A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZPVC[0x5];                                   // 0x008B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAthenaSpringArmComponentParams*                     ThirdPersonCameraParams;                                 // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CameraRollEnabled;                                       // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       OffsetCameraUsingSeatRotation;                           // 0x0099(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IVZN[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActiveCampaignInfo
	 * Size -> 0x0018
	 */
	struct FActiveCampaignInfo
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    ActiveFromTicks;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    ActiveUntilTicks;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HitRegTrailData
	 * Size -> 0x0050
	 */
	struct FHitRegTrailData
	{
	public:
		TArray<struct FVector>                                     Trail;                                                   // 0x0000(0x0010) ZeroConstructor
		float                                                      DistanceBeforeGravity;                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       GravityActivated;                                        // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HitSomething;                                            // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BZF3[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             GravityStartPoint;                                       // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             ImpactPoint;                                             // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class UPrimitiveComponent*                                 ImpactedComponent;                                       // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ImpactedActorName;                                       // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    ImpactedActorNetId;                                      // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8Z1A[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HitRegCapsuleTargetData
	 * Size -> 0x0040
	 */
	struct FHitRegCapsuleTargetData
	{
	public:
		int32_t                                                    CapsuleOwnerId;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1KJL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              OwnerName;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             Center;                                                  // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      HalfHeight;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Radius;                                                  // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_91AI[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               Rotation;                                                // 0x0030(0x0010) IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ReplicatedRewindBufferEntry
	 * Size -> 0x0020
	 */
	struct FReplicatedRewindBufferEntry
	{
	public:
		double                                                     Time;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Translation;                                             // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ReplicatedRewindBuffer
	 * Size -> 0x0010
	 */
	struct FReplicatedRewindBuffer
	{
	public:
		TArray<struct FReplicatedRewindBufferEntry>                Entries;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.HitRegRewindSnapshot
	 * Size -> 0x0038
	 */
	struct FHitRegRewindSnapshot
	{
	public:
		int32_t                                                    CapsuleOwnerId;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KSMN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              OwnerName;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      HalfHeight;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Radius;                                                  // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeStampModifier;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZXVV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReplicatedRewindBuffer                             RewindBuffer;                                            // 0x0028(0x0010)
	};

	/**
	 * ScriptStruct Athena.HitRegProjectileAttackData
	 * Size -> 0x00C0
	 */
	struct FHitRegProjectileAttackData
	{
	public:
		bool                                                       HasValidData;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5DK3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              AttackingCharacterActor;                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHitRegShotType                                            ShotType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2SW8[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     FireTime;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             AimDirection;                                            // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             AimPosition;                                             // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_K6I4[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          WeaponMeshTransform;                                     // 0x0040(0x0030) IsPlainOldData, NoDestructor
		class UObject*                                             WeaponMesh;                                              // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FHitRegTrailData>                            ProjectileTrails;                                        // 0x0078(0x0010) ZeroConstructor, ContainsInstancedReference
		TArray<struct FHitRegCapsuleTargetData>                    PossibleCapsuleTargets;                                  // 0x0088(0x0010) ZeroConstructor
		TArray<struct FHitRegRewindSnapshot>                       RewindSnapshots;                                         // 0x0098(0x0010) ZeroConstructor
		double                                                     RewoundTime;                                             // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     PreCorrectionRewoundTime;                                // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MNPD[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HitRegProjectileSnapshotData
	 * Size -> 0x0180
	 */
	struct FHitRegProjectileSnapshotData
	{
	public:
		struct FHitRegProjectileAttackData                         AttackerClientData;                                      // 0x0000(0x00C0) ContainsInstancedReference
		struct FHitRegProjectileAttackData                         ServerData;                                              // 0x00C0(0x00C0) ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.HitRegSnapshotDisplaySettings
	 * Size -> 0x0006
	 */
	struct FHitRegSnapshotDisplaySettings
	{
	public:
		bool                                                       DisplaySnapshot;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisplayAttackingClientData;                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisplayServerData;                                       // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowDetailedExplanations;                                // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowPreCorrectedCapsules;                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowFullRewindData;                                      // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.MeshVertexData
	 * Size -> 0x0020
	 */
	struct FMeshVertexData
	{
	public:
		unsigned char                                              UnknownData_FNAL[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StormStrengthType
	 * Size -> 0x0008
	 */
	struct FStormStrengthType
	{
	public:
		float                                                      Strength;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Chance;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RomeBeaconVelocityMap
	 * Size -> 0x0008
	 */
	struct FRomeBeaconVelocityMap
	{
	public:
		ERomeBeaconAttachType                                      AttachType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L00S[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AssociatedMaxVelocity;                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmblemDefinitionActiveDuration
	 * Size -> 0x0018
	 */
	struct FEmblemDefinitionActiveDuration
	{
	public:
		bool                                                       HasActiveDuration;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OB43[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActiveFrom;                                              // 0x0008(0x0008) Edit, ZeroConstructor
		struct FDateTime                                           ActiveUntil;                                             // 0x0010(0x0008) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmblemCriteria
	 * Size -> 0x0018
	 */
	struct FEmblemCriteria
	{
	public:
		struct FPlayerStat                                         PlayerStat;                                              // 0x0000(0x0004) Edit
		unsigned char                                              UnknownData_L2DZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Threshold;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayerStatsOperator                                       Operator;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LR18[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemRankDefinition
	 * Size -> 0x0050
	 */
	struct FEmblemRankDefinition
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FStringAssetReference                               ImagePath;                                               // 0x0010(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               LockedImagePath;                                         // 0x0020(0x0010) Edit, ZeroConstructor
		TArray<struct FEmblemCriteria>                             UnlockCriteria;                                          // 0x0030(0x0010) Edit, ZeroConstructor
		struct FRewardId                                           RewardId;                                                // 0x0040(0x0008) Edit
		uint32_t                                                   UnlockAtNumCriteriaCompleted;                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6NIW[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemSetDefinition
	 * Size -> 0x00E8
	 */
	struct FEmblemSetDefinition
	{
	public:
		class FString                                              FriendlyName;                                            // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FText                                                Title;                                                   // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_BKNI[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Description;                                             // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_64X9[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                CompletedDescription;                                    // 0x0080(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_2B3Z[0x20];                                  // 0x0098(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      ValueArgScalar;                                          // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WOHO[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEmblemRankDefinition>                       Emblems;                                                 // 0x00C0(0x0010) Edit, ZeroConstructor
		class UPopUpMessageDesc*                                   UnlockPopUp;                                             // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpAudioDesc*                                     UnlockPopUpAudioOverrides;                               // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       GrantsTitleAfterLastUnlock;                              // 0x00E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Hidden;                                                  // 0x00E1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HiddenIfNoProgress;                                      // 0x00E2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NoPopUp;                                                 // 0x00E3(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N0JX[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemId
	 * Size -> 0x0018
	 */
	struct FEmblemId
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               Id;                                                      // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.MechanismMaterialOverride
	 * Size -> 0x0018
	 */
	struct FMechanismMaterialOverride
	{
	public:
		class UClass*                                              Group;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               Material;                                                // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.MechanismMaterialMapEntry
	 * Size -> 0x0010
	 */
	struct FMechanismMaterialMapEntry
	{
	public:
		TArray<struct FMechanismMaterialOverride>                  Materials;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AnimatedMaterialData
	 * Size -> 0x0040
	 */
	struct FAnimatedMaterialData
	{
	public:
		class FName                                                ParamName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendDuration;                                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KVCU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         InCurve;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         OutCurve;                                                // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UMaterialInstanceDynamic*>                    FoundMaterials;                                          // 0x0020(0x0010) ZeroConstructor
		class UCurveFloat*                                         CurrentBlendCurve;                                       // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DO1T[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MechanismCheckpoint
	 * Size -> 0x0010
	 */
	struct FMechanismCheckpoint
	{
	public:
		struct FMechanismTransformAnimationCurve                   AnimationCurve;                                          // 0x0000(0x0008) Edit, DisableEditOnInstance
		float                                                      StartDelay;                                              // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETimedDoorCheckpointState                                  ClosingState;                                            // 0x000C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MWID[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.KeySequence
	 * Size -> 0x0028
	 */
	struct FKeySequence
	{
	public:
		class UClass*                                              VaultKeyDesc;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FMechanismCheckpoint>                        ActiveToInactiveSequenceCheckpoints;                     // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FMechanismCheckpoint>                        InactiveToActiveSequenceCheckpoints;                     // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.TimedDoorLandmarkReactions
	 * Size -> 0x0010
	 */
	struct FTimedDoorLandmarkReactions
	{
	public:
		TArray<struct FLandmarkReactionKeyFrame>                   Reactions;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.TimedDoorState
	 * Size -> 0x000C
	 */
	struct FTimedDoorState
	{
	public:
		ETimedDoorState                                            State;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GBRC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    JammedLandmarkReactionIndex;                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LoweringLandmarkReactionIndex;                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MechanismFloatAnimationCurve
	 * Size -> 0x0008
	 */
	struct FMechanismFloatAnimationCurve
	{
	public:
		class UMechanismAnimationCurve_Float*                      CurveAsset;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AllowedInteractableTypes
	 * Size -> 0x0028
	 */
	struct FAllowedInteractableTypes
	{
	public:
		TAssetPtr<class UClass>                                    ActorType;                                               // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_PMB2[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FCollisionProfileName                               CollisionProfileName;                                    // 0x0020(0x0008) Edit
	};

	/**
	 * ScriptStruct Athena.MechanismMaterialAnimationContext
	 * Size -> 0x0020
	 */
	struct FMechanismMaterialAnimationContext
	{
	public:
		unsigned char                                              UnknownData_TDWU[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMeshComponent*                                      Mesh;                                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UMaterialInstanceDynamic*>                    DynamicMaterials;                                        // 0x0010(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.SpikeMechanismMaterialAnimationContext
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FSpikeMechanismMaterialAnimationContext : public FMechanismMaterialAnimationContext
	{	};

	/**
	 * ScriptStruct Athena.SwingMechanismMaterialAnimationContext
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FSwingMechanismMaterialAnimationContext : public FMechanismMaterialAnimationContext
	{	};

	/**
	 * ScriptStruct Athena.FlamethrowerStatusOverride
	 * Size -> 0x0030
	 */
	struct FFlamethrowerStatusOverride
	{
	public:
		TAssetPtr<class UClass>                                    ActorType;                                               // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_229U[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FStatus>                                     StatusesToApplyOnOverlap;                                // 0x0020(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MechanismBindingSettings
	 * Size -> 0x0068
	 */
	struct FMechanismBindingSettings
	{
	public:
		EMechanismActionActivationMode                             ActionActivationMode;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OBU7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   NumActionsToSelect;                                      // 0x0008(0x0030) Edit, DisableEditOnTemplate
		struct FWeightedProbabilityRangeOfRanges                   NumTriggersToSelect;                                     // 0x0038(0x0030) Edit, DisableEditOnTemplate
	};

	/**
	 * ScriptStruct Athena.MechanismBinding
	 * Size -> 0x00A8
	 */
	struct FMechanismBinding
	{
	public:
		TArray<class AMechanismElementProxy*>                      Actions;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate
		TArray<class AMechanismElementProxy*>                      Triggers;                                                // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate
		struct FMechanismBindingSettings                           Settings;                                                // 0x0020(0x0068) Edit, DisableEditOnTemplate
		TArray<class AMechanismElementProxy*>                      SelectedActions;                                         // 0x0088(0x0010) ZeroConstructor, Transient
		TArray<class AMechanismElementProxy*>                      SelectedTriggers;                                        // 0x0098(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.FeatureToggledMechanismGroups
	 * Size -> 0x0018
	 */
	struct FFeatureToggledMechanismGroups
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class AMechanismGroup*>                             MechanismGroups;                                         // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PressurePlateAnimationComponent
	 * Size -> 0x0010
	 */
	struct FPressurePlateAnimationComponent
	{
	public:
		class USceneComponent*                                     Component;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UTransformBlendCurveComponent*                       Curve;                                                   // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MechanismAnimationEvent_VFXParams
	 * Size -> 0x0048
	 */
	struct FMechanismAnimationEvent_VFXParams
	{
	public:
		class UParticleSystem*                                     ParticleSystem;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EVFXMechanismAnimationEventMode                            Mode;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LRT7[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MechanismVFXComponentTag;                                // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                AttachParentComponentTag;                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAttachLocation                                            AttachType;                                              // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EZNC[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LocationOffset;                                          // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            RotationOffset;                                          // 0x002C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Scale;                                                   // 0x0038(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsUnderwater;                                            // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		EVfxRegion                                                 VFXRegion;                                               // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S6Y6[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractableMechanismIslandData
	 * Size -> 0x0018
	 */
	struct FInteractableMechanismIslandData
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J2UR[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActorsOverlappingMechanismData
	 * Size -> 0x0020
	 */
	struct FActorsOverlappingMechanismData
	{
	public:
		unsigned char                                              UnknownData_GJVW[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OneShotToggleCollisionAudioParams
	 * Size -> 0x0038
	 */
	struct FOneShotToggleCollisionAudioParams
	{
	public:
		class UWwiseEvent*                                         OverlapBeginAudioEvent;                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         OverlapEndAudioEvent;                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseObjectPoolWrapper*                             OverlapEventAudioPool;                                   // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseEmitter                                       OverlapEmitter;                                          // 0x0018(0x0020) Transient
	};

	/**
	 * ScriptStruct Athena.BattleElevatorEventRoomPhase
	 * Size -> 0x0038
	 */
	struct FBattleElevatorEventRoomPhase
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsFinalPhase;                                            // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QHZ7[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NextPhaseName;                                           // 0x000C(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IRBD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UBattleElevatorEventRoomBasePolicy*>          Policies;                                                // 0x0018(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
		TArray<class UElevatorActionBase*>                         Actions;                                                 // 0x0028(0x0010) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.CurrentPhaseData
	 * Size -> 0x0040
	 */
	struct FCurrentPhaseData
	{
	public:
		struct FBattleElevatorEventRoomPhase                       CurrentPhase;                                            // 0x0000(0x0038) ContainsInstancedReference
		unsigned char                                              UnknownData_LZEE[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipwreckHullAudioData
	 * Size -> 0x0048
	 */
	struct FShipwreckHullAudioData
	{
	public:
		struct FWwiseEmitter                                       Emitter;                                                 // 0x0000(0x0020) BlueprintVisible, BlueprintReadOnly
		class UWwiseObjectPoolWrapper*                             WwiseObjectPoolWrapper;                                  // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WwiseEvent;                                              // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Name;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Offset;                                                  // 0x0038(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YQ5P[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestVariableShipwreck
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableShipwreck : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.FishSizeAndWeight
	 * Size -> 0x0008
	 */
	struct FFishSizeAndWeight
	{
	public:
		EFishSize                                                  Size;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WJO9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishSizeAndType
	 * Size -> 0x0010
	 */
	struct FFishSizeAndType
	{
	public:
		EFishSize                                                  Size;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G23N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Type;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishAnimationParams
	 * Size -> 0x0008
	 */
	struct FFishAnimationParams
	{
	public:
		EFishAnimationState                                        FishAnimationState;                                      // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_US6N[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FishLoopEndingDirection;                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishAnimationSwimmingLoopAnimations
	 * Size -> 0x0020
	 */
	struct FFishAnimationSwimmingLoopAnimations
	{
	public:
		class UAnimMontage*                                        IdleLoopEndingForwards;                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        IdleLoopEndingRight;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        IdleLoopEndingLeft;                                      // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        IdleLoopEndingBackwards;                                 // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishAnimationSwimmingLoops
	 * Size -> 0x0060
	 */
	struct FFishAnimationSwimmingLoops
	{
	public:
		struct FFishAnimationSwimmingLoopAnimations                TurnLeftLoopAnimations;                                  // 0x0000(0x0020) Edit, BlueprintVisible
		struct FFishAnimationSwimmingLoopAnimations                TurnRightLoopAnimations;                                 // 0x0020(0x0020) Edit, BlueprintVisible
		struct FFishAnimationSwimmingLoopAnimations                JumpingLoopAnimations;                                   // 0x0040(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.FishAnimationSequences
	 * Size -> 0x0088
	 */
	struct FFishAnimationSequences
	{
	public:
		struct FFishAnimationSwimmingLoops                         FishAnimationSwimmingLoops;                              // 0x0000(0x0060) Edit, BlueprintVisible
		class UAnimMontage*                                        FishAnimationOnHookFighting;                             // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        FishAnimationOnHookTired;                                // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        FishAnimationOnHookCaught;                               // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        FishAnimationOnHookCaughtIdle;                           // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimMontage*                                        FishAnimationEscaping;                                   // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishingFishSelector
	 * Size -> 0x00D8
	 */
	struct FFishingFishSelector
	{
	public:
		class UAvailableFishForSpawning*                           AvailableFish;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DD6X[0xA8];                                  // 0x0008(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UFishSpawnParamsDataAsset*>                   SelectedFishCache;                                       // 0x00B0(0x0010) ZeroConstructor
		class UObject*                                             Root;                                                    // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UFishSpawnParamsDataAsset*                           GatheredConditions;                                      // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UVoyageLocationOnlyNamedIslandListDataAsset*         GatheredIsland;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishingRodReplicatedFishState
	 * Size -> 0x0010
	 */
	struct FFishingRodReplicatedFishState
	{
	public:
		class AFishingFish*                                        FishingFish;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFishingFishState                                          FishingFishState;                                        // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FishHasEscaped;                                          // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FFYS[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FishingMiniGamePlayerInput
	 * Size -> 0x0003
	 */
	struct FFishingMiniGamePlayerInput
	{
	public:
		EFishingMiniGamePlayerInputDirection                       InputDirection;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              BattlingDirection;                                       // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsReeling;                                               // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FishingMiniGameData
	 * Size -> 0x0010
	 */
	struct FFishingMiniGameData
	{
	public:
		class UFishingMiniGameSetupDataAsset*                      SetupDataAsset;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UFishingMiniGameFishDataAsset*                       FishDataAsset;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishingMiniGame
	 * Size -> 0x0050
	 */
	struct FFishingMiniGame
	{
	public:
		struct FFishingMiniGameData                                Data;                                                    // 0x0000(0x0010)
		unsigned char                                              UnknownData_NH91[0x40];                                  // 0x0010(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DebugFishSelectionSize
	 * Size -> 0x0010
	 */
	struct FDebugFishSelectionSize
	{
	public:
		int32_t                                                    SizeIndex;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JI4W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              FishClass;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DebugFishSelectionColour
	 * Size -> 0x0018
	 */
	struct FDebugFishSelectionColour
	{
	public:
		int32_t                                                    ColourIndex;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_COLP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDebugFishSelectionSize>                     FishSizes;                                               // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DebugFishSelectionBreed
	 * Size -> 0x0020
	 */
	struct FDebugFishSelectionBreed
	{
	public:
		class FString                                              BreedName;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		TArray<struct FDebugFishSelectionColour>                   FishColours;                                             // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FishingRodForceFeedbackLevel
	 * Size -> 0x0010
	 */
	struct FFishingRodForceFeedbackLevel
	{
	public:
		float                                                      MinimumTensionFactor;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VSMC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                ForceFeedback;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FishingComedyItemInfo
	 * Size -> 0x0040
	 */
	struct FFishingComedyItemInfo
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3K4B[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemDesc;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FTransform                                          SpawnOffset;                                             // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FishBaitInfo
	 * Size -> 0x0010
	 */
	struct FFishBaitInfo
	{
	public:
		EBaitType                                                  BaitType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VL45[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              BaitItemDesc;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InstrumentHandlePairedWithActor
	 * Size -> 0x0020
	 */
	struct FInstrumentHandlePairedWithActor
	{
	public:
		class AActor*                                              InstrumentActor;                                         // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5IWV[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IslandSelectionType
	 * Size -> 0x0008
	 */
	struct FIslandSelectionType
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RegionMapIslandData
	 * Size -> 0x0024
	 */
	struct FRegionMapIslandData
	{
	public:
		struct FIslandSelectionType                                Island;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance
		bool                                                       RenderToMap;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_R37V[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RotationOffset;                                          // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           LocationOffset;                                          // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		bool                                                       Selectable;                                              // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JHW2[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumSelections;                                        // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RegionMapData
	 * Size -> 0x0048
	 */
	struct FRegionMapData
	{
	public:
		struct FVector2D                                           RegionCenter;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector2D                                           RegionMin;                                               // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector2D                                           RegionMax;                                               // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector2D                                           RegionExtents;                                           // 0x0018(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector2D                                           CenterOffset;                                            // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      DistanceScaling;                                         // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MapRotation;                                             // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      GlobalTextureScaling;                                    // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TT2B[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRegionMapIslandData>                        IslandData;                                              // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.BuryDecal
	 * Size -> 0x001C
	 */
	struct FBuryDecal
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Location;                                                // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PetRoamingAnimationStateDefinition
	 * Size -> 0x0038
	 */
	struct FPetRoamingAnimationStateDefinition
	{
	public:
		EPetMontageAnimationType                                   AnimationType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OE5K[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        MontageData;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPetAnimationCycleMontage                           CycleData;                                               // 0x0010(0x0018) Edit, BlueprintVisible
		EWieldAnimationLocation                                    CurrentWieldableLocation;                                // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldAnimationLocation                                    ResetWieldableLocation;                                  // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KXFY[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendInTime;                                             // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendOutTime;                                            // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Uninterruptable;                                         // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ResetWieldableIfInterrupted;                             // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AllowHappyReact;                                         // 0x0036(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8J6X[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationDataStructure
	 * Size -> 0x0218
	 */
	struct FPetAnimationDataStructure
	{
	public:
		struct FPetAnimationDataBeingHeld                          BeingHeld;                                               // 0x0000(0x0160) Edit, BlueprintVisible
		struct FPetAnimationDataRoaming                            Roaming;                                                 // 0x0160(0x00A0) Edit, BlueprintVisible
		class UWeightedAnimationLoadOnDemandDataAsset*             WeightedAnimationLoadOnDemandDataRoaming;                // 0x0200(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWeightedAnimationLoadOnDemandDataAsset*             WeightedAnimationLoadOnDemandDataHeld;                   // 0x0208(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWeightedAnimationLoadOnDemandDataAsset*             WeightedAnimationLoadOnDemandDataShow;                   // 0x0210(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetCustomizationPartMapping
	 * Size -> 0x0010
	 */
	struct FPetCustomizationPartMapping
	{
	public:
		struct FAIPartId                                           AppliedToPetPartId;                                      // 0x0000(0x0008) Edit, DisableEditOnInstance
		struct FAIPartId                                           CustomizationPetPartId;                                  // 0x0008(0x0008) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.LocationMapBannerParams
	 * Size -> 0x0038
	 */
	struct FLocationMapBannerParams
	{
	public:
		int32_t                                                    NumChests;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5HNM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               BannerTexture;                                           // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FVector2D                                           BannerSize;                                              // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FVector2D                                           BannerLocation;                                          // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		TArray<struct FVector2D>                                   ChestCanvasOffsets;                                      // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.TornMapTearingParams
	 * Size -> 0x0028
	 */
	struct FTornMapTearingParams
	{
	public:
		int32_t                                                    NumPieces;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4VR0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               VisibilityMask1;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               VisibilityMask2;                                         // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.PortalSpawningInfo
	 * Size -> 0x0010
	 */
	struct FPortalSpawningInfo
	{
	public:
		uint32_t                                                   ResourceId;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3KZG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APortalLocatorActor*                                 Locator;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActivePortal
	 * Size -> 0x0028
	 */
	struct FActivePortal
	{
	public:
		struct FPortalSpawningInfo                                 PortalSpawnInfo;                                         // 0x0000(0x0010)
		class ATunnelOfTheDamnedPortal*                            Portal;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WeightedTunnelCreatureDioramaType
	 * Size -> 0x0020
	 */
	struct FWeightedTunnelCreatureDioramaType
	{
	public:
		class UClass*                                              DioramaClassType;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      SelectionChance;                                         // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3OCX[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedTunnelCreatureDioramaCollection
	 * Size -> 0x0018
	 */
	struct FWeightedTunnelCreatureDioramaCollection
	{
	public:
		TArray<struct FWeightedTunnelCreatureDioramaType>          CreatureDioramas;                                        // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		float                                                      CumulativeWeight;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DI69[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelCreatureDiorama
	 * Size -> 0x0060
	 */
	struct FTunnelCreatureDiorama
	{
	public:
		struct FTransform                                          DioramaTransform;                                        // 0x0000(0x0030) Edit, IsPlainOldData, NoDestructor
		float                                                      ChanceToSpawnCreatures;                                  // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_F573[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInvasionTunnelSceneryCreatureDioramaGroup*          CreaturePool;                                            // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OverrideCreatureDioramaTypes;                            // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZIJ2[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedTunnelCreatureDioramaCollection            OverrideCreaturePool;                                    // 0x0048(0x0018) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ShipSpecificData
	 * Size -> 0x0010
	 */
	struct FShipSpecificData
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class ULevelSequence*                                      VignetteSequence;                                        // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCameraAnimation
	 * Size -> 0x0018
	 */
	struct FShipCameraAnimation
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UCameraAnim*                                         Animation;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         BlendCurve;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedShipPartParams
	 * Size -> 0x0058
	 */
	struct FTunnelOfTheDamnedShipPartParams
	{
	public:
		class UClass*                                              VoyageVotingTableType;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              CapstanType;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              WheelType;                                               // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              CannonPlayerLoadingInteractionPointType;                 // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              CannonType;                                              // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              HarpoonType;                                             // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              RowboatAttachPointType;                                  // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              MapTableType;                                            // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              RowboatType;                                             // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<class UClass*>                                      LadderTypes;                                             // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedClass
	 * Size -> 0x0020
	 */
	struct FTunnelOfTheDamnedClass
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              TunnelClass;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FVector                                             RelativeSpawnLocation;                                   // 0x0010(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TTA3[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedInstance
	 * Size -> 0x0088
	 */
	struct FTunnelOfTheDamnedInstance
	{
	public:
		unsigned char                                              UnknownData_J2OU[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, int32_t>                               AvailableTunnelArtStyles;                                // 0x0008(0x0050) ZeroConstructor, Transient
		unsigned char                                              UnknownData_VQ04[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Locator[0x10];                                           // 0x0068(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.TunnelOfTheDamnedInstance.Locator
		unsigned char                                              ActiveInstance[0x10];                                    // 0x0078(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.TunnelOfTheDamnedInstance.ActiveInstance
	};

	/**
	 * ScriptStruct Athena.TunnelLevelDefinition
	 * Size -> 0x0010
	 */
	struct FTunnelLevelDefinition
	{
	public:
		class UClass*                                              LevelId;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAthenaStreamedLevelDataAsset*                       StreamedLevelData;                                       // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceNumMapsTakenFromStoreThisDayPerCrew
	 * Size -> 0x0014
	 */
	struct FPlayerBuriedItemServiceNumMapsTakenFromStoreThisDayPerCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    NumMaps;                                                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceItemDigUpRadiusSurfaceOverride
	 * Size -> 0x0008
	 */
	struct FPlayerBuriedItemServiceItemDigUpRadiusSurfaceOverride
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3W6J[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ItemDigUpRadius;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceHaulSizeEntry
	 * Size -> 0x0040
	 */
	struct FPlayerBuriedItemServiceHaulSizeEntry
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_8LVJ[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    MinHaulSize;                                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E6IS[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceDataAssetMapStorePopulationHaul
	 * Size -> 0x0040
	 */
	struct FPlayerBuriedItemServiceDataAssetMapStorePopulationHaul
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                MapName;                                                 // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T46H[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVoyageLocationOnlyNamedIslandListDataAsset*         NamedIslands;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           NumXs;                                                   // 0x0018(0x0020) Edit
		class UWeightedItemDescSpawnDataAsset*                     WeightedItemDescSpawnDataAsset;                          // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceDataAssetMapStorePopulationSeaRegion
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceDataAssetMapStorePopulationSeaRegion
	{
	public:
		class UClass*                                              SeaId;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FPlayerBuriedItemServiceDataAssetMapStorePopulationHaul> Hauls;                                                   // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.WorldRegionMapping
	 * Size -> 0x0010
	 */
	struct FWorldRegionMapping
	{
	public:
		class UClass*                                              SeaId;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EWorldRegion                                               WorldRegion;                                             // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7NVA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerGeneratedMapDisplayData
	 * Size -> 0x0040
	 */
	struct FPlayerGeneratedMapDisplayData
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    IslandIndex;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumXs;                                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MapCreatedByPlayerNameOverrideIndex;                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               MapID;                                                   // 0x001C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HAWE[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapCreatedByPlayerName;                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortTogglerUnit
	 * Size -> 0x0020
	 */
	struct FFortTogglerUnit
	{
	public:
		unsigned char                                              UnknownData_OLIQ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIProximityPlayerTracker*                           AIProxPlayerTracker;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UAISpawner*>                                  AISpawners;                                              // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SpawnTransformToPositionMapping
	 * Size -> 0x0040
	 */
	struct FSpawnTransformToPositionMapping
	{
	public:
		struct FTransform                                          SpawnTransform;                                          // 0x0000(0x0030) Edit, IsPlainOldData, NoDestructor
		EPrisonerPosition                                          Position;                                                // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WL2C[0xF];                                   // 0x0031(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnablePrisoner
	 * Size -> 0x0010
	 */
	struct FSpawnablePrisoner
	{
	public:
		class UClass*                                              SpawnablePrisoner;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FName                                                AnimationMontageName;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PrisonerToPositionMapping
	 * Size -> 0x0018
	 */
	struct FPrisonerToPositionMapping
	{
	public:
		TArray<struct FSpawnablePrisoner>                          SpawnablePrisoners;                                      // 0x0000(0x0010) Edit, ZeroConstructor
		EPrisonerPosition                                          Position;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ASCJ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeaFortDistantLightsAssetLoader
	 * Size -> 0x0028
	 */
	struct FSeaFortDistantLightsAssetLoader
	{
	public:
		class ASeaFortsService*                                    Owner;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              LoadedDistantLightsAsset;                                // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_32AD[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeaFortDistantLightsSignal
	 * Size -> 0x0040
	 */
	struct FSeaFortDistantLightsSignal
	{
	public:
		struct FTransform                                          SeaFortIslandTransform;                                  // 0x0000(0x0030) IsPlainOldData, NoDestructor
		class FName                                                SeaFortIslandName;                                       // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldShowLights;                                        // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WKIF[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptainedCrew
	 * Size -> 0x0058
	 */
	struct FCaptainedCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ShipId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                SessionToken;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FUniqueNetIdRepl                                    CaptainUserId;                                           // 0x0028(0x0018)
		class FString                                              CaptainPirateId;                                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsFirstTimeSailingShip;                                  // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KQZJ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MapTablePersistenceModel
	 * Size -> 0x0010
	 */
	struct FMapTablePersistenceModel : public FPersistenceModel
	{
	public:
		TArray<struct FVector2D>                                   MapPins;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipInternalWaterPersistenceModel
	 * Size -> 0x0004
	 */
	struct FShipInternalWaterPersistenceModel : public FPersistenceModel
	{
	public:
		float                                                      InternalWaterLevel;                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipPersistenceModel
	 * Size -> 0x0050
	 */
	struct FShipPersistenceModel : public FPersistenceModel
	{
	public:
		TArray<struct FShipPartDamagePersistenceModel>             PartDamagePersistenceModels;                             // 0x0000(0x0010) ZeroConstructor
		struct FHullDamagePersistenceModel                         HullDamageModel;                                         // 0x0010(0x0010)
		struct FHullCharringPersistenceModel                       HullCharringModel;                                       // 0x0020(0x0018)
		struct FMapTablePersistenceModel                           MapTablePersistenceModel;                                // 0x0038(0x0010)
		struct FShipInternalWaterPersistenceModel                  InternalWaterModel;                                      // 0x0048(0x0004)
		unsigned char                                              UnknownData_ZUML[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipPartCustomizationModel
	 * Size -> 0x0008
	 */
	struct FShipPartCustomizationModel : public FPersistenceModel
	{
	public:
		class FName                                                EntitlementId;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipLoadoutCustomizationsModel
	 * Size -> 0x0010
	 */
	struct FShipLoadoutCustomizationsModel : public FPersistenceModel
	{
	public:
		TArray<struct FShipPartCustomizationModel>                 ShipPartCustomisations;                                  // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipLoadoutPersistenceModel
	 * Size -> 0x0030
	 */
	struct FShipLoadoutPersistenceModel : public FPersistenceModel
	{
	public:
		struct FShipLoadoutCustomizationsModel                     Customizations;                                          // 0x0000(0x0010)
		TArray<struct FShipVoyageModel>                            Voyages;                                                 // 0x0010(0x0010) ZeroConstructor
		struct FTrinketLoadoutModel                                Trinkets;                                                // 0x0020(0x0010)
	};

	/**
	 * ScriptStruct Athena.WieldableBookNamedWidgetTexture
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FWieldableBookNamedWidgetTexture : public FTreasureMapWidgetTexture
	{
	public:
		class FName                                                ImageKey;                                                // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWidgetVisibilityGroup                                     WidgetVisibilityGroup;                                   // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UF8P[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableBookNamedWidgetText
	 * Size -> 0x0020 (FullSize[0x0098] - InheritedSize[0x0078])
	 */
	struct FWieldableBookNamedWidgetText : public FTreasureMapWidgetLocalisedTextWithFontOverride
	{
	public:
		class FName                                                TextKey;                                                 // 0x0078(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWidgetVisibilityGroup                                     WidgetVisibilityGroup;                                   // 0x0080(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_84AC[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        TextColour;                                              // 0x0084(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		ECanvasBlendMode                                           BlendType;                                               // 0x0094(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z7W4[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableBookPageReference
	 * Size -> 0x0018
	 */
	struct FWieldableBookPageReference
	{
	public:
		struct FStringAssetReference                               PageReference;                                           // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		unsigned char                                              NumberOfPages;                                           // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AKVB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableBookMaterialHandler
	 * Size -> 0x0188
	 */
	struct FWieldableBookMaterialHandler
	{
	public:
		int32_t                                                    PageWidth;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PageHeight;                                              // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                LeftSpreadLeftPageRenderTarget;                          // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                LeftSpreadRightPageRenderTarget;                         // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                RightSpreadLeftPageRenderTarget;                         // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMaybeCompressedCanvasRenderTarget2D*                RightSpreadRightPageRenderTarget;                        // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWieldableBookPageLayout*                            LeftSpreadLeftPageContents;                              // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I6Q3[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWieldableBookPageLayout*                            LeftSpreadRightPageContents;                             // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M8CQ[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWieldableBookPageLayout*                            RightSpreadLeftPageContents;                             // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KRCH[0x10];                                  // 0x0060(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWieldableBookPageLayout*                            RightSpreadRightPageContents;                            // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PVQ6[0x110];                                 // 0x0078(0x0110) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableBookPageLayoutRepInfo
	 * Size -> 0x0028
	 */
	struct FWieldableBookPageLayoutRepInfo
	{
	public:
		TArray<struct FWieldableBookNamedWidgetTexture>            Images;                                                  // 0x0000(0x0010) ZeroConstructor
		TArray<struct FWieldableBookNamedWidgetText>               GeneralText;                                             // 0x0010(0x0010) ZeroConstructor
		EWieldableBookPageType                                     Type;                                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_H3DD[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableBookRepInfo
	 * Size -> 0x0028
	 */
	struct FWieldableBookRepInfo
	{
	public:
		int32_t                                                    LeftPageIndex;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ETSV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CurrentBookContents;                                     // 0x0008(0x0010) ZeroConstructor
		TArray<struct FWieldableBookPageLayoutRepInfo>             ProcPageList;                                            // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookAccoladeDefinition
	 * Size -> 0x0018
	 */
	struct FCaptainsLogbookAccoladeDefinition
	{
	public:
		class FString                                              ServiceGuid;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		class UTexture*                                            Image;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookAccoladeLocalisedTextDefinition
	 * Size -> 0x0048
	 */
	struct FCaptainsLogbookAccoladeLocalisedTextDefinition
	{
	public:
		class FString                                              ServiceGuid;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
		class FText                                                LocalisedText;                                           // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, DisableEditOnInstance
		unsigned char                                              UnknownData_H15O[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookIconKeyValue
	 * Size -> 0x0018
	 */
	struct FCaptainsLogbookIconKeyValue
	{
	public:
		class FName                                                ImageKey;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEventLogEntryType                                         LogEntryType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BHPA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            Image;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogCrewSessionStatsEntry
	 * Size -> 0x0024
	 */
	struct FCaptainsLogCrewSessionStatsEntry
	{
	public:
		int32_t                                                    DaysAtSea;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MilesSailed;                                             // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    GoldEarned;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    QuestsCompleted;                                         // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DaysSinceLastSunk;                                       // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FishCaught;                                              // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MetresSailed;                                            // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PreviousDaysSinceLastSunk;                               // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CaptainsPreviousBalance;                                 // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NetAccoladeModel
	 * Size -> 0x0014
	 */
	struct FNetAccoladeModel
	{
	public:
		struct FGuid                                               GoalId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    Progress;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookCrewMember
	 * Size -> 0x0048
	 */
	struct FCaptainsLogbookCrewMember
	{
	public:
		class APlayerState*                                        PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              PirateName;                                              // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    ScrambledPirateNameIndex;                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PirateTitleIndex;                                        // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              PetName;                                                 // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsCaptain;                                               // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9AM9[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNetAccoladeModel>                           CrewAccolades;                                           // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventLogParams
	 * Size -> 0x0040
	 */
	struct FEventLogParams
	{
	public:
		class FText                                                NameParam;                                               // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_SVOD[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    NumberParam;                                             // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WTSY[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewEventLogEntry
	 * Size -> 0x0050
	 */
	struct FCrewEventLogEntry
	{
	public:
		EEventLogEntryType                                         EntryType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JHPI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameTime                                           EntryTime;                                               // 0x0008(0x0008)
		struct FEventLogParams                                     Params;                                                  // 0x0010(0x0040)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookServiceCache
	 * Size -> 0x00B0
	 */
	struct FCaptainsLogbookServiceCache
	{
	public:
		class FString                                              ShipName;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FText                                                ScrambledShipName;                                       // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_CFG6[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    ShipTitleIndex;                                          // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FCaptainsLogCrewSessionStatsEntry                   StatsEntry;                                              // 0x004C(0x0024) BlueprintVisible, BlueprintReadOnly
		TArray<struct FCaptainsLogbookCrewMember>                  CrewMembers;                                             // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		EShipType                                                  ShipType;                                                // 0x0080(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NMG6[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNetAccoladeModel>                           ShipAccolades;                                           // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<struct FCrewEventLogEntry>                          CrewEventLog;                                            // 0x0098(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		bool                                                       IsValid;                                                 // 0x00A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SFUG[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLogDefinition
	 * Size -> 0x0040
	 */
	struct FEventLogDefinition
	{
	public:
		class FText                                                LogEntryText;                                            // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_JSF7[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EEventLogEntryType                                         Type;                                                    // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Q3WK[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AccoladeProgressId
	 * Size -> 0x0024
	 */
	struct FAccoladeProgressId
	{
	public:
		struct FGuid                                               GoalId;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0010(0x0010) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor
		int32_t                                                    CycleIndex;                                              // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladeModel
	 * Size -> 0x0040
	 */
	struct FAccoladeModel
	{
	public:
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0000(0x0024)
		unsigned char                                              UnknownData_Z4EZ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    MilestoneLevel;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    CurrentProgress;                                         // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    Threshold;                                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AlignmentModel
	 * Size -> 0x0018
	 */
	struct FAlignmentModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int64_t                                                    MilestoneSum;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladeProgressModel
	 * Size -> 0x0020
	 */
	struct FAccoladeProgressModel
	{
	public:
		TArray<struct FAlignmentModel>                             Alignments;                                              // 0x0000(0x0010) ZeroConstructor
		TArray<struct FAccoladeModel>                              Accolades;                                               // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainsLogPinnedAccoladeEntries
	 * Size -> 0x0030
	 */
	struct FCaptainsLogPinnedAccoladeEntries
	{
	public:
		TArray<struct FAccoladeModel>                              Accolades;                                               // 0x0000(0x0010) ZeroConstructor
		struct FAccoladeProgressModel                              CachedProgress;                                          // 0x0010(0x0020)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogServiceEntry
	 * Size -> 0x0160
	 */
	struct FCaptainsLogServiceEntry
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FCaptainsLogbookServiceCache                        Cache;                                                   // 0x0010(0x00B0)
		struct FCaptainsLogPinnedAccoladeEntries                   PinnedShipAccolades;                                     // 0x00C0(0x0030)
		TMap<class APlayerState*, struct FCaptainsLogPinnedAccoladeEntries> PinnedPlayerAccolades;                                   // 0x00F0(0x0050) ZeroConstructor
		struct FPartDesc                                           CustomizationPartDesc;                                   // 0x0140(0x0020)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogItemInfoRarityEntry
	 * Size -> 0x00C0
	 */
	struct FCaptainsLogItemInfoRarityEntry
	{
	public:
		int32_t                                                    DaysAtSea;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Rarity;                                                  // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IA1U[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBootyItemStats                                     HandInStats;                                             // 0x0010(0x0090) Edit, DisableEditOnInstance
		struct FCompanyBootyStatList                               CompanySpecificStats;                                    // 0x00A0(0x0010) Edit, DisableEditOnInstance
		TArray<struct FCompanySpecificBootyReward>                 CompanySpecificHandInRewardIds;                          // 0x00B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.SwimmingCreatureAIStrategyMovementProperties
	 * Size -> 0x0030
	 */
	struct FSwimmingCreatureAIStrategyMovementProperties
	{
	public:
		class UClass*                                              AIStrategy;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		ESwimRotationMode                                          SwimRotationMode;                                        // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2396[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationRate;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CorrectingMaxSpeed;                                      // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CorrectingYawTurnRate;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxAbsPitch;                                             // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSpeed;                                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VelocitySmoothingFactor;                                 // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TrackedActorVelocityScaling;                             // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TrackedActorVelocityScalingSmoothingFactor;              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RUZS[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SwimmingCreatureMovementReplicatedData
	 * Size -> 0x0030
	 */
	struct FSwimmingCreatureMovementReplicatedData
	{
	public:
		struct FVector                                             CurrentServerGoalLocation;                               // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotationUpdateResult                               CurrentServerRotationData;                               // 0x000C(0x0018)
		float                                                      CurrentServerMaxSpeed;                                   // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentServerVelocitySmoothingFactor;                    // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CurrentServerIsSharkArcCorrectionTurn;                   // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9PRL[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SwimmingCreatureImpactAnimData
	 * Size -> 0x0010
	 */
	struct FSwimmingCreatureImpactAnimData
	{
	public:
		class UAnimSequenceBase*                                   ImpactAnim;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDamageRange;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDamageRange;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AIStrategySpeedOverride
	 * Size -> 0x0010
	 */
	struct FAIStrategySpeedOverride
	{
	public:
		class UClass*                                              Strategy;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      Speed;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NIYM[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCBeckonGestureEntry
	 * Size -> 0x0018
	 */
	struct FNPCBeckonGestureEntry
	{
	public:
		EBeckonGesture                                             BeckonGesture;                                           // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5V9X[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               BeckonGestureDataAsset;                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.NPCBeckonGroupEntry
	 * Size -> 0x0018
	 */
	struct FNPCBeckonGroupEntry
	{
	public:
		EBeckonNPCGroup                                            NPCGroup;                                                // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XR2V[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNPCBeckonGestureEntry>                      NPCBeckonGestures;                                       // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.FeatureToggledBeckonTag
	 * Size -> 0x000C
	 */
	struct FFeatureToggledBeckonTag
	{
	public:
		struct FBeckonTag                                          BeckonTag;                                               // 0x0000(0x0002) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_L1VU[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FeatureToggle;                                           // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GhostShipRewardData
	 * Size -> 0x0038
	 */
	struct FGhostShipRewardData
	{
	public:
		class UWeightedItemDescSpawnDataAsset*                     Rewards;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWeightedProbabilityRange                           NumberOfItemsToSpawn;                                    // 0x0008(0x0020) Edit, DisableEditOnInstance
		TArray<struct FTransform>                                  SpawnTransforms;                                         // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipRewardData
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipRewardData
	{
	public:
		TArray<struct FGhostShipRewardData>                        Rewards;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		float                                                      SpawnRate;                                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UYIX[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipSplineDataVariables
	 * Size -> 0x0038
	 */
	struct FAggressiveGhostShipSplineDataVariables
	{
	public:
		double                                                     StartTime;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     StartTimeOffset;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<float>                                              SplineOffsets;                                           // 0x0010(0x0010) ZeroConstructor
		struct FVector                                             CentrePoint;                                             // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      StartAngleOffset;                                        // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ReverseDirection;                                        // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NG7T[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipSplineDataOffsets
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipSplineDataOffsets
	{
	public:
		float                                                      FormationForwardOffsetInMetres;                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FormationForwardOffsetVarianceInMetres;                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FormationForwardOffsetVarianceSpeed;                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FormationSidewaysOffsetInMetres;                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FormationSidewaysOffsetVarianceInMetres;                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FormationSidewaysOffsetVarianceSpeed;                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipSplineData
	 * Size -> 0x0050
	 */
	struct FAggressiveGhostShipSplineData
	{
	public:
		struct FAggressiveGhostShipSplineDataVariables             Variables;                                               // 0x0000(0x0038)
		struct FAggressiveGhostShipSplineDataOffsets               Offsets;                                                 // 0x0038(0x0018)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipState
	 * Size -> 0x0008
	 */
	struct FAggressiveGhostShipState
	{
	public:
		bool                                                       IsShipVisible;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsShipDead;                                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZZRB[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShipSpeed;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpawnerData
	 * Size -> 0x0040
	 */
	struct FSpawnerData
	{
	public:
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K31Y[0x38];                                  // 0x0008(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawner
	 * Size -> 0x0058
	 */
	struct FWeightedItemDescSpawner
	{
	public:
		ESpawnedItemSource                                         SpawnSource;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_81OM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSpawnerData>                                SpawnList;                                               // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference
		TArray<TWeakObjectPtr<class AActor>>                       SpawnedItems;                                            // 0x0018(0x0010) ZeroConstructor, UObjectWrapper
		unsigned char                                              UnknownData_QT67[0x30];                                  // 0x0028(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipNameBucket
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipNameBucket
	{
	public:
		class FName                                                Key;                                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FText>                                        Names;                                                   // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostHealthToVfxLevel
	 * Size -> 0x0008
	 */
	struct FAggressiveGhostHealthToVfxLevel
	{
	public:
		int32_t                                                    NumShotsLeftToKill;                                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VfxLevel;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipLocationEntryDesc
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipLocationEntryDesc
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumShips;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAggressiveGhostShipLocationDataAsset*               Location;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterShipDesc
	 * Size -> 0x0048
	 */
	struct FAggressiveGhostShipEncounterShipDesc
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ARBQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAggressiveGhostShipDifficultyDataAsset*             Difficulty;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAggressiveGhostShipShotSelectionDataAsset*          ShotSelection;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              Ship;                                                    // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAggressiveGhostShipVisualsDataAsset*                Visuals;                                                 // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FAggressiveGhostShipLocationEntryDesc>       Locations;                                               // 0x0028(0x0010) Edit, ZeroConstructor
		TArray<struct FPlayerStat>                                 StatsToFireOnDeath;                                      // 0x0038(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterWaveFormationDesc
	 * Size -> 0x00C8
	 */
	struct FAggressiveGhostShipEncounterWaveFormationDesc
	{
	public:
		int32_t                                                    NumShipsInFormation;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EF4H[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAggressiveGhostShipEncounterShipDesc               FormationShipDesc;                                       // 0x0008(0x0048) Edit
		struct FAggressiveGhostShipEncounterShipDesc               FormationLeaderShipDesc;                                 // 0x0050(0x0048) Edit
		TArray<class UAggressiveGhostShipVisualsDataAsset*>        FormationGruntVisuals;                                   // 0x0098(0x0010) Edit, ZeroConstructor
		bool                                                       FormationLeaderIsCaptain;                                // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsBurningBlade;                                          // 0x00A9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsHellishMermaid;                                        // 0x00AA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsReaper;                                                // 0x00AB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       PreventSpawningFormationGruntsUntilNotified;             // 0x00AC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DespawnShipsInFormationWhenLeaderIsDestroyed;            // 0x00AD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		EAggressiveGhostShipSpawnDirectionType                     SpawnDirection;                                          // 0x00AE(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       SpawnShipOnTopOfPlayer;                                  // 0x00AF(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      SpawnShipOnTopOfPlayerSpawnAheadDistanceInMetres;        // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KBNQ[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAggressiveGhostShipFixedSplinesDataAsset*           FixedSpline;                                             // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DoNotDamageFormationLeaderShipBelowThisNumShots;         // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ImmuneToLightning;                                       // 0x00C4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FlipSideOffsetIfReversed;                                // 0x00C5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BI7U[0x2];                                   // 0x00C6(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterWaveDesc
	 * Size -> 0x00A0
	 */
	struct FAggressiveGhostShipEncounterWaveDesc
	{
	public:
		bool                                                       BackfillActive;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_C0MD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumGrunts;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumGruntsToKill;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1W34[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAggressiveGhostShipEncounterWaveFormationDesc> Formations;                                              // 0x0010(0x0010) Edit, ZeroConstructor
		struct FWeightedProbabilityRangeOfRanges                   SpawnDelay;                                              // 0x0020(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   TimeBetweenBackfillSpawns;                               // 0x0050(0x0030) Edit
		TArray<struct FAggressiveGhostShipEncounterShipDesc>       GruntShipDescs;                                          // 0x0080(0x0010) Edit, ZeroConstructor
		class UClass*                                              WaveMusicZoneActorClass;                                 // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EFAggressiveGhostShipEncounterWaveProgressAnnounceMusicType WaveAnnouncementType;                                    // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PreventGoingToNextWaveUntilNotified;                     // 0x0099(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Z8I6[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterFormationLocationDesc
	 * Size -> 0x0070
	 */
	struct FAggressiveGhostShipEncounterFormationLocationDesc
	{
	public:
		float                                                      ForwardOffsetInMetres;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LSFD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   ForwardOffsetVarianceInMetres;                           // 0x0008(0x0030) Edit
		float                                                      SidewaysOffsetInMetres;                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7U0Q[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   SidewaysOffsetVarianceInMetres;                          // 0x0040(0x0030) Edit
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterFormationDesc
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipEncounterFormationDesc
	{
	public:
		TArray<struct FAggressiveGhostShipEncounterFormationLocationDesc> Locations;                                               // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterFormationDescGroup
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipEncounterFormationDescGroup
	{
	public:
		int32_t                                                    NumShipsInFormation;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6ZLT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAggressiveGhostShipEncounterFormationDesc>  FormationDescs;                                          // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipFixedSpline
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipFixedSpline
	{
	public:
		float                                                      StartAngleOffset;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8PLB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              Offsets;                                                 // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipMineFormation
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipMineFormation
	{
	public:
		TArray<struct FVector2D>                                   OffsetsInMetres;                                         // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipMineFormationOptions
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipMineFormationOptions
	{
	public:
		int32_t                                                    NumMinesInFormation;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3R2G[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAggressiveGhostShipMineFormation>           Formations;                                              // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipsEncounterHeightPerIslandOffsets
	 * Size -> 0x000C
	 */
	struct FAggressiveGhostShipsEncounterHeightPerIslandOffsets
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EventSignalHeightOffset;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GameEventServiceDesc
	 * Size -> 0x0010
	 */
	struct FGameEventServiceDesc
	{
	public:
		struct FStringAssetReference                               ServiceParamsAssetPath;                                  // 0x0000(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipsEncounterServiceDesc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FAggressiveGhostShipsEncounterServiceDesc : public FGameEventServiceDesc
	{	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipDifficultyTargetSelection
	 * Size -> 0x0008
	 */
	struct FAggressiveGhostShipDifficultyTargetSelection
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAggressiveGhostShipTarget                                 Target;                                                  // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CPHK[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipDifficultyShipSizeTargetSelection
	 * Size -> 0x0018
	 */
	struct FAggressiveGhostShipDifficultyShipSizeTargetSelection
	{
	public:
		class UClass*                                              ShipSize;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FAggressiveGhostShipDifficultyTargetSelection> TargetSelection;                                         // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipShotSelection
	 * Size -> 0x0030
	 */
	struct FAggressiveGhostShipShotSelection
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HH1X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ProjectileClass;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FAggressiveGhostShipDifficultyShipSizeTargetSelection> ShipSizeTargetSelection;                                 // 0x0010(0x0010) Edit, ZeroConstructor
		TArray<struct FAggressiveGhostShipDifficultyTargetSelection> LongRangeTargetSelection;                                // 0x0020(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipVisualsMaterialOverride
	 * Size -> 0x0028
	 */
	struct FAggressiveGhostShipVisualsMaterialOverride
	{
	public:
		int32_t                                                    MaterialIndexToReplace;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7QPI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               OriginalMaterial;                                        // 0x0008(0x0010) Edit, ZeroConstructor
		struct FStringAssetReference                               ReplacementMaterial;                                     // 0x0018(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipVisualsExtraMesh
	 * Size -> 0x0030
	 */
	struct FAggressiveGhostShipVisualsExtraMesh
	{
	public:
		struct FStringAssetReference                               Mesh;                                                    // 0x0000(0x0010) Edit, ZeroConstructor
		struct FVector                                             Offset;                                                  // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P9Z1[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAggressiveGhostShipVisualsMaterialOverride> MaterialOverrides;                                       // 0x0020(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AimAssistStyleData
	 * Size -> 0x0010
	 */
	struct FAimAssistStyleData
	{
	public:
		float                                                      TargetMaxDistance;                                       // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3AY3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         TargetDistanceFromPlayerToInfluenceRadius;               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AshenLordEncounterServiceDesc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FAshenLordEncounterServiceDesc : public FGameEventServiceDesc
	{	};

	/**
	 * ScriptStruct Athena.FlamethrowerCollisionsParams
	 * Size -> 0x0068
	 */
	struct FFlamethrowerCollisionsParams
	{
	public:
		float                                                      CollisionCapsuleRadius;                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FlamePointTravelDistance;                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InheritOwnerForwardVelocityScalar;                       // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FlamePointTravelTime;                                    // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FlamePointFireRate;                                      // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceSquaredBetweenPointsBeforeDiscontinuity;      // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumOfHitsProccessedPerFlameCollision;                 // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             FlameOriginOffset;                                       // 0x001C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FRotator                                            FlameOrientationOffset;                                  // 0x0028(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_786R[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         FlamePointsTravelCurve;                                  // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          CollisionChannel;                                        // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FCollisionResponseContainer                         CollisionResponse;                                       // 0x0041(0x0020) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_E2TY[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActorInsideFlameInformation
	 * Size -> 0x0058
	 */
	struct FActorInsideFlameInformation
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              DamageableInterface[0x10];                               // 0x0008(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ActorInsideFlameInformation.DamageableInterface
		unsigned char                                              StatusEffectRecipientInterface[0x10];                    // 0x0018(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ActorInsideFlameInformation.StatusEffectRecipientInterface
		class AActor*                                              ActorWithFirePropagationInterface;                       // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SOD8[0x28];                                  // 0x0030(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AshenWindsSkullMissfireParams
	 * Size -> 0x0038
	 */
	struct FAshenWindsSkullMissfireParams
	{
	public:
		float                                                      ChargeThreshold;                                         // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FFloatRange                                         SecondsBetweenMissfires;                                 // 0x0004(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		struct FFloatRange                                         MissfireDurationInSeconds;                               // 0x0014(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_S7KP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         MissfireStartedSFX;                                      // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         MissfireStoppedSFX;                                      // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AshenWindsSkullRewardLevel
	 * Size -> 0x0020
	 */
	struct FAshenWindsSkullRewardLevel
	{
	public:
		float                                                      MaximumChargePercentage;                                 // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FRewardId                                           DefaultRewardId;                                         // 0x0004(0x0008) Edit, DisableEditOnInstance
		unsigned char                                              UnknownData_HVQR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCompanySpecificBootyReward>                 CompanyRewardIds;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AshenLordCustomEncounterSettings
	 * Size -> 0x0038
	 */
	struct FAshenLordCustomEncounterSettings
	{
	public:
		bool                                                       ShouldEncounterGiveRewardsWhenCompleted;                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MKG2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CustomDioramaCategory;                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UClass*                                              CustomAshenLordClassID;                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TAssetPtr<class UClass>                                    CustomEventSignalClass;                                  // 0x0018(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_DEHZ[0x4];                                   // 0x0034(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ChainLink
	 * Size -> 0x0028
	 */
	struct FChainLink
	{
	public:
		class AActor*                                              Source;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Target;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector_NetQuantize                                 LastSourceLocation;                                      // 0x0010(0x000C)
		struct FVector_NetQuantize                                 LastTargetLocation;                                      // 0x001C(0x000C)
	};

	/**
	 * ScriptStruct Athena.ChainData
	 * Size -> 0x0018
	 */
	struct FChainData
	{
	public:
		TArray<struct FChainLink>                                  Chain;                                                   // 0x0000(0x0010) ZeroConstructor
		float                                                      LifeTime;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KYH9[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ChainLightningParameters
	 * Size -> 0x0020
	 */
	struct FChainLightningParameters
	{
	public:
		float                                                      ChainLightningOverlapRadius;                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InitialSelectionRadiusSquared;                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    InitialNumberOfNodesSelected;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxDistanceBetweenChainsSquared;                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxNumberOfLinks;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OverrideMaxFramesBeforeReplication;                      // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NG5G[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxFramesBeforeReplicationOverride;                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChainVisualActorLifetime;                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeleeAIAbilityAngleChecker
	 * Size -> 0x0018
	 */
	struct FMeleeAIAbilityAngleChecker
	{
	public:
		unsigned char                                              PawnCharacterOrientationInterface[0x10];                 // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.MeleeAIAbilityAngleChecker.PawnCharacterOrientationInterface
		unsigned char                                              UnknownData_9KSP[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EnchantedCompassTarget
	 * Size -> 0x0018
	 */
	struct FEnchantedCompassTarget
	{
	public:
		int32_t                                                    TargetID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TargetLocation;                                          // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		TWeakObjectPtr<class AActor>                               TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ImpactLocationData
	 * Size -> 0x0010
	 */
	struct FImpactLocationData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Size;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SequenceResponseContainer
	 * Size -> 0x0010
	 */
	struct FSequenceResponseContainer
	{
	public:
		int32_t                                                    SequenceIndexToTrigger;                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J7QG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ResponseActor;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NavigationOptions
	 * Size -> 0x0010
	 */
	struct FNavigationOptions
	{
	public:
		int32_t                                                    UpKeyID;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DownKeyID;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LeftKeyID;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    RightKeyID;                                              // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RevealableSceneMapping
	 * Size -> 0x0018
	 */
	struct FRevealableSceneMapping
	{
	public:
		class UClass*                                              SceneType;                                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FLinearColor                                        MaterialTint;                                            // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementCache
	 * Size -> 0x0020
	 */
	struct FShipAnnouncementCache
	{
	public:
		unsigned char                                              UnknownData_C81N[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllowedItemsToDetermineJettisonedContainerTypePair
	 * Size -> 0x0030
	 */
	struct FAllowedItemsToDetermineJettisonedContainerTypePair
	{
	public:
		struct FStringAssetReference                               AllowedItemsAsset;                                       // 0x0000(0x0010) Edit, ZeroConstructor
		TAssetPtr<class UClass>                                    ContainerTypeToSpawn;                                    // 0x0010(0x001C) ELEMENT_SIZE_MISMATCH Edit, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_8YQ1[0x4];                                   // 0x002C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.TransientActorEntry
	 * Size -> 0x0010
	 */
	struct FTransientActorEntry
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NSO0[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenForListEntry
	 * Size -> 0x0010
	 */
	struct FOpenForListEntry
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeUntilDoorFullyOpen;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VNZ5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LaunchableProjectileData
	 * Size -> 0x00E0
	 */
	struct FLaunchableProjectileData
	{
	public:
		unsigned char                                              UnknownData_OEI6[0xE0];                                  // 0x0000(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LaunchableActiveProjectileData
	 * Size -> 0x0110
	 */
	struct FLaunchableActiveProjectileData
	{
	public:
		struct FLaunchableProjectileData                           Projectile;                                              // 0x0000(0x00E0)
		unsigned char                                              UnknownData_OKE5[0x30];                                  // 0x00E0(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeatAnimationDefinition
	 * Size -> 0x0028
	 */
	struct FSeatAnimationDefinition
	{
	public:
		class UClass*                                              AnimationID;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               Into;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FStringAssetReference                               Loop;                                                    // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.SleepingActionStateParams
	 * Size -> 0x0038 (FullSize[0x0050] - InheritedSize[0x0018])
	 */
	struct FSleepingActionStateParams : public FControlObjectActionStateParams
	{
	public:
		EControllableObjectType                                    ControllableObjectType;                                  // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4XMO[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              BedAnimationId;                                          // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      CameraFadeDuration;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TooltipDelay;                                            // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HealthRegenDelay;                                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HealthRegenTickInterval;                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HealthRegenTickAmount;                                   // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldHideFirstPersonMesh;                               // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		ESleepingActionStateDockingMode                            DockingMode;                                             // 0x003D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PNN3[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SleepingSfxDelay;                                        // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SleepingAudioStateDelay;                                 // 0x0044(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NeverFartWhileSleeping;                                  // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MA2F[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnderwaterDepthThreshold;                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationServerAnimAISpawnData
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationServerAnimAISpawnData
	{
	public:
		TAssetPtr<class UClass>                                    ObjectId;                                                // 0x0000(0x001C) ELEMENT_SIZE_MISMATCH UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_IMDT[0x4];                                   // 0x001C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      MaxSpawnAnimDurations[0x4];                              // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPersistentItemAnimations
	 * Size -> 0x00B8
	 */
	struct FAthenaAnimationPersistentItemAnimations
	{
	public:
		struct FAthenaAnimationObjectEquipAnimations               EquipAnimations;                                         // 0x0000(0x0040) Edit
		struct FAthenaAnimationObjectLocomotionAnimations          NominatedItemFallbackLocomotionAnimations;               // 0x0040(0x0040) Edit
		struct FAthenaAnimationObjectJumpingAnimations             NominatedItemFallbackJumpingAnimations;                  // 0x0080(0x0020) Edit
		struct FAthenaAnimationObjectIdleAnimations                NominatedItemFallbackIdleAnimations;                     // 0x00A0(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.FallbackSittingDataAsset
	 * Size -> 0x0018
	 */
	struct FFallbackSittingDataAsset
	{
	public:
		class UAthenaAnimationSittingDataAsset*                    SittingAnimCorrectionDataAsset;                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NormalizedWheelAngle;                                    // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinSliderRange;                                          // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSliderRange;                                          // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T2X0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NamedFirstPersonAnimatic
	 * Size -> 0x0018
	 */
	struct FNamedFirstPersonAnimatic
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               Anim;                                                    // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationItemListingMappings
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationItemListingMappings
	{
	public:
		class UClass*                                              AnimDataBodyTypeID;                                      // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UAthenaAnimationItemListingAsset*                    ItemListing;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationItemListingMappingType
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationItemListingMappingType
	{
	public:
		TArray<struct FAthenaAnimationItemListingMappings>         FirstPersonListing;                                      // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FAthenaAnimationItemListingMappings>         ThirdPersonListing;                                      // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationPulleyDataAssetEntry
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationPulleyDataAssetEntry
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Idle;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Action;                                                  // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Outof;                                                   // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWeaponData
	 * Size -> 0x0048
	 */
	struct FAthenaAnimationWeaponData
	{
	public:
		TArray<struct FAthenaAnimationObjectComplexOneShot>        ComboAttacks;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		TArray<struct FAthenaAnimationObjectComplexOneShot>        StaticComboAttacks;                                      // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		struct FAthenaAnimationObjectComplexOneShot                HeavyAttack;                                             // 0x0020(0x0028) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.ManagedVulnerabilityLayer
	 * Size -> 0x0020
	 */
	struct FManagedVulnerabilityLayer
	{
	public:
		class FName                                                LayerName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GKPZ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageableVulnerabilityLayer*                       VulnerabilityLayerToApply;                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EQX7[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAIEngageEnemyData
	 * Size -> 0x0010
	 */
	struct FAthenaAIEngageEnemyData
	{
	public:
		class UClass*                                              EngageEnemyMethod;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      BestTargetRange;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XSWP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAIItemEngageEnemyMethods
	 * Size -> 0x0018
	 */
	struct FAthenaAIItemEngageEnemyMethods
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FAthenaAIEngageEnemyData>                    EngageEnemyDataList;                                     // 0x0008(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CauseOfDeathItemSpawnDistribution
	 * Size -> 0x0018
	 */
	struct FCauseOfDeathItemSpawnDistribution
	{
	public:
		TArray<EHealthChangedReason>                               CauseOfDeath;                                            // 0x0000(0x0010) Edit, ZeroConstructor
		class UWeightedItemDescSpawnDataAsset*                     ItemSpawnDistributionAsset;                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SharkPlayerStats
	 * Size -> 0x0008
	 */
	struct FSharkPlayerStats
	{
	public:
		struct FPlayerStat                                         SharkDefeatStat;                                         // 0x0000(0x0004) Edit, DisableEditOnInstance
		struct FPlayerStat                                         SharkDefeatStatLegend;                                   // 0x0004(0x0004) Edit, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.SharkMaterialEntry
	 * Size -> 0x0018
	 */
	struct FSharkMaterialEntry
	{
	public:
		struct FStringAssetReference                               MaterialReference;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance
		bool                                                       CastShadows;                                             // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_T8WD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AirGivingVolumeData
	 * Size -> 0x0020
	 */
	struct FAirGivingVolumeData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QBJG[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Radius;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UseLineOfSight;                                          // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor
		bool                                                       CanBeUsedOutsideIslandBounds;                            // 0x001D(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G0VU[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IslandMaterialZoneStatusMapping
	 * Size -> 0x0020
	 */
	struct FIslandMaterialZoneStatusMapping
	{
	public:
		class UPhysicalMaterial*                                   SurfaceMaterial;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ActivateOnStart;                                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8JM5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStatus>                                     Status;                                                  // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ToggledSpawnerOverride
	 * Size -> 0x0010
	 */
	struct FToggledSpawnerOverride
	{
	public:
		class UAISpawner*                                          Spawner;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Toggle;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureMapData
	 * Size -> 0x0028
	 */
	struct FTreasureMapData
	{
	public:
		class UTreasureMapDataAsset*                               Map;                                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UGeneratedLocationsDataAsset*                        LocationSource;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FTreasureLocationData>                       TreasureLocations;                                       // 0x0010(0x0010) ZeroConstructor, Transient
		float                                                      RotationFromNorth;                                       // 0x0020(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LCCH[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TypedIslandItemSpawnLocationData
	 * Size -> 0x0018
	 */
	struct FTypedIslandItemSpawnLocationData
	{
	public:
		class UClass*                                              LocationType;                                            // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TArray<struct FIslandItemSpawnLocationData>                Locations;                                               // 0x0008(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.SalvageSpawnCompRequest
	 * Size -> 0x0010
	 */
	struct FSalvageSpawnCompRequest
	{
	public:
		class USalvageItemSpawnComponent*                          SalvageItemSpawnComp;                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M863[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnRequests
	 * Size -> 0x0010
	 */
	struct FSpawnRequests
	{
	public:
		TArray<struct FSalvageSpawnCompRequest>                    Requests;                                                // 0x0000(0x0010) ZeroConstructor, Transient, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.GameplayEventExclusionInfo
	 * Size -> 0x0010
	 */
	struct FGameplayEventExclusionInfo
	{
	public:
		class UClass*                                              Type;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      ExclusionRadius;                                         // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UGIC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureMapDataCaptureParams
	 * Size -> 0x0040
	 */
	struct FTreasureMapDataCaptureParams
	{
	public:
		struct FVector                                             CameraPosition;                                          // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            CameraOrientation;                                       // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             WorldSpaceCameraPosition;                                // 0x0018(0x000C) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor
		float                                                      CameraFOV;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAspect;                                            // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraOrthoWidth;                                        // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraNearClip;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraFarClip;                                           // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TextureWidth;                                            // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TextureHeight;                                           // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldMapIslandDataCaptureParams
	 * Size -> 0x0040
	 */
	struct FWorldMapIslandDataCaptureParams
	{
	public:
		struct FVector                                             CameraPosition;                                          // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            CameraOrientation;                                       // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             WorldSpaceCameraPosition;                                // 0x0018(0x000C) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor
		float                                                      CameraFOV;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraAspect;                                            // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraOrthoWidth;                                        // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraNearClip;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CameraFarClip;                                           // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TextureWidth;                                            // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TextureHeight;                                           // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AtmosphericPressureZoneParametersAndLocation
	 * Size -> 0x001C
	 */
	struct FAtmosphericPressureZoneParametersAndLocation
	{
	public:
		struct FAtmosphericPressureZoneParameters                  PressureZoneParameters;                                  // 0x0000(0x0014) Edit, BlueprintVisible, BlueprintReadOnly
		struct FVector2D                                           Location;                                                // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.GameEventSettings
	 * Size -> 0x00B0
	 */
	struct FGameEventSettings
	{
	public:
		class UClass*                                              GameEventType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      RepeatQueryTime;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InertQueryTime;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InertCancelTime;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_V7FW[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeightedProbabilityRangeOfRanges                   FirstRegenInterval;                                      // 0x0018(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   RegenInterval;                                           // 0x0048(0x0030) Edit
		struct FWeightedProbabilityRangeOfRanges                   SpawnTime;                                               // 0x0078(0x0030) Edit
		bool                                                       Required;                                                // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_11NO[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameEventCount
	 * Size -> 0x0010
	 */
	struct FGameEventCount
	{
	public:
		class UClass*                                              GameEventType;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    NumAllowed;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E7XF[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameEventWeightedList
	 * Size -> 0x0020
	 */
	struct FGameEventWeightedList
	{
	public:
		class FName                                                ServerConfigName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FGameEventCount>                             Events;                                                  // 0x0008(0x0010) Edit, ZeroConstructor
		float                                                      Weight;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XVEM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerConfiguration
	 * Size -> 0x0038
	 */
	struct FGameEventSchedulerConfiguration
	{
	public:
		class FName                                                Feature;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                ServerConfigName;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FGameEventCount>                             MainEvents;                                              // 0x0010(0x0010) Edit, ZeroConstructor
		TArray<struct FGameEventWeightedList>                      SubConfigs;                                              // 0x0020(0x0010) Edit, ZeroConstructor
		float                                                      Weight;                                                  // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QWKJ[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerStoryCustomiser
	 * Size -> 0x0010
	 */
	struct FGameEventSchedulerStoryCustomiser
	{
	public:
		class UGameEventSchedulerStoryCustomiserSettings*          StoryCustomiserSettings;                                 // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UGameEventSchedulerSettingsAsset*                    ActiveStorySettings;                                     // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerStoryCustomisationData
	 * Size -> 0x0018
	 */
	struct FGameEventSchedulerStoryCustomisationData
	{
	public:
		struct FStoryFlag                                          StoryFlag;                                               // 0x0000(0x0008) Edit
		EPlayMode                                                  PlayMode;                                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B0VH[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameEventSchedulerSettingsAsset*                    SchedulerSettings;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemConsumptionStatusChanceEntry
	 * Size -> 0x0020
	 */
	struct FItemConsumptionStatusChanceEntry
	{
	public:
		float                                                      Chance;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GJWN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatus                                             Status;                                                  // 0x0008(0x0018) Edit
	};

	/**
	 * ScriptStruct Athena.SpawnableItemCategory
	 * Size -> 0x0018
	 */
	struct FSpawnableItemCategory
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UClass*>                                      SpawnableItems;                                          // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.BuoyancyComponentSinkingParams
	 * Size -> 0x0034
	 */
	struct FBuoyancyComponentSinkingParams
	{
	public:
		float                                                      BuoyancyBlendTimeWhenSinking;                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EBuoyancyBlend                                             FloatingToSinkingBuoyancyCurveTransition;                // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DH24[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FloatingToSinkingBuoyancyCurveBlendTime;                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FinalSinkingBuoyancy;                                    // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SinkingTimeUntilDestroy;                                 // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DisappearingTime;                                        // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AutomaticSinkingEnabled;                                 // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FEHH[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatRange                                         TimeInFloatingStateBeforeSinking;                        // 0x001C(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      WaterDepthToAllowItemToSink;                             // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          WorldHitsTraceChannel;                                   // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1IYU[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BuoyancyComponentLockToSurfaceParams
	 * Size -> 0x001C
	 */
	struct FBuoyancyComponentLockToSurfaceParams
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ALSO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpringAcceleration;                                      // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EnterLockStateBlendTime;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ExitLockStateBlendTime;                                  // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChoppinessScalar;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SubmersionHint;                                          // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceFromWaterSurfaceToConsiderSurfaced;              // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuoyancyComponentExclusionParams
	 * Size -> 0x0008
	 */
	struct FBuoyancyComponentExclusionParams
	{
	public:
		float                                                      MaxDistanceCheck;                                        // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECollisionChannel                                          HitsChannel;                                             // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MTVV[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterSocketCollisionResult
	 * Size -> 0x00C0
	 */
	struct FCharacterSocketCollisionResult
	{
	public:
		bool                                                       HasHit;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1OI9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitResult;                                               // 0x0004(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, ContainsInstancedReference
		struct FVector                                             SocketVelocity;                                          // 0x0084(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FTransform                                          SocketTransform;                                         // 0x0090(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.Projectile
	 * Size -> 0x001C
	 */
	struct FProjectile
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Direction;                                               // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      MaxDistance;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SprintLogicHandler
	 * Size -> 0x0048
	 */
	struct FSprintLogicHandler
	{
	public:
		unsigned char                                              UnknownData_B0Y4[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WalkLogicHandler
	 * Size -> 0x000C
	 */
	struct FWalkLogicHandler
	{
	public:
		unsigned char                                              UnknownData_QHPF[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.JoinedCrew
	 * Size -> 0x0014
	 */
	struct FJoinedCrew
	{
	public:
		unsigned char                                              UnknownData_02Y2[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FirstInteractableTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FFirstInteractableTelemetryEvent
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FirstSpinnerShownTime;                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StartEntryLevelLoadTime;                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StartLegalSplashTime;                                    // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EndLegalSplashTime;                                      // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FirstInteractableTime;                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadingTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FLoadingTelemetryEvent
	{
	public:
		class FString                                              LoadingEvent;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              MapName;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      StartTime;                                               // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EndTime;                                                 // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OnlineAthenaGameModeConfigurationSettings
	 * Size -> 0x0018
	 */
	struct FOnlineAthenaGameModeConfigurationSettings
	{
	public:
		struct FTimespan                                           PreLoginEntitlementQueryTimeout;                         // 0x0000(0x0008) ZeroConstructor
		struct FTimespan                                           PreLoginPirateValidationTimeout;                         // 0x0008(0x0008) ZeroConstructor
		bool                                                       ConfigAllowCrossWorld;                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BWKW[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerLifetimeConfigurationSettings
	 * Size -> 0x000C
	 */
	struct FServerLifetimeConfigurationSettings
	{
	public:
		float                                                      ServerTimeToLiveSeconds;                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HeartbeatFrequencySeconds;                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxTimeToAcceptShutdownRequestSeconds;                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerTelemetryConfigurationSettings
	 * Size -> 0x0010
	 */
	struct FServerTelemetryConfigurationSettings
	{
	public:
		float                                                      PlayerHeartbeatInterval;                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TelemetryEnabled_ItemEquip;                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_ItemUsageEnd;                           // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_ItemUsageStart;                         // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_ObjectUsageEnd;                         // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_ObjectUsageStart;                       // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_PlayerAction;                           // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_PlayerChangedLoadout;                   // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_PlayerChangedShipLoadout;               // 0x000B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_PlayerHeartbeat;                        // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TelemetryEnabled_PlayerPerformedEmote;                   // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_S2CF[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FirstPersonAnimaticSettings
	 * Size -> 0x002C
	 */
	struct FFirstPersonAnimaticSettings
	{
	public:
		struct FVector                                             CutsceneFirstPersonMeshOffset;                           // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            CutsceneRotation;                                        // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      TimeBeforeFadeIn;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeInDuration;                                          // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FirstPersonMeshBoundsScale;                              // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FirstPersonAnimName;                                     // 0x0024(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FirstPersonAnimaticActionStateConstructionInfo
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	struct FFirstPersonAnimaticActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FFirstPersonAnimaticSettings                        FirstPersonAnimaticSettings;                             // 0x0030(0x002C)
		unsigned char                                              UnknownData_YALN[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterAnimaticSettings
	 * Size -> 0x0058
	 */
	struct FCharacterAnimaticSettings
	{
	public:
		unsigned char                                              UnknownData_YHGW[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NetworkEventStruct
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FNetworkEventStruct : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.UIReturnedToPlayerEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FUIReturnedToPlayerEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerKillNotification
	 * Size -> 0x0001
	 */
	struct FEventPlayerControllerKillNotification
	{
	public:
		bool                                                       PlaySfx;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerHitNotification
	 * Size -> 0x0001
	 */
	struct FEventPlayerControllerHitNotification
	{
	public:
		bool                                                       PlaySfx;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerHitNotificationOld
	 * Size -> 0x0001
	 */
	struct FEventPlayerControllerHitNotificationOld
	{
	public:
		bool                                                       PlaySfx;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventClientPlayerSpawnedBeforeGameState
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FEventClientPlayerSpawnedBeforeGameState : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.EventPlayerTeleportToSafety
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FEventPlayerTeleportToSafety : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerUnPossess
	 * Size -> 0x0008
	 */
	struct FEventPlayerControllerUnPossess
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerPossess
	 * Size -> 0x0008
	 */
	struct FEventPlayerControllerPossess
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaPlayerControllerEndingPlay
	 * Size -> 0x0008
	 */
	struct FEventAthenaPlayerControllerEndingPlay
	{
	public:
		class AAthenaPlayerController*                             Controller;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaPlayerControllerBegunPlay
	 * Size -> 0x0008
	 */
	struct FEventAthenaPlayerControllerBegunPlay
	{
	public:
		class AAthenaPlayerController*                             Controller;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerControllerDestroyedCalled
	 * Size -> 0x0008
	 */
	struct FEventPlayerControllerDestroyedCalled
	{
	public:
		class AAthenaPlayerController*                             Controller;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterHitReaction
	 * Size -> 0x0058
	 */
	struct FEventCharacterHitReaction
	{
	public:
		struct FImpactDamageEvent                                  ImpactDamage;                                            // 0x0000(0x0058)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterPuzzleVaultIncorrect
	 * Size -> 0x0001
	 */
	struct FEventPlayerCharacterPuzzleVaultIncorrect
	{
	public:
		unsigned char                                              UnknownData_6OV2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterPuzzleVaultComplete
	 * Size -> 0x0001
	 */
	struct FEventPlayerCharacterPuzzleVaultComplete
	{
	public:
		unsigned char                                              UnknownData_TUX2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterInPuzzleVaultChanged
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterInPuzzleVaultChanged
	{
	public:
		bool                                                       IsInPuzzleVault;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3NIE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CurrentWaterLevel;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventItemUseAINoiseEvent
	 * Size -> 0x000C
	 */
	struct FEventItemUseAINoiseEvent
	{
	public:
		float                                                      NoiseRange;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                NoiseTag;                                                // 0x0004(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAnimationShopInteraction
	 * Size -> 0x0010
	 */
	struct FEventAnimationShopInteraction
	{
	public:
		bool                                                       Active;                                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		EInteractionObject                                         Type;                                                    // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XUP0[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Interactor;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFaceTargetEnabled
	 * Size -> 0x0001
	 */
	struct FEventFaceTargetEnabled
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventRemoteCharacterStartedDig
	 * Size -> 0x0001
	 */
	struct FEventRemoteCharacterStartedDig
	{
	public:
		unsigned char                                              UnknownData_A8RU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRequestVomit
	 * Size -> 0x000C
	 */
	struct FEventRequestVomit
	{
	public:
		unsigned char                                              UnknownData_S3PQ[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventIsDrunk
	 * Size -> 0x0001
	 */
	struct FEventIsDrunk
	{
	public:
		bool                                                       bIsDrunk;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventFallWithDamageLegNotBroken
	 * Size -> 0x0008
	 */
	struct FEventFallWithDamageLegNotBroken
	{
	public:
		class FName                                                RumbleTag;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHealedLeg
	 * Size -> 0x0001
	 */
	struct FEventHealedLeg
	{
	public:
		unsigned char                                              UnknownData_7M25[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBrokeLeg
	 * Size -> 0x0008
	 */
	struct FEventBrokeLeg
	{
	public:
		class FName                                                RumbleTag;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerGhostShipWhiteOutStarted
	 * Size -> 0x0001
	 */
	struct FEventPlayerGhostShipWhiteOutStarted
	{
	public:
		unsigned char                                              UnknownData_MYX1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterRestarted
	 * Size -> 0x0001
	 */
	struct FEventCharacterRestarted
	{
	public:
		unsigned char                                              UnknownData_YB1Q[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterLanded
	 * Size -> 0x0084
	 */
	struct FEventCharacterLanded
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0080) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference
		float                                                      VerticalSpeed;                                           // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterJumped
	 * Size -> 0x0001
	 */
	struct FEventCharacterJumped
	{
	public:
		unsigned char                                              UnknownData_OTUB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterDestroyed
	 * Size -> 0x0001
	 */
	struct FEventCharacterDestroyed
	{
	public:
		unsigned char                                              UnknownData_MQTO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterInteraction
	 * Size -> 0x0008
	 */
	struct FEventCharacterInteraction
	{
	public:
		class UObject*                                             Interactable;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientTelemetryConfigurationSettings
	 * Size -> 0x001C
	 */
	struct FClientTelemetryConfigurationSettings
	{
	public:
		float                                                      HighMemoryPerformanceHeartbeatIntervalSeconds;           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighMemoryThresholdDurango;                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighMemoryThresholdEdmonton;                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighMemoryThresholdScorpio;                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighMemoryThresholdLockhart;                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HighMemoryThresholdAnaconda;                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PlayerAggregatePositionInterval;                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UISlatePerformanceTelemetryFragment
	 * Size -> 0x0004
	 */
	struct FUISlatePerformanceTelemetryFragment
	{
	public:
		uint32_t                                                   NumAtlasPages;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ResolutionTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FResolutionTelemetryFragment
	{
	public:
		uint32_t                                                   ResolutionWidth;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   ResolutionHeight;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ScreenPercentage;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DynamicResolution;                                       // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_C6U9[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShippingStatsTelemetryFragment
	 * Size -> 0x0018
	 */
	struct FShippingStatsTelemetryFragment
	{
	public:
		struct FJsonObjectWrapper                                  Json;                                                    // 0x0000(0x0018)
	};

	/**
	 * ScriptStruct Athena.SoundBankFailureTelemetryEntry
	 * Size -> 0x0008
	 */
	struct FSoundBankFailureTelemetryEntry
	{
	public:
		uint32_t                                                   BankID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   FailureReason;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FrameDurationDataTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FFrameDurationDataTelemetryFragment
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Max;                                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Average;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StdDeviation;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AudioDataTelemetryFragment
	 * Size -> 0x00D0
	 */
	struct FAudioDataTelemetryFragment
	{
	public:
		uint32_t                                                   WwiseDefaultPoolMemoryUsage;                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   WwiseTotalMemoryUsage;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   APUHeapFreeBytes;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   WwiseTotalMediaMemoryUsage;                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   TritonMemoryUsage;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int8_t                                                     WwiseKWeightedOutput;                                    // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C4A7[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   OutputClippingCount;                                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int8_t                                                     NonUIBusKWeightedOutput;                                 // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G0H2[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           WwiseStateGroups;                                        // 0x0020(0x0010) ZeroConstructor
		TArray<uint32_t>                                           WwiseStateValues;                                        // 0x0030(0x0010) ZeroConstructor
		TArray<uint32_t>                                           PeakProxyCountsPools;                                    // 0x0040(0x0010) ZeroConstructor
		TArray<uint32_t>                                           PeakProxyCounts;                                         // 0x0050(0x0010) ZeroConstructor
		TArray<uint32_t>                                           StreamFindFailedIDs;                                     // 0x0060(0x0010) ZeroConstructor
		TArray<uint32_t>                                           StreamOpenFailedIDs;                                     // 0x0070(0x0010) ZeroConstructor
		TArray<uint32_t>                                           StreamReadFailedIDs;                                     // 0x0080(0x0010) ZeroConstructor
		TArray<struct FSoundBankFailureTelemetryEntry>             FailedToLoadBankIDs;                                     // 0x0090(0x0010) ZeroConstructor
		uint32_t                                                   FailedPostEventCount;                                    // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   IODeviceMemUsage;                                        // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PeakIOBytesRead;                                         // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AverageIOBytesPerSecondRead;                             // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FFrameDurationDataTelemetryFragment                 FrameKickoffTimesInMs;                                   // 0x00B0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FFrameDurationDataTelemetryFragment                 UpdateDurationsInMs;                                     // 0x00C0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FrameTypeTelemetryFragment
	 * Size -> 0x0018
	 */
	struct FFrameTypeTelemetryFragment
	{
	public:
		uint64_t                                                   NumLoadingScreenFrames;                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumFullyOccludedFrames;                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumFullScreenUIFrames;                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RefreshRateTelemetryFragment
	 * Size -> 0x0008
	 */
	struct FRefreshRateTelemetryFragment
	{
	public:
		bool                                                       Supports120Hz;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OLSQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   RefreshRate;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HDRTelemetryFragment
	 * Size -> 0x0001
	 */
	struct FHDRTelemetryFragment
	{
	public:
		bool                                                       HDR;                                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.UIFrameDurationDataTelemetryFragment
	 * Size -> 0x000C
	 */
	struct FUIFrameDurationDataTelemetryFragment
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Max;                                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Average;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GarbageCollectionFrametimeTelemetryFragment
	 * Size -> 0x0018
	 */
	struct FGarbageCollectionFrametimeTelemetryFragment
	{
	public:
		TArray<float>                                              GCFrametimesMs;                                          // 0x0000(0x0010) ZeroConstructor
		float                                                      MaxGCFrametimeMs;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5T2B[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HitchDataTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FHitchDataTelemetryFragment
	{
	public:
		uint64_t                                                   NumLowSeverityHitches;                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumMediumSeverityHitches;                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumHighSeverityHitches;                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumHighestSeverityHitches;                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StutterDataTelemetryFragment
	 * Size -> 0x000C
	 */
	struct FStutterDataTelemetryFragment
	{
	public:
		float                                                      StutterFramePercentage;                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StutterFrameDeltaMax;                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      StutterFrameDeltaAverage;                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerNetworkDataTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FServerNetworkDataTelemetryFragment
	{
	public:
		struct FPacketDiscardStats                                 DiscardedPackets;                                        // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.TelemetryFragmentInput
	 * Size -> 0x0000
	 */
	struct FTelemetryFragmentInput
	{	};

	/**
	 * ScriptStruct Athena.NetworkDataTelemetryFragmentInput
	 * Size -> 0x0028
	 */
	struct FNetworkDataTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		uint64_t                                                   AvgRttMilliseconds;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgOutBytesPerSecond;                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgInBytesPerSecond;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgOutVoiceBytesPerSecond;                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgInVoiceBytesPerSecond;                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NetworkDataTelemetryFragment
	 * Size -> 0x0028
	 */
	struct FNetworkDataTelemetryFragment
	{
	public:
		uint64_t                                                   AvgRttMilliseconds;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgOutBytesPerSecond;                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgInBytesPerSecond;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgOutVoiceBytesPerSecond;                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   AvgInVoiceBytesPerSecond;                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PerformanceTelemetryFragmentInput
	 * Size -> 0x0018
	 */
	struct FPerformanceTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_LNDD[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_OUQ8[0x17];                                  // 0x0001(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MemoryTableData
	 * Size -> 0x0018
	 */
	struct FMemoryTableData
	{
	public:
		uint64_t                                                   BlockSize;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumActivePools;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   PeakActivePools;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MemoryDataTelemetryFragment
	 * Size -> 0x0170
	 */
	struct FMemoryDataTelemetryFragment
	{
	public:
		uint64_t                                                   MemAvailPhyAvg;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyMin;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyMax;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirAvg;                                          // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirMin;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirMax;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyAvg;                                           // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyMin;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyMax;                                           // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirAvg;                                           // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirMin;                                           // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirMax;                                           // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyUIAvg;                                        // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyUIMin;                                        // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyUIMax;                                        // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirUIAvg;                                        // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirUIMin;                                        // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirUIMax;                                        // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyUIAvg;                                         // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyUIMin;                                         // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyUIMax;                                         // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirUIAvg;                                         // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirUIMin;                                         // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirUIMax;                                         // 0x00B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedMallocCurrent;                                    // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedMallocPeak;                                       // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FMemoryTableData>                            TableInfo;                                               // 0x00D0(0x0010) ZeroConstructor
		uint64_t                                                   NumLargeAllocations;                                     // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   PeakLargeAllocations;                                    // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedCachedPagesCurrent;                               // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedCachedPagesPeak;                                  // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedAsyncLoadingRegularMax;                           // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedAsyncLoadingOverflowMax;                          // 0x0108(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedAsyncLoadingExtraOverflowMax;                     // 0x0110(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    HighMemoryThresholdPercentage;                           // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I4DY[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   MemUsedTexturePoolAvg;                                   // 0x0120(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedTexturePoolMin;                                   // 0x0128(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedTexturePoolMax;                                   // 0x0130(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedTextureUnstreamedAvg;                             // 0x0138(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedTextureUnstreamedMin;                             // 0x0140(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedTextureUnstreamedMax;                             // 0x0148(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedRenderTargetAvg;                                  // 0x0150(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedRenderTargetMin;                                  // 0x0158(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedRenderTargetMax;                                  // 0x0160(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   NumActiveUObjects;                                       // 0x0168(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapIslandData
	 * Size -> 0x0060
	 */
	struct FCanvasWorldMapIslandData
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible
		unsigned char                                              UnknownData_PYK8[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UTexture*                                            IslandTex;                                               // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FBox2D                                              Bounds;                                                  // 0x0040(0x0014) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Rotation;                                                // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LabelOffset;                                             // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EUVB[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CanvasWorldMapWorldData
	 * Size -> 0x0020
	 */
	struct FCanvasWorldMapWorldData
	{
	public:
		struct FVector2D                                           Min;                                                     // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           Max;                                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FCanvasWorldMapIslandData>                   Islands;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoyageProposalDescViewModel
	 * Size -> 0x0018 (FullSize[0x00E0] - InheritedSize[0x00C8])
	 */
	struct FVoyageProposalDescViewModel : public FVoyageDisplayInformation
	{
	public:
		class FString                                              ProposalDesc;                                            // 0x00C8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		EVoyageDisplayState                                        State;                                                   // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0RU8[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VoyageIndex;                                             // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUpdateIslandEventToggle
	 * Size -> 0x001C
	 */
	struct FEventUpdateIslandEventToggle
	{
	public:
		struct FGuid                                               EventID;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector2D                                           EventScreenPos;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInverted;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WZGS[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRefreshIslandEventData
	 * Size -> 0x0001
	 */
	struct FEventRefreshIslandEventData
	{
	public:
		unsigned char                                              UnknownData_C4G8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUpdateIslandEventHighlight
	 * Size -> 0x0001
	 */
	struct FEventUpdateIslandEventHighlight
	{
	public:
		bool                                                       IsHighlightActive;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.IslandEventIconData
	 * Size -> 0x0058
	 */
	struct FIslandEventIconData
	{
	public:
		struct FIslandEventData                                    EventData;                                               // 0x0000(0x0038)
		struct FIslandEventIcons                                   IslandIcons;                                             // 0x0038(0x0010)
		struct FIslandEventIcons                                   HeaderIcons;                                             // 0x0048(0x0010)
	};

	/**
	 * ScriptStruct Athena.IslandNameAndBounds
	 * Size -> 0x001C
	 */
	struct FIslandNameAndBounds
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FBox2D                                              IslandBounds;                                            // 0x0008(0x0014) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventIslandEventDataChanged
	 * Size -> 0x0001
	 */
	struct FEventIslandEventDataChanged
	{
	public:
		unsigned char                                              UnknownData_F65L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BeaconExtinguishedEvent
	 * Size -> 0x0001
	 */
	struct FBeaconExtinguishedEvent
	{
	public:
		unsigned char                                              UnknownData_N4RL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BeaconLitEvent
	 * Size -> 0x0001
	 */
	struct FBeaconLitEvent
	{
	public:
		unsigned char                                              UnknownData_OJQL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCannonFiredOnServer
	 * Size -> 0x0008
	 */
	struct FEventCannonFiredOnServer
	{
	public:
		class ACannon*                                             Cannon;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCannonFired
	 * Size -> 0x0020
	 */
	struct FEventCannonFired
	{
	public:
		class ACannon*                                             FiredCannon;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U8ON[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingStoppedYaw
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingStoppedYaw
	{
	public:
		bool                                                       IsAtEnd;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingStoppedPitch
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingStoppedPitch
	{
	public:
		bool                                                       IsAtEnd;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingStartedYaw
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingStartedYaw
	{
	public:
		unsigned char                                              UnknownData_2TLF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingStartedPitch
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingStartedPitch
	{
	public:
		unsigned char                                              UnknownData_293P[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingCenteredYaw
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingCenteredYaw
	{
	public:
		unsigned char                                              UnknownData_MZTQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCannonAimingCenteredPitch
	 * Size -> 0x0001
	 */
	struct FEventCannonAimingCenteredPitch
	{
	public:
		unsigned char                                              UnknownData_9HZS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplyStatusShipCurseEnd
	 * Size -> 0x0001
	 */
	struct FEventApplyStatusShipCurseEnd
	{
	public:
		unsigned char                                              UnknownData_EV3J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplyStatusShipCurse
	 * Size -> 0x0020
	 */
	struct FEventApplyStatusShipCurse
	{
	public:
		unsigned char                                              UnknownData_PEBU[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatus                                             Status;                                                  // 0x0008(0x0018)
	};

	/**
	 * ScriptStruct Athena.EventCurseWheelLockEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseWheelLockEnd
	{
	public:
		unsigned char                                              UnknownData_LBK2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseWheelLock
	 * Size -> 0x0008
	 */
	struct FEventCurseWheelLock
	{
	public:
		ECurseTag                                                  CurseTag;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6R4X[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AngleThreshold;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCurseSpawnAIOnShip
	 * Size -> 0x0008
	 */
	struct FEventCurseSpawnAIOnShip
	{
	public:
		class UAIFixedWavesSpawner*                                AISpawner;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCurseBallastEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseBallastEnd
	{
	public:
		unsigned char                                              UnknownData_7WR9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseBallast
	 * Size -> 0x0004
	 */
	struct FEventCurseBallast
	{
	public:
		unsigned char                                              UnknownData_RPR7[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipCurseFXEnd
	 * Size -> 0x0030
	 */
	struct FEventShipCurseFXEnd
	{
	public:
		struct FShipCurseFXData                                    CurseFXData;                                             // 0x0000(0x0030)
	};

	/**
	 * ScriptStruct Athena.EventShipCurseFX
	 * Size -> 0x0030
	 */
	struct FEventShipCurseFX
	{
	public:
		struct FShipCurseFXData                                    CurseFXData;                                             // 0x0000(0x0030)
	};

	/**
	 * ScriptStruct Athena.CurseShipCannonsEvent
	 * Size -> 0x000C
	 */
	struct FCurseShipCannonsEvent
	{
	public:
		float                                                      PitchAngle;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      YawAngle;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BlendTime;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventEnableInteractionPoints
	 * Size -> 0x0018
	 */
	struct FEventEnableInteractionPoints
	{
	public:
		EShipCurseTag                                              ShipCurseTag;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECurseTag                                                  CurseTag;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HA3P[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      InteractionPointsToEnable;                               // 0x0008(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.EventDisableInteractionPoints
	 * Size -> 0x0018
	 */
	struct FEventDisableInteractionPoints
	{
	public:
		EShipCurseTag                                              ShipCurseTag;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECurseTag                                                  CurseTag;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MQMB[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      InteractionPointsToDisable;                              // 0x0008(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.EventCurseCapstan
	 * Size -> 0x0004
	 */
	struct FEventCurseCapstan
	{
	public:
		float                                                      DurationToToggleCapstanPosition;                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCurseChangeSailHeight
	 * Size -> 0x0004
	 */
	struct FEventCurseChangeSailHeight
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TimedResponseAction
	 * Size -> 0x0030
	 */
	struct FTimedResponseAction
	{
	public:
		TArray<class AActor*>                                      TargetActors;                                            // 0x0000(0x0010) ZeroConstructor
		float                                                      Duration;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsActive;                                                // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_558G[0x1B];                                  // 0x0015(0x001B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ApplyBoundaryToWorldMapEvent
	 * Size -> 0x0010
	 */
	struct FApplyBoundaryToWorldMapEvent
	{
	public:
		struct FLinearColor                                        BoundaryData;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WorldMapSetMapLabelsRotation
	 * Size -> 0x0004
	 */
	struct FWorldMapSetMapLabelsRotation
	{
	public:
		float                                                      Rotation;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldMapSetShipLocation
	 * Size -> 0x000C
	 */
	struct FWorldMapSetShipLocation
	{
	public:
		float                                                      ShipX;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShipY;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Rotation;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldMapIslandData
	 * Size -> 0x0060
	 */
	struct FWorldMapIslandData
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible
		unsigned char                                              UnknownData_79D2[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              IslandUrl;                                               // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		float                                                      MinX;                                                    // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinY;                                                    // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxX;                                                    // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxY;                                                    // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Rotation;                                                // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LabelOffset;                                             // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldMapWorldData
	 * Size -> 0x0020
	 */
	struct FWorldMapWorldData
	{
	public:
		float                                                      MinX;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinY;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxX;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxY;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FWorldMapIslandData>                         Islands;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.WorldMapRequestWorldResponse
	 * Size -> 0x0020
	 */
	struct FWorldMapRequestWorldResponse
	{
	public:
		struct FWorldMapWorldData                                  WorldData;                                               // 0x0000(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.WorldMapRequestWorld
	 * Size -> 0x0001
	 */
	struct FWorldMapRequestWorld
	{
	public:
		unsigned char                                              UnknownData_UMQH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CatalogOfferCommodity
	 * Size -> 0x0018
	 */
	struct FCatalogOfferCommodity
	{
	public:
		class UClass*                                              RequiredEmissary;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FCommoditySelectionType                             Type;                                                    // 0x0008(0x0008) Edit
		ECommodityDemand                                           Demand;                                                  // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VKK3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CatalogOfferBundleDataAsset
	 * Size -> 0x0020
	 */
	struct FCatalogOfferBundleDataAsset
	{
	public:
		class UCatalogOfferDataAsset*                              OwningBundle;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   TileSize;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_X34G[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               TileImage;                                               // 0x0010(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CatalogOfferRewardDataAsset
	 * Size -> 0x0010
	 */
	struct FCatalogOfferRewardDataAsset
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FRewardId                                           Reward;                                                  // 0x0008(0x0008) Edit
	};

	/**
	 * ScriptStruct Athena.CatalogOfferCompanyLevelDataAsset
	 * Size -> 0x0010
	 */
	struct FCatalogOfferCompanyLevelDataAsset
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		uint32_t                                                   Level;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7Q1A[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CatalogOfferPrerequisitesDataAsset
	 * Size -> 0x0028
	 */
	struct FCatalogOfferPrerequisitesDataAsset
	{
	public:
		TArray<class UClass*>                                      Entitlements;                                            // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper
		TArray<struct FCatalogOfferCompanyLevelDataAsset>          CompanyLevel;                                            // 0x0010(0x0010) Edit, ZeroConstructor
		uint32_t                                                   EntitlementRequirementThreshold;                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FX2J[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterSocketFootWaterImpactResult
	 * Size -> 0x001C
	 */
	struct FCharacterSocketFootWaterImpactResult
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		struct FVector                                             SocketVelocity;                                          // 0x000C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		int32_t                                                    FootIndex;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CharacterFootWaterImpactResult
	 * Size -> 0x0020
	 */
	struct FCharacterFootWaterImpactResult
	{
	public:
		struct FCharacterSocketFootWaterImpactResult               SocketFootImpactResult;                                  // 0x0000(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, EditConst
		int32_t                                                    FootIndex;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CharacterFootImpactResult
	 * Size -> 0x00D0
	 */
	struct FCharacterFootImpactResult
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, ContainsInstancedReference
		ECharacterFootImpactType                                   FootImpactType;                                          // 0x0080(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WX51[0xF];                                   // 0x0081(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          SocketTransform;                                         // 0x0090(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor
		struct FVector                                             SocketVelocity;                                          // 0x00C0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor
		int32_t                                                    FootIndex;                                               // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SocketCollisionExitWaterEvent
	 * Size -> 0x0028
	 */
	struct FSocketCollisionExitWaterEvent
	{
	public:
		unsigned char                                              UnknownData_5W8N[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SocketCollisionEnterWaterEvent
	 * Size -> 0x0028
	 */
	struct FSocketCollisionEnterWaterEvent
	{
	public:
		unsigned char                                              UnknownData_9F56[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SocketCollisionEvent
	 * Size -> 0x00D0
	 */
	struct FSocketCollisionEvent
	{
	public:
		unsigned char                                              UnknownData_4PE9[0xD0];                                  // 0x0000(0x00D0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveChestOfRageComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveChestOfRageComponentState
	{
	public:
		class UChestOfRageComponent*                               Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HttpClientComponentRequestEvent
	 * Size -> 0x0098
	 */
	struct FHttpClientComponentRequestEvent
	{
	public:
		class FString                                              Uri;                                                     // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Body;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ShouldEncrypt;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShouldAuthorize;                                         // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_56WO[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Method;                                                  // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		TMap<class FString, class FString>                         Headers;                                                 // 0x0038(0x0050) ZeroConstructor
		class FString                                              Id;                                                      // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HttpClientComponentResponseEvent
	 * Size -> 0x0028
	 */
	struct FHttpClientComponentResponseEvent
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N2PO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Body;                                                    // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Id;                                                      // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AmmoUI
	 * Size -> 0x00F8
	 */
	struct FAmmoUI
	{
	public:
		unsigned char                                              UnknownData_SJ0H[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn*                                               TargetPawn;                                              // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		unsigned char                                              UnknownData_7K5S[0xD8];                                  // 0x0020(0x00D8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CompanyLevelDefinition
	 * Size -> 0x0008
	 */
	struct FCompanyLevelDefinition
	{
	public:
		uint32_t                                                   Level;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   XpRequiredToAttain;                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyReputationProgressModel
	 * Size -> 0x0028
	 */
	struct FCompanyReputationProgressModel
	{
	public:
		class FName                                                CompanyId;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Level;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FCompanyLevelDefinition                             NextCompanyLevel;                                        // 0x0010(0x0008)
		class FString                                              Sig;                                                     // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyReputationProgressModelCollection
	 * Size -> 0x0010
	 */
	struct FCompanyReputationProgressModelCollection
	{
	public:
		TArray<struct FCompanyReputationProgressModel>             CompanyProgress;                                         // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerNewLevelEvent
	 * Size -> 0x0010
	 */
	struct FPlayerNewLevelEvent
	{
	public:
		uint32_t                                                   NewLevel;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PreviousLevel;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCompanyProgressUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FPlayerCompanyProgressUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_LCFQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCompanyProgressUpdateNotification
	 * Size -> 0x0050
	 */
	struct FEventCompanyProgressUpdateNotification
	{
	public:
		struct FCompanyReputationProgressModel                     CurrentProgress;                                         // 0x0000(0x0028)
		struct FCompanyReputationProgressModel                     PreviousProgress;                                        // 0x0028(0x0028)
	};

	/**
	 * ScriptStruct Athena.RegisterCeremonyInterface
	 * Size -> 0x0010
	 */
	struct FRegisterCeremonyInterface
	{
	public:
		unsigned char                                              UnknownData_8XMV[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OwnedCrewCostumes
	 * Size -> 0x0020
	 */
	struct FOwnedCrewCostumes
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<TAssetPtr<class UClass>>                            Costumes;                                                // 0x0010(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.CaptureChatPerformanceTelemetryFragment
	 * Size -> 0x0008
	 */
	struct FCaptureChatPerformanceTelemetryFragment
	{
	public:
		uint32_t                                                   MaxTotalSizeOfArrayAndMessagesInBytes;                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   MaxNumberOfMessages;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UpdateContestUI
	 * Size -> 0x0001
	 */
	struct FUpdateContestUI
	{
	public:
		unsigned char                                              UnknownData_RSAN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestChestDugUpEvent
	 * Size -> 0x0020
	 */
	struct FContestChestDugUpEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              DiscoveringCharacter;                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AItemInfo*                                           TreasureChestItemInformation;                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewScoreAppendedEvent
	 * Size -> 0x0030
	 */
	struct FCrewScoreAppendedEvent
	{
	public:
		EContestScoreId                                            ScoreId;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_001H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CrewScore;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EScoreReason                                               ScoreReason;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BE6U[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               ScoringIconAssetReference;                               // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewScoredEvent
	 * Size -> 0x001C
	 */
	struct FCrewScoredEvent
	{
	public:
		EContestScoreId                                            ScoreId;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C3MB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CrewScore;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EScoreReason                                               ReasonForScoring;                                        // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M3WG[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewWinEvent
	 * Size -> 0x001C
	 */
	struct FCrewWinEvent
	{
	public:
		EContestScoreId                                            ScoreId;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CCZZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CrewScore;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EScoreReason                                               ReasonForScoring;                                        // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ATJ3[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestSilverEvent
	 * Size -> 0x0018
	 */
	struct FRequestSilverEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AWieldableItem*                                      WieldableItemSold;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestScoreTelemetryGameEvent
	 * Size -> 0x0030
	 */
	struct FContestScoreTelemetryGameEvent
	{
	public:
		EScoreReason                                               ScoreReason;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9YPO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentScore;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ScoreChangeAmount;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_67Z9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ScoreContext;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               InstigatorId;                                            // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.OtherCrewMuteStateResponse
	 * Size -> 0x0001
	 */
	struct FOtherCrewMuteStateResponse
	{
	public:
		EMuteState                                                 MuteState;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OtherCrewMuteStateRequest
	 * Size -> 0x0001
	 */
	struct FOtherCrewMuteStateRequest
	{
	public:
		unsigned char                                              UnknownData_8PXQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMuteOthersPhrasesEvent
	 * Size -> 0x0001
	 */
	struct FCrewMuteOthersPhrasesEvent
	{
	public:
		bool                                                       IsMuted;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewMutePlayerPhrasesEvent
	 * Size -> 0x0018
	 */
	struct FCrewMutePlayerPhrasesEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsMuted;                                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TV2E[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMuteOthersChatEvent
	 * Size -> 0x0001
	 */
	struct FCrewMuteOthersChatEvent
	{
	public:
		bool                                                       IsMuted;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewMutePlayerChatEvent
	 * Size -> 0x0018
	 */
	struct FCrewMutePlayerChatEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsMuted;                                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VWK0[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMuteOthersVoiceEvent
	 * Size -> 0x0001
	 */
	struct FCrewMuteOthersVoiceEvent
	{
	public:
		bool                                                       IsMuted;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewMutePlayerVoiceEvent
	 * Size -> 0x0018
	 */
	struct FCrewMutePlayerVoiceEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsMuted;                                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q2WE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestCrewManagementMemberData
	 * Size -> 0x0038
	 */
	struct FContestCrewManagementMemberData
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EMuteState                                                 Muted;                                                   // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HLRN[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CrewIcon;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestCrewManagementMemberDataEvent
	 * Size -> 0x0010
	 */
	struct FContestCrewManagementMemberDataEvent
	{
	public:
		TArray<struct FContestCrewManagementMemberData>            Members;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestStopCrewManagementEvent
	 * Size -> 0x0001
	 */
	struct FContestStopCrewManagementEvent
	{
	public:
		unsigned char                                              UnknownData_GW16[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestRequestCrewManagementEvent
	 * Size -> 0x0001
	 */
	struct FContestRequestCrewManagementEvent
	{
	public:
		unsigned char                                              UnknownData_VS8O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestUpdateScoreBoardTimer
	 * Size -> 0x0010
	 */
	struct FContestUpdateScoreBoardTimer
	{
	public:
		class FString                                              TimeRemaining;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestLaunchStartBlinds
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FContestLaunchStartBlinds : public FNetworkEventStruct
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      DisplayDuration;                                         // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_36QP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StagingPlayerWelcomingPopup
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FStagingPlayerWelcomingPopup : public FNetworkEventStruct
	{
	public:
		struct FGuid                                               LiveryID;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ContestShipSinkNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FContestShipSinkNetworkEvent : public FNetworkEventStruct
	{
	public:
		struct FGuid                                               CrewLiveryId;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ScoreboardItems
	 * Size -> 0x0038
	 */
	struct FScoreboardItems
	{
	public:
		class FString                                              Icon;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CrewName;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Score;                                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsMyCrew;                                                // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DJYB[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestEndEvent
	 * Size -> 0x0030
	 */
	struct FContestEndEvent
	{
	public:
		int32_t                                                    Position;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4V19[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Message;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FScoreboardItems>                            Scores;                                                  // 0x0018(0x0010) ZeroConstructor
		float                                                      HoldDuration;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2MP4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestStartEvent
	 * Size -> 0x0048
	 */
	struct FContestStartEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CrewIcon;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CrewName;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      CrewMembers;                                             // 0x0030(0x0010) ZeroConstructor
		float                                                      HoldDuration;                                            // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OLN8[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestNotificationNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FContestNotificationNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestRequestScoreBoardData
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FContestRequestScoreBoardData : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.RequestContestStateEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FRequestContestStateEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.ContestStateChangedEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FContestStateChangedEvent : public FNetworkEventStruct
	{
	public:
		EContestState                                              ContestState;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BRGH[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestLeaderboardEntry
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FContestLeaderboardEntry : public FNetworkEventStruct
	{
	public:
		class FString                                              CrewIconPath;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsMyCrew;                                                // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MSC2[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              DisplayAmount;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UpdateScoreBalanceHUDEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FUpdateScoreBalanceHUDEvent : public FNetworkEventStruct
	{
	public:
		TArray<struct FContestLeaderboardEntry>                    ContestLeaderboard;                                      // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ScoreGrantedNotificationUIEvent
	 * Size -> 0x0030
	 */
	struct FScoreGrantedNotificationUIEvent
	{
	public:
		EContestScoreId                                            ScoreId;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_L0OJ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DisplayAmount;                                           // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Amount;                                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2YYA[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ScoringIconPath;                                         // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageQuestsBegun
	 * Size -> 0x0004
	 */
	struct FVoyageQuestsBegun
	{
	public:
		int32_t                                                    QuestCount;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageChapterBegun
	 * Size -> 0x0008
	 */
	struct FVoyageChapterBegun
	{
	public:
		int32_t                                                    ChapterIndex;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ChapterCount;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageChestDiscoveredInContest
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FVoyageChestDiscoveredInContest : public FNetworkEventStruct
	{
	public:
		class FString                                              DiscovererName;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsDiscovererMe;                                          // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       PlayAudio;                                               // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0H13[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                CrewName;                                                // 0x0030(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_11G8[0x20];                                  // 0x0048(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FStringAssetReference                               ToastBackgroundImage;                                    // 0x0068(0x0010) ZeroConstructor
		struct FStringAssetReference                               BackgroundImage;                                         // 0x0078(0x0010) ZeroConstructor
		class FName                                                AudioEventName;                                          // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageChestDiscovered
	 * Size -> 0x0030
	 */
	struct FVoyageChestDiscovered
	{
	public:
		struct FNetActorPtr                                        PlayerStateOfDiscoverer;                                 // 0x0000(0x0014)
		bool                                                       IsDiscovererMe;                                          // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IUXP[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ChestRarity;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayAudio;                                               // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OMHM[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageCancelled
	 * Size -> 0x0038
	 */
	struct FVoyageCancelled
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_8O47[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.VoyageComplete
	 * Size -> 0x0040
	 */
	struct FVoyageComplete
	{
	public:
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZY8E[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_QASG[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.VoyageBegun
	 * Size -> 0x0038
	 */
	struct FVoyageBegun
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_EZYP[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.WeightedContestList
	 * Size -> 0x0028
	 */
	struct FWeightedContestList
	{
	public:
		unsigned char                                              UnknownData_PYFB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeightedEmergentContestVoyageRecipe>        WeightedContests;                                        // 0x0008(0x0010) ZeroConstructor
		TArray<struct FWeightedTallTaleContestRecipe>              WeightedTallTaleContests;                                // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CachedRespawnPoint
	 * Size -> 0x0050
	 */
	struct FCachedRespawnPoint
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FTransform                                          AllocatedRespawnPoint;                                   // 0x0010(0x0030) IsPlainOldData, NoDestructor
		class AShipSpawnLocation*                                  AllocatedSpawnLocation;                                  // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LXBA[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SinkShipData
	 * Size -> 0x0004
	 */
	struct FSinkShipData
	{
	public:
		int32_t                                                    ShipNetGUID;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ObjectHitDetectedEvent
	 * Size -> 0x0040
	 */
	struct FObjectHitDetectedEvent
	{
	public:
		unsigned char                                              UnknownData_SWFN[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementsFailedEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementsFailedEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EntitlementItem
	 * Size -> 0x00A8
	 */
	struct FEntitlementItem
	{
	public:
		class FText                                                Description;                                             // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_MX8H[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       Owned;                                                   // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_T9VT[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               PreviewImageUrl;                                         // 0x0040(0x0010) ZeroConstructor
		struct FStringAssetReference                               ThumbnailImageUrl;                                       // 0x0050(0x0010) ZeroConstructor
		class FText                                                DisplayName;                                             // 0x0060(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_M0HT[0x20];                                  // 0x0078(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              Id;                                                      // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EntitlementsResponseEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementsResponseEvent
	{
	public:
		TArray<struct FEntitlementItem>                            Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EntitlementsRequestEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementsRequestEvent
	{
	public:
		TArray<class FString>                                      EntitlementIds;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventObjectStateMigrationImpl
	 * Size -> 0x0010
	 */
	struct FEventObjectStateMigrationImpl
	{
	public:
		unsigned char                                              UnknownData_RBC6[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveExplosiveComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveExplosiveComponentState
	{
	public:
		class UExplosiveComponent*                                 Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemMetaBase
	 * Size -> 0x0018
	 */
	struct FItemMetaBase
	{
	public:
		unsigned char                                              UnknownData_5TMG[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               StoredStructType;                                        // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FuseComponentMetaWrapper
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FFuseComponentMetaWrapper : public FItemMetaBase
	{
	public:
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		bool                                                       FuseEnabled;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_F3S5[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FuseTimeScale;                                           // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActivePlayerState
	 * Size -> 0x00E8
	 */
	struct FActivePlayerState
	{
	public:
		unsigned char                                              UnknownData_QYUC[0xE8];                                  // 0x0000(0x00E8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventInactivityDetectionActionPerformed
	 * Size -> 0x0080
	 */
	struct FEventInactivityDetectionActionPerformed
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		class FName                                                ActionName;                                              // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuriedBuriable
	 * Size -> 0x0048
	 */
	struct FBuriedBuriable
	{
	public:
		unsigned char                                              UnknownData_VXM8[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0018(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8W3I[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemPreviewUpdateCameraEvent
	 * Size -> 0x0018
	 */
	struct FItemPreviewUpdateCameraEvent
	{
	public:
		struct FItemPreviewView                                    View;                                                    // 0x0000(0x0018) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.ItemPreviewShutdownEvent
	 * Size -> 0x0001
	 */
	struct FItemPreviewShutdownEvent
	{
	public:
		unsigned char                                              UnknownData_OF2I[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemPreviewBusyEvent
	 * Size -> 0x0001
	 */
	struct FItemPreviewBusyEvent
	{
	public:
		unsigned char                                              UnknownData_R19S[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemPreviewDataReadyEvent
	 * Size -> 0x0050
	 */
	struct FItemPreviewDataReadyEvent
	{
	public:
		TWeakObjectPtr<class UItemDesc>                            ItemDesc;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class USkeletalMesh>                        SkeletalMesh;                                            // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class USkeletalMeshComponent>               SkeletalMeshComponent;                                   // 0x0010(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class UAnimationAsset>                      AnimationAsset;                                          // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class UStaticMesh>                          StaticMesh;                                              // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class UStaticMeshComponent>                 StaticMeshComponent;                                     // 0x0028(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper
		struct FItemPreviewView                                    ItemView;                                                // 0x0030(0x0018) BlueprintVisible, BlueprintReadOnly
		bool                                                       Valid;                                                   // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YZZ5[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviewTickInitialTime;                                  // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemPreviewMoveCameraEvent
	 * Size -> 0x000C
	 */
	struct FItemPreviewMoveCameraEvent
	{
	public:
		float                                                      Rotation;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Pitch;                                                   // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Zoom;                                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RadialInventoryEvent
	 * Size -> 0x0004
	 */
	struct FRadialInventoryEvent
	{
	public:
		int32_t                                                    RadialIdentifier;                                        // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetItemOnRadialInventorySlot
	 * Size -> 0x0038
	 */
	struct FSetItemOnRadialInventorySlot
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BEWX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SlotItemUrl;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      SlotItemRotation;                                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SlotItemScale;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           SlotItemOffset;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              SlotItemTitle;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetTotalItemsOnRadialInventorySlot
	 * Size -> 0x000C
	 */
	struct FSetTotalItemsOnRadialInventorySlot
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TotalItems;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Capacity;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetMapTypeOnRadialInventorySlot
	 * Size -> 0x0018
	 */
	struct FSetMapTypeOnRadialInventorySlot
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EQuestMapIcon                                              QuestMapIcon;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YQYX[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BackgroundImageUrl;                                      // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetRadialItemsAggregate
	 * Size -> 0x0034 (FullSize[0x0038] - InheritedSize[0x0004])
	 */
	struct FSetRadialItemsAggregate : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_PQ55[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSetItemOnRadialInventorySlot>               Items;                                                   // 0x0008(0x0010) ZeroConstructor
		TArray<struct FSetTotalItemsOnRadialInventorySlot>         Quantities;                                              // 0x0018(0x0010) ZeroConstructor
		TArray<struct FSetMapTypeOnRadialInventorySlot>            Maps;                                                    // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NonVerbalRadialSlot
	 * Size -> 0x0030
	 */
	struct FNonVerbalRadialSlot
	{
	public:
		class FString                                              Phrase;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BackgroundImageUrl;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              IconImageUrl;                                            // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetNonVerbalOptionWithImages
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FSetNonVerbalOptionWithImages : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_BMBO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNonVerbalRadialSlot>                        Slots;                                                   // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SetNonVerbalOption
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FSetNonVerbalOption : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_HI0X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Phrases;                                                 // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.KrakenAnimatedTentacleHoldingStateTransitionChance
	 * Size -> 0x0010
	 */
	struct FKrakenAnimatedTentacleHoldingStateTransitionChance
	{
	public:
		float                                                      WeightedChance;                                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9NY6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              StateToTransitionTo;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LightingZoneDistances
	 * Size -> 0x0008
	 */
	struct FLightingZoneDistances
	{
	public:
		unsigned char                                              UnknownData_F7PN[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerChangedTableMapPan
	 * Size -> 0x0008
	 */
	struct FEventPlayerChangedTableMapPan
	{
	public:
		struct FVector2D                                           PanDelta;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerChangedTableMapZoom
	 * Size -> 0x0004
	 */
	struct FEventPlayerChangedTableMapZoom
	{
	public:
		float                                                      ZoomDelta;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerPinnedMapTable
	 * Size -> 0x0008
	 */
	struct FEventPlayerPinnedMapTable
	{
	public:
		struct FVector2D                                           PinWorldLocation;                                        // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackUpdateRecoverDuration
	 * Size -> 0x0004
	 */
	struct FEventMeleeAttackUpdateRecoverDuration
	{
	public:
		float                                                      RecoverDuration;                                         // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackProcessorStrikeEnded
	 * Size -> 0x0001
	 */
	struct FEventMeleeAttackProcessorStrikeEnded
	{
	public:
		unsigned char                                              UnknownData_0DQ5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackProcessorStrikeStarted
	 * Size -> 0x0001
	 */
	struct FEventMeleeAttackProcessorStrikeStarted
	{
	public:
		unsigned char                                              UnknownData_XW9U[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackProcessorComplete
	 * Size -> 0x0001
	 */
	struct FEventMeleeAttackProcessorComplete
	{
	public:
		unsigned char                                              UnknownData_RDFA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackPredictedHit
	 * Size -> 0x0008
	 */
	struct FEventMeleeAttackPredictedHit
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackHit
	 * Size -> 0x00F8
	 */
	struct FEventMeleeAttackHit
	{
	public:
		struct FMeleeAttackHitResponseData                         HitResponseData;                                         // 0x0000(0x00F8) BlueprintVisible, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.EventMeleeWeaponAttackTriggered
	 * Size -> 0x0008
	 */
	struct FEventMeleeWeaponAttackTriggered
	{
	public:
		EMeleeWeaponAttackType                                     AttackType;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UUHZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttackIndex;                                             // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventStopBlocking
	 * Size -> 0x0001
	 */
	struct FEventStopBlocking
	{
	public:
		unsigned char                                              UnknownData_S5VV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStartBlocking
	 * Size -> 0x0001
	 */
	struct FEventStartBlocking
	{
	public:
		unsigned char                                              UnknownData_5U8A[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MermaidUsedTelemetryEvent
	 * Size -> 0x0004
	 */
	struct FMermaidUsedTelemetryEvent
	{
	public:
		int32_t                                                    MermaidId;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerDoesNotRequireMermaidTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerDoesNotRequireMermaidTelemetryEvent
	{
	public:
		EPlayerAbandonedReason                                     Reason;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerRequiresMermaidTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerRequiresMermaidTelemetryEvent
	{
	public:
		EPlayerAbandonedReason                                     Reason;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MermaidSpawnedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FMermaidSpawnedTelemetryEvent
	{
	public:
		int32_t                                                    MermaidId;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             MermaidPosition;                                         // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.MermaidDeactivatedLocally
	 * Size -> 0x0010
	 */
	struct FMermaidDeactivatedLocally
	{
	public:
		class AMermaid*                                            Mermaid;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsForLocalPlayer;                                        // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XTDI[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MermaidActivatedLocally
	 * Size -> 0x0010
	 */
	struct FMermaidActivatedLocally
	{
	public:
		class AMermaid*                                            Mermaid;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsForLocalPlayer;                                        // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Z188[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MermaidUsedEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMermaidUsedEvent : public FNetworkEventStruct
	{
	public:
		class AMermaid*                                            Mermaid;                                                 // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WalletUpdatedMessage
	 * Size -> 0x0078
	 */
	struct FWalletUpdatedMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.WalletTransactionRequest
	 * Size -> 0x0018
	 */
	struct FWalletTransactionRequest
	{
	public:
		EWalletCurrencyId                                          Currency;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QD0R[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Amount;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               TransactionId;                                           // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CommerceRemoteServiceWalletTransactionResponse
	 * Size -> 0x0050
	 */
	struct FCommerceRemoteServiceWalletTransactionResponse
	{
	public:
		TMap<class FString, uint32_t>                              Balances;                                                // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CommerceRemoteServiceWalletBalanceResponse
	 * Size -> 0x0050
	 */
	struct FCommerceRemoteServiceWalletBalanceResponse
	{
	public:
		TMap<class FString, uint32_t>                              Balances;                                                // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TutorialHideFootstepEvent
	 * Size -> 0x0008
	 */
	struct FTutorialHideFootstepEvent
	{
	public:
		unsigned char                                              UnknownData_ZAP2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialShowFootstepEvent
	 * Size -> 0x0008
	 */
	struct FTutorialShowFootstepEvent
	{
	public:
		unsigned char                                              UnknownData_RQ4D[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialDialogOptionSelectEvent
	 * Size -> 0x0001
	 */
	struct FTutorialDialogOptionSelectEvent
	{
	public:
		ETutorialDialogOption                                      OptionSelected;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialDialogEvent
	 * Size -> 0x0001
	 */
	struct FTutorialDialogEvent
	{
	public:
		ETutorialDialogStep                                        StepStarted;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PostSellTutorialItem
	 * Size -> 0x0001
	 */
	struct FPostSellTutorialItem
	{
	public:
		unsigned char                                              UnknownData_4Z62[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PreSellTutorialItem
	 * Size -> 0x0008
	 */
	struct FPreSellTutorialItem
	{
	public:
		class AItemInfo*                                           SpawnedItem;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialDisplayedMermaidNotificationTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FTutorialDisplayedMermaidNotificationTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_5X91[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialResetMysteriousStrangersEvent
	 * Size -> 0x0001
	 */
	struct FTutorialResetMysteriousStrangersEvent
	{
	public:
		unsigned char                                              UnknownData_GTQO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialLegendaryTavernStrangerPlaySummonSFXEvent
	 * Size -> 0x0001
	 */
	struct FTutorialLegendaryTavernStrangerPlaySummonSFXEvent
	{
	public:
		unsigned char                                              UnknownData_DUZA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialStepExitedEvent
	 * Size -> 0x0008
	 */
	struct FTutorialStepExitedEvent
	{
	public:
		class FName                                                StepName;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialStepEnteredEvent
	 * Size -> 0x0008
	 */
	struct FTutorialStepEnteredEvent
	{
	public:
		class FName                                                StepName;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StartGameNarrative
	 * Size -> 0x0030
	 */
	struct FStartGameNarrative
	{
	public:
		class FString                                              TexturePath;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      EnterDurationSeconds;                                    // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HoldDurationSeconds;                                     // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ExitDurationSeconds;                                     // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EStartGameNarrativePositionX                               AlignX;                                                  // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EStartGameNarrativePositionY                               AlignY;                                                  // 0x002D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EStartGameNarrativeMediaSize                               Size;                                                    // 0x002E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ECFU[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PioneerObjectiveCompleteEvent
	 * Size -> 0x0001
	 */
	struct FPioneerObjectiveCompleteEvent
	{
	public:
		bool                                                       HasReward;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PioneerRewardEpochCompleteEvent
	 * Size -> 0x0090
	 */
	struct FPioneerRewardEpochCompleteEvent
	{
	public:
		int64_t                                                    PlayTime;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0008(0x0078)
		struct FGuid                                               PlayerGameId;                                            // 0x0080(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PirateGeneratorBakeTelemetryEvent
	 * Size -> 0x00A8
	 */
	struct FPirateGeneratorBakeTelemetryEvent
	{
	public:
		struct FPirateDescription                                  Desc;                                                    // 0x0000(0x0080) BlueprintVisible, BlueprintReadOnly
		EPirateBakeFlags                                           Flags;                                                   // 0x0080(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WPVU[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Operation;                                               // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               OperationId;                                             // 0x0098(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PirateGeneratorBakeFailureTelemetryEvent
	 * Size -> 0x0020 (FullSize[0x00C8] - InheritedSize[0x00A8])
	 */
	struct FPirateGeneratorBakeFailureTelemetryEvent : public FPirateGeneratorBakeTelemetryEvent
	{
	public:
		TArray<class FString>                                      CompleteTextures;                                        // 0x00A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
		TArray<class FString>                                      IncompleteTextures;                                      // 0x00B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PiratePreviewShutdownEvent
	 * Size -> 0x0001
	 */
	struct FPiratePreviewShutdownEvent
	{
	public:
		unsigned char                                              UnknownData_50TK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewBusyEvent
	 * Size -> 0x0001
	 */
	struct FPiratePreviewBusyEvent
	{
	public:
		unsigned char                                              UnknownData_SGSI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewReadyEvent
	 * Size -> 0x0098
	 */
	struct FPiratePreviewReadyEvent
	{
	public:
		TWeakObjectPtr<class USkeletalMesh>                        Mesh;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class USkeletalMeshComponent>               MeshComponent;                                           // 0x0008(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper
		struct FPirateDescription                                  Desc;                                                    // 0x0010(0x0080) BlueprintVisible, BlueprintReadOnly
		bool                                                       Valid;                                                   // 0x0090(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KBGB[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewMoveCameraEvent
	 * Size -> 0x000C
	 */
	struct FPiratePreviewMoveCameraEvent
	{
	public:
		float                                                      Rotation;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Pitch;                                                   // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Zoom;                                                    // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PiratePreviewGeneratePirateEvent
	 * Size -> 0x00B0
	 */
	struct FPiratePreviewGeneratePirateEvent
	{
	public:
		struct FPirateDescription                                  PirateDescription;                                       // 0x0000(0x0080) BlueprintVisible
		struct FPiratePreviewView                                  View;                                                    // 0x0080(0x0020) BlueprintVisible
		bool                                                       ForceRebuild;                                            // 0x00A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CEZH[0xF];                                   // 0x00A1(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewLoadingEvent
	 * Size -> 0x0001
	 */
	struct FPiratePreviewLoadingEvent
	{
	public:
		unsigned char                                              UnknownData_03Y5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewLoadedEvent
	 * Size -> 0x0001
	 */
	struct FPiratePreviewLoadedEvent
	{
	public:
		unsigned char                                              UnknownData_WS2E[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PiratePreviewCreatedEvent
	 * Size -> 0x0010
	 */
	struct FPiratePreviewCreatedEvent
	{
	public:
		class FString                                              PreviewURL;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestClearClothingCategoryPiratePreviewEvent
	 * Size -> 0x0010
	 */
	struct FRequestClearClothingCategoryPiratePreviewEvent
	{
	public:
		TArray<class UClass*>                                      ClothingCategories;                                      // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.RequestRandomiseClothingCategoryPiratePreviewEvent
	 * Size -> 0x0010
	 */
	struct FRequestRandomiseClothingCategoryPiratePreviewEvent
	{
	public:
		TArray<class UClass*>                                      ClothingCategories;                                      // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.RequestEquipClothingPiratePreviewEvent
	 * Size -> 0x0010
	 */
	struct FRequestEquipClothingPiratePreviewEvent
	{
	public:
		class FString                                              ClothingDesc;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestDestroyPiratePreviewEvent
	 * Size -> 0x0001
	 */
	struct FRequestDestroyPiratePreviewEvent
	{
	public:
		unsigned char                                              UnknownData_YCWB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCreatePiratePreviewEvent
	 * Size -> 0x0008
	 */
	struct FRequestCreatePiratePreviewEvent
	{
	public:
		int32_t                                                    ResolutionX;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ResolutionY;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AllowCrewToCustomiseCaptainedShipSettingChanged
	 * Size -> 0x0001
	 */
	struct FAllowCrewToCustomiseCaptainedShipSettingChanged
	{
	public:
		bool                                                       AllowCrewToCustomiseCaptainedShip;                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewCancelVoteToChangeMatchmakingVisibilityEvent
	 * Size -> 0x0001
	 */
	struct FCrewCancelVoteToChangeMatchmakingVisibilityEvent
	{
	public:
		unsigned char                                              UnknownData_S4VV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewVoteToChangeMatchmakingVisibilityEvent
	 * Size -> 0x0001
	 */
	struct FCrewVoteToChangeMatchmakingVisibilityEvent
	{
	public:
		unsigned char                                              UnknownData_F86D[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InviteFriendsEvent
	 * Size -> 0x0001
	 */
	struct FInviteFriendsEvent
	{
	public:
		bool                                                       IsFromCreatorMode;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipCancelVoteToScuttleEvent
	 * Size -> 0x0001
	 */
	struct FShipCancelVoteToScuttleEvent
	{
	public:
		unsigned char                                              UnknownData_IO1T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipVoteToScuttleEvent
	 * Size -> 0x0001
	 */
	struct FShipVoteToScuttleEvent
	{
	public:
		unsigned char                                              UnknownData_H3M5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewCancelVoteOutOfBrigEvent
	 * Size -> 0x0010
	 */
	struct FCrewCancelVoteOutOfBrigEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewVoteOutOfBrigEvent
	 * Size -> 0x0010
	 */
	struct FCrewVoteOutOfBrigEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewCancelVoteToBrigEvent
	 * Size -> 0x0010
	 */
	struct FCrewCancelVoteToBrigEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewVoteToBrigEvent
	 * Size -> 0x0010
	 */
	struct FCrewVoteToBrigEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewManagementMemberBrigState
	 * Size -> 0x0010
	 */
	struct FCrewManagementMemberBrigState
	{
	public:
		bool                                                       Voted;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YIZM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VotesCast;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VotesRequired;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EBrigState                                                 State;                                                   // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6PUC[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewManagementMemberData
	 * Size -> 0x0038
	 */
	struct FCrewManagementMemberData
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FCrewManagementMemberBrigState                      Brig;                                                    // 0x0020(0x0010)
		EMuteState                                                 Muted;                                                   // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C66T[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReservedCrewSlotData
	 * Size -> 0x0020
	 */
	struct FReservedCrewSlotData
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewManagementOtherCrewData
	 * Size -> 0x0001
	 */
	struct FCrewManagementOtherCrewData
	{
	public:
		EMuteState                                                 Muted;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewManagementShipData
	 * Size -> 0x0010
	 */
	struct FCrewManagementShipData
	{
	public:
		bool                                                       Voted;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NWHK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VotesCast;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VotesRequired;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EScuttleState                                              State;                                                   // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZT0L[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewManagementMatchmakingVisibilityData
	 * Size -> 0x0010
	 */
	struct FCrewManagementMatchmakingVisibilityData
	{
	public:
		bool                                                       Voted;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7YQB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VotesCast;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VotesRequired;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EMatchmakingVisibilityState                                State;                                                   // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TK1K[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewManagementArenaRivalVotingData
	 * Size -> 0x000C
	 */
	struct FCrewManagementArenaRivalVotingData
	{
	public:
		bool                                                       Voted;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_W0G4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VotesCast;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VotesRequired;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewManagementData
	 * Size -> 0x0058
	 */
	struct FCrewManagementData
	{
	public:
		TArray<struct FCrewManagementMemberData>                   CrewMembers;                                             // 0x0000(0x0010) ZeroConstructor
		TArray<struct FReservedCrewSlotData>                       CrewMembersThatAreNotConnectedToTheServerButHaveAReservedSlot; // 0x0010(0x0010) ZeroConstructor
		struct FCrewManagementOtherCrewData                        OtherCrews;                                              // 0x0020(0x0001)
		unsigned char                                              UnknownData_GKZG[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCrewManagementShipData                             Ship;                                                    // 0x0024(0x0010)
		struct FCrewManagementMatchmakingVisibilityData            MatchmakingVisibility;                                   // 0x0034(0x0010)
		struct FCrewManagementArenaRivalVotingData                 ArenaRivalVoting;                                        // 0x0044(0x000C)
		bool                                                       CrewFull;                                                // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ODDJ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewManagementEvent
	 * Size -> 0x0058
	 */
	struct FCrewManagementEvent
	{
	public:
		struct FCrewManagementData                                 CrewDefinition;                                          // 0x0000(0x0058)
	};

	/**
	 * ScriptStruct Athena.StopRequestCrewManagementEvent
	 * Size -> 0x0001
	 */
	struct FStopRequestCrewManagementEvent
	{
	public:
		unsigned char                                              UnknownData_MAKG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCrewManagementEvent
	 * Size -> 0x0001
	 */
	struct FRequestCrewManagementEvent
	{
	public:
		unsigned char                                              UnknownData_YPC8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplyStatusPlayerCurseEnd
	 * Size -> 0x0001
	 */
	struct FEventApplyStatusPlayerCurseEnd
	{
	public:
		unsigned char                                              UnknownData_BAD4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplyStatusPlayerCurse
	 * Size -> 0x0020
	 */
	struct FEventApplyStatusPlayerCurse
	{
	public:
		unsigned char                                              UnknownData_373L[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatus                                             Status;                                                  // 0x0008(0x0018)
	};

	/**
	 * ScriptStruct Athena.EventCurseSleepEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseSleepEnd
	{
	public:
		unsigned char                                              UnknownData_LJ16[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseSleep
	 * Size -> 0x0001
	 */
	struct FEventCurseSleep
	{
	public:
		unsigned char                                              UnknownData_5M73[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseBoogieEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseBoogieEnd
	{
	public:
		unsigned char                                              UnknownData_1BE2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseBoogie
	 * Size -> 0x0001
	 */
	struct FEventCurseBoogie
	{
	public:
		unsigned char                                              UnknownData_TW8T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseDrunkennessEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseDrunkennessEnd
	{
	public:
		unsigned char                                              UnknownData_Z50O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseDrunkenness
	 * Size -> 0x0004
	 */
	struct FEventCurseDrunkenness
	{
	public:
		unsigned char                                              UnknownData_SB2S[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseLimpEnd
	 * Size -> 0x0001
	 */
	struct FEventCurseLimpEnd
	{
	public:
		unsigned char                                              UnknownData_59AI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurseLimp
	 * Size -> 0x0001
	 */
	struct FEventCurseLimp
	{
	public:
		unsigned char                                              UnknownData_MOM2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CurseInfo
	 * Size -> 0x0001
	 */
	struct FCurseInfo
	{
	public:
		unsigned char                                              UnknownData_ZH4T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerHeroStatUpdatedEvent
	 * Size -> 0x0008
	 */
	struct FPlayerHeroStatUpdatedEvent
	{
	public:
		EPlayerHeroStatsSuccess                                    Result;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VOPC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerStat                                         Stat;                                                    // 0x0004(0x0004)
	};

	/**
	 * ScriptStruct Athena.PlayerModerationReportablePlayerDetails
	 * Size -> 0x0030
	 */
	struct FPlayerModerationReportablePlayerDetails
	{
	public:
		class FString                                              ReportableGamertag;                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ScrambledGamertag;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              XUID;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerModerationReportablePlayers
	 * Size -> 0x0030
	 */
	struct FPlayerModerationReportablePlayers
	{
	public:
		class FString                                              ReportingGamertag;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ReportingXUID;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPlayerModerationReportablePlayerDetails>    Players;                                                 // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RecentlyInteractedWithPlayers
	 * Size -> 0x0020
	 */
	struct FRecentlyInteractedWithPlayers
	{
	public:
		TArray<class AAthenaPlayerCharacter*>                      RecentlyInteractedPlayers;                               // 0x0000(0x0010) ZeroConstructor
		class AAthenaPlayerCharacter*                              ReportingCharacter;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           InteractionTime;                                         // 0x0018(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RecentlyInteractedWithPlayer
	 * Size -> 0x0038
	 */
	struct FRecentlyInteractedWithPlayer
	{
	public:
		class FString                                              GamerTag;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ScrambledGamertag;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              XUID;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           LastInteractionTime;                                     // 0x0030(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerNonVerbalComponentTelemetry
	 * Size -> 0x0020
	 */
	struct FPlayerNonVerbalComponentTelemetry
	{
	public:
		class AAthenaPlayerController*                             PlayerController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OAAC[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PioneerRewardInfo
	 * Size -> 0x0018
	 */
	struct FPioneerRewardInfo
	{
	public:
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              RewardId;                                                // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PosablePirateAnimation
	 * Size -> 0x0020
	 */
	struct FPosablePirateAnimation
	{
	public:
		class UAnimSequence*                                       Animation;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USkeletalMesh*                                       SkeletalMeshProp;                                        // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UStaticMesh*                                         StaticMeshProp;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                PropSocketName;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CatalogOfferPrerequisites
	 * Size -> 0x0078
	 */
	struct FCatalogOfferPrerequisites
	{
	public:
		TArray<class FString>                                      Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
		TMap<class FString, uint32_t>                              CompanyLevel;                                            // 0x0010(0x0050) ZeroConstructor
		uint32_t                                                   EntitlementRequirementThreshold;                         // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JTWV[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Sig;                                                     // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumCatalogOfferGroup
	 * Size -> 0x0048
	 */
	struct FPremiumCatalogOfferGroup
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_JCKX[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FGuid>                                       Children;                                                // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PremiumCatalogOfferData
	 * Size -> 0x0128
	 */
	struct FPremiumCatalogOfferData
	{
	public:
		EPremiumCatalogOfferType                                   Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9F2V[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      TileImages;                                              // 0x0008(0x0010) ZeroConstructor
		int32_t                                                    TileSize;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_407I[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PageTitle;                                               // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ONK3[0x20];                                  // 0x0038(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              PageIcon;                                                // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPremiumCatalogOfferGroup>                   Groups;                                                  // 0x0068(0x0010) ZeroConstructor
		class FText                                                LockedReason;                                            // 0x0078(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_37FI[0x20];                                  // 0x0090(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       TimeLimited;                                             // 0x00B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TimeLimitedPrice;                                        // 0x00B1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_X5AA[0x2];                                   // 0x00B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PremiumCurrencyRealMoneyPrice;                           // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Purchasable;                                             // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SuperPremium;                                            // 0x00B9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MSZX[0x6];                                   // 0x00BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Saving;                                                  // 0x00C0(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_LZ97[0x20];                                  // 0x00D8(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              Accent;                                                  // 0x00F8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              TopBanner;                                               // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBanner;                                            // 0x0118(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CatalogOffer
	 * Size -> 0x0348
	 */
	struct FCatalogOffer
	{
	public:
		struct FGuid                                               OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FText                                                DisplayName;                                             // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ONBF[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                DisplayDescription;                                      // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_GKKD[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		uint32_t                                                   Price;                                                   // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QKM2[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CurrencyType;                                            // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      AssetPaths;                                              // 0x0098(0x0010) ZeroConstructor
		class FString                                              Thumbnail;                                               // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      PurchaseStats;                                           // 0x00B8(0x0010) ZeroConstructor
		struct FCatalogOfferPrerequisites                          Prerequisites;                                           // 0x00C8(0x0078)
		struct FCatalogOfferPrerequisites                          ExclusionConditions;                                     // 0x0140(0x0078)
		ECatalogOfferAvailability                                  Availability;                                            // 0x01B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_22GI[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FString>                         MetaData;                                                // 0x01C0(0x0050) ZeroConstructor
		struct FPremiumCatalogOfferData                            Premium;                                                 // 0x0210(0x0128)
		class FString                                              Sig;                                                     // 0x0338(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StoreOnlinePurchaseResult
	 * Size -> 0x0018
	 */
	struct FStoreOnlinePurchaseResult
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BRFW[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ProductId;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StoreCatalogItem
	 * Size -> 0x0098
	 */
	struct FStoreCatalogItem
	{
	public:
		class FString                                              ProductId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FormattedPrice;                                          // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FormattedBasePrice;                                      // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CurrencyCode;                                            // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsOnSale;                                                // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UP72[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           SaleEndDate;                                             // 0x0068(0x0008) ZeroConstructor
		class FString                                              ImageUri;                                                // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      MetaTags;                                                // 0x0080(0x0010) ZeroConstructor
		int32_t                                                    DisplayPriority;                                         // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_D7C5[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StoreCatalog
	 * Size -> 0x0010
	 */
	struct FStoreCatalog
	{
	public:
		TArray<struct FStoreCatalogItem>                           Items;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StoreTokenModel
	 * Size -> 0x0020
	 */
	struct FStoreTokenModel
	{
	public:
		class FString                                              AccessToken;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              WsidToken;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerLeftPremiumStoreEvent
	 * Size -> 0x0001
	 */
	struct FPlayerLeftPremiumStoreEvent
	{
	public:
		unsigned char                                              UnknownData_GQY8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBrowsingPremiumStoreEvent
	 * Size -> 0x0001
	 */
	struct FPlayerBrowsingPremiumStoreEvent
	{
	public:
		unsigned char                                              UnknownData_GB58[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PremiumStoreClosedEvent
	 * Size -> 0x0001
	 */
	struct FPremiumStoreClosedEvent
	{
	public:
		unsigned char                                              UnknownData_350T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PremiumStoreTimeLimited
	 * Size -> 0x0002
	 */
	struct FPremiumStoreTimeLimited
	{
	public:
		bool                                                       Item;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Price;                                                   // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PremiumStoreBundleOffer
	 * Size -> 0x0038 (FullSize[0x0218] - InheritedSize[0x01E0])
	 */
	struct FPremiumStoreBundleOffer : public FShopOffer
	{
	public:
		class FString                                              Saving;                                                  // 0x01E0(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AccentUrl;                                               // 0x01F0(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPremiumStoreTimeLimited                            TimeLimited;                                             // 0x0200(0x0002)
		unsigned char                                              UnknownData_2O6F[0x6];                                   // 0x0202(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RealMoneyPrice;                                          // 0x0208(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreBundleItem
	 * Size -> 0x0028 (FullSize[0x0208] - InheritedSize[0x01E0])
	 */
	struct FPremiumStoreBundleItem : public FShopOffer
	{
	public:
		bool                                                       EnablePurchase;                                          // 0x01E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPremiumStoreTimeLimited                            TimeLimited;                                             // 0x01E1(0x0002)
		unsigned char                                              UnknownData_52YJ[0x5];                                   // 0x01E3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RealMoneyPrice;                                          // 0x01E8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LockedReason;                                            // 0x01F8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreBundleView
	 * Size -> 0x0238
	 */
	struct FPremiumStoreBundleView
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPremiumStoreBundleOffer                            Offer;                                                   // 0x0010(0x0218)
		TArray<struct FPremiumStoreBundleItem>                     Items;                                                   // 0x0228(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PremiumStoreOffer
	 * Size -> 0x0030 (FullSize[0x0210] - InheritedSize[0x01E0])
	 */
	struct FPremiumStoreOffer : public FShopOffer
	{
	public:
		bool                                                       IsSuperPremium;                                          // 0x01E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_T5Q7[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LockedReason;                                            // 0x01E8(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPremiumStoreTimeLimited                            TimeLimited;                                             // 0x01F8(0x0002)
		unsigned char                                              UnknownData_D5XX[0x6];                                   // 0x01FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RealMoneyPrice;                                          // 0x0200(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreItemsView
	 * Size -> 0x0040
	 */
	struct FPremiumStoreItemsView
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPremiumStoreOffer>                          Items;                                                   // 0x0010(0x0010) ZeroConstructor
		class FString                                              TopBannerUrl;                                            // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBannerUrl;                                         // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreBundleSetView
	 * Size -> 0x02C8
	 */
	struct FPremiumStoreBundleSetView
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              PageTitle;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PageIcon;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPremiumStoreBundleView                             Bundle;                                                  // 0x0030(0x0238)
		struct FPremiumStoreItemsView                              Items;                                                   // 0x0268(0x0040)
		class FString                                              TopBannerUrl;                                            // 0x02A8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBannerUrl;                                         // 0x02B8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreItemsSetView
	 * Size -> 0x0060
	 */
	struct FPremiumStoreItemsSetView
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              PageTitle;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PageIcon;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPremiumStoreItemsView>                      Items;                                                   // 0x0030(0x0010) ZeroConstructor
		class FString                                              TopBannerUrl;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBannerUrl;                                         // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreCardView
	 * Size -> 0x00B8
	 */
	struct FPremiumStoreCardView
	{
	public:
		TArray<class FString>                                      Image;                                                   // 0x0000(0x0010) ZeroConstructor
		class FString                                              Cost;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RealMoneyPrice;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Owned;                                                   // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPremiumStoreTimeLimited                            TimeLimited;                                             // 0x0051(0x0002)
		unsigned char                                              UnknownData_OJ6D[0x5];                                   // 0x0053(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPremiumStoreItemsSetView                           SetView;                                                 // 0x0058(0x0060)
	};

	/**
	 * ScriptStruct Athena.PremiumStoreCardsView
	 * Size -> 0x0060
	 */
	struct FPremiumStoreCardsView
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              PageTitle;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PageIcon;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPremiumStoreCardView>                       CardViews;                                               // 0x0030(0x0010) ZeroConstructor
		class FString                                              TopBannerUrl;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBannerUrl;                                         // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreItemView
	 * Size -> 0x0020 (FullSize[0x0230] - InheritedSize[0x0210])
	 */
	struct FPremiumStoreItemView : public FPremiumStoreOffer
	{
	public:
		class FString                                              TopBannerUrl;                                            // 0x0210(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BottomBannerUrl;                                         // 0x0220(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreLandingPageItem
	 * Size -> 0x0620
	 */
	struct FPremiumStoreLandingPageItem
	{
	public:
		TArray<class FString>                                      Image;                                                   // 0x0000(0x0010) ZeroConstructor
		class FString                                              Cost;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RealMoneyPrice;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Owned;                                                   // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPremiumStoreTimeLimited                            TimeLimited;                                             // 0x0051(0x0002)
		EPremiumStoreLandingPageItemType                           Type;                                                    // 0x0053(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Size;                                                    // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPremiumStoreBundleSetView                          BundleSetView;                                           // 0x0058(0x02C8)
		struct FPremiumStoreItemsSetView                           ItemsSetView;                                            // 0x0320(0x0060)
		struct FPremiumStoreCardsView                              CardsView;                                               // 0x0380(0x0060)
		struct FPremiumStoreItemView                               ItemView;                                                // 0x03E0(0x0230)
		class FString                                              AccentUrl;                                               // 0x0610(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumStoreLandingPageTab
	 * Size -> 0x0038
	 */
	struct FPremiumStoreLandingPageTab
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DisplayName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPremiumStoreLandingPageItem>                Children;                                                // 0x0020(0x0010) ZeroConstructor
		bool                                                       RealMoneyOnly;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H7L5[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PremiumStoreLandingPage
	 * Size -> 0x0010
	 */
	struct FPremiumStoreLandingPage
	{
	public:
		TArray<struct FPremiumStoreLandingPageTab>                 Tabs;                                                    // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PremiumStoreOffersEvent
	 * Size -> 0x0028
	 */
	struct FPremiumStoreOffersEvent
	{
	public:
		struct FPremiumStoreLandingPage                            Data;                                                    // 0x0000(0x0010)
		int64_t                                                    TimeLimitedExpiresInSeconds;                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              CurrencyCode;                                            // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPremiumStoreOffersEvent
	 * Size -> 0x0010
	 */
	struct FRequestPremiumStoreOffersEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CatalogTab
	 * Size -> 0x0030
	 */
	struct FCatalogTab
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogDisplayName;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogTabImageUrl;                                      // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShopDialogueMessages
	 * Size -> 0x0050
	 */
	struct FShopDialogueMessages
	{
	public:
		class FString                                              ConfirmPurchaseMessage;                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PurchaseFailedMessage;                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PurchasePendingMessage;                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PurchaseSuccessMessage;                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GetShopOffersFailedMessage;                              // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CategoryTab
	 * Size -> 0x0058
	 */
	struct FCategoryTab
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_1NON[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              UniqueTextIdentifier;                                    // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              IconPath;                                                // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShopDefinition
	 * Size -> 0x00D8
	 */
	struct FShopDefinition
	{
	public:
		class FString                                              ShopName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FCatalogTab>                                 CatalogTabs;                                             // 0x0020(0x0010) ZeroConstructor
		class FString                                              Storefront;                                              // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              OpenAudioCue;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FShopDialogueMessages                               Dialogue;                                                // 0x0050(0x0050)
		class FString                                              CompanyId;                                               // 0x00A0(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       EnablePiratePreview;                                     // 0x00B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EWalletCurrencyId                                          CurrencyType;                                            // 0x00B1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NB2I[0x6];                                   // 0x00B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCategoryTab>                                Categories;                                              // 0x00B8(0x0010) ZeroConstructor
		struct FStringAssetReference                               AllTabIcon;                                              // 0x00C8(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.OpenPremiumStoreFrontEvent
	 * Size -> 0x00D8
	 */
	struct FOpenPremiumStoreFrontEvent
	{
	public:
		struct FShopDefinition                                     ShopDefinition;                                          // 0x0000(0x00D8)
	};

	/**
	 * ScriptStruct Athena.RequestPremiumStoreFrontOpenEvent
	 * Size -> 0x0001
	 */
	struct FRequestPremiumStoreFrontOpenEvent
	{
	public:
		unsigned char                                              UnknownData_Q2W5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PremiumShopClosedEvent
	 * Size -> 0x0001
	 */
	struct FPremiumShopClosedEvent
	{
	public:
		unsigned char                                              UnknownData_B4SH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchasePremiumCurrencyErrorEvent
	 * Size -> 0x0010
	 */
	struct FPurchasePremiumCurrencyErrorEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PurchasePremiumCurrencyResponseEvent
	 * Size -> 0x0030
	 */
	struct FPurchasePremiumCurrencyResponseEvent
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ImageUrl;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PurchasePremiumCurrencyRequestEvent
	 * Size -> 0x0010
	 */
	struct FPurchasePremiumCurrencyRequestEvent
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumCurrencyItemsErrorEvent
	 * Size -> 0x0010
	 */
	struct FPremiumCurrencyItemsErrorEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumCurrencyItem
	 * Size -> 0x0088
	 */
	struct FPremiumCurrencyItem
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Id;                                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ImageUrl;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Price;                                                   // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BasePrice;                                               // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsOnSale;                                                // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TVNB[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SaleEndDate;                                             // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Quantity;                                                // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PremiumCurrencyItemsResponseEvent
	 * Size -> 0x0010
	 */
	struct FPremiumCurrencyItemsResponseEvent
	{
	public:
		TArray<struct FPremiumCurrencyItem>                        PremiumCurrencyItems;                                    // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PremiumCurrencyItemsRequestEvent
	 * Size -> 0x0001
	 */
	struct FPremiumCurrencyItemsRequestEvent
	{
	public:
		unsigned char                                              UnknownData_TUKU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchasePremiumShopOfferFailedEvent
	 * Size -> 0x0001
	 */
	struct FPurchasePremiumShopOfferFailedEvent
	{
	public:
		unsigned char                                              UnknownData_LQNO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchasePremiumShopOfferSucceededEvent
	 * Size -> 0x0001
	 */
	struct FPurchasePremiumShopOfferSucceededEvent
	{
	public:
		unsigned char                                              UnknownData_M9WX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchaseRealMoneyShopOfferFailedEvent
	 * Size -> 0x0001
	 */
	struct FPurchaseRealMoneyShopOfferFailedEvent
	{
	public:
		unsigned char                                              UnknownData_N0PE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeasonPassRealMoneyPriceResponseEvent
	 * Size -> 0x0020
	 */
	struct FSeasonPassRealMoneyPriceResponseEvent
	{
	public:
		class FString                                              RealMoneyPrice;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CurrencyCode;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestSeasonPassRealMoneyPriceEvent
	 * Size -> 0x0004
	 */
	struct FRequestSeasonPassRealMoneyPriceEvent
	{
	public:
		int32_t                                                    Price;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestRealMoneyPurchaseSeasonPassOfferEvent
	 * Size -> 0x0028
	 */
	struct FRequestRealMoneyPurchaseSeasonPassOfferEvent
	{
	public:
		class FString                                              OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Price;                                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6WZM[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestPurchaseSeasonPassOfferEvent
	 * Size -> 0x0020
	 */
	struct FRequestPurchaseSeasonPassOfferEvent
	{
	public:
		class FString                                              OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestRealMoneyPurchasePremiumShopOfferEvent
	 * Size -> 0x0020
	 */
	struct FRequestRealMoneyPurchasePremiumShopOfferEvent
	{
	public:
		struct FGuid                                               OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPurchasePremiumShopOfferEvent
	 * Size -> 0x0020
	 */
	struct FRequestPurchasePremiumShopOfferEvent
	{
	public:
		struct FGuid                                               OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPremiumShopOffersEvent
	 * Size -> 0x0010
	 */
	struct FRequestPremiumShopOffersEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetShopErrorEvent
	 * Size -> 0x0001
	 */
	struct FPetShopErrorEvent
	{
	public:
		unsigned char                                              UnknownData_ASX3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetBreedViewModel
	 * Size -> 0x0058
	 */
	struct FPetBreedViewModel
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Icon;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       HasNewStuff;                                             // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsOwned;                                                 // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y1R2[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FShopOffer>                                  Offers;                                                  // 0x0038(0x0010) ZeroConstructor
		TArray<struct FCategoryTab>                                Categories;                                              // 0x0048(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PetSpeciesViewModel
	 * Size -> 0x0048
	 */
	struct FPetSpeciesViewModel
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Icon;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       HasNewStuff;                                             // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HasOwnedOffer;                                           // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q28M[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPetBreedViewModel>                          Breeds;                                                  // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PetShopDefinition
	 * Size -> 0x0020
	 */
	struct FPetShopDefinition
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FPetSpeciesViewModel>                        Species;                                                 // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PetShopResponseEvent
	 * Size -> 0x0020
	 */
	struct FPetShopResponseEvent
	{
	public:
		struct FPetShopDefinition                                  Data;                                                    // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.PetShopRefreshEvent
	 * Size -> 0x0001
	 */
	struct FPetShopRefreshEvent
	{
	public:
		unsigned char                                              UnknownData_XTFD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetShopRequestEvent
	 * Size -> 0x0001
	 */
	struct FPetShopRequestEvent
	{
	public:
		unsigned char                                              UnknownData_0NVR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenShopFrontEvent
	 * Size -> 0x00D8
	 */
	struct FOpenShopFrontEvent
	{
	public:
		struct FShopDefinition                                     ShopDefinition;                                          // 0x0000(0x00D8)
	};

	/**
	 * ScriptStruct Athena.RequestPremiumShopFrontOpenEvent
	 * Size -> 0x0001
	 */
	struct FRequestPremiumShopFrontOpenEvent
	{
	public:
		unsigned char                                              UnknownData_8NE6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileQueuedEffect
	 * Size -> 0x0100
	 */
	struct FProjectileQueuedEffect
	{
	public:
		int32_t                                                    HitCount;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FHitResult                                          HitResult;                                               // 0x0004(0x0080) ContainsInstancedReference
		struct FWeaponProjectileEffectParams                       Effects;                                                 // 0x0084(0x0068)
		struct FVector                                             InitialShootingPosition;                                 // 0x00EC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              DamagerType;                                             // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileHitEvent
	 * Size -> 0x0178
	 */
	struct FProjectileHitEvent
	{
	public:
		struct FImpactDamageEvent                                  DamageEvent;                                             // 0x0000(0x0058)
		struct FHitResult                                          HitResult;                                               // 0x0058(0x0080) ContainsInstancedReference
		class UClass*                                              ProjectileId;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWeaponProjectileEffectParams                       Effects;                                                 // 0x00E0(0x0068)
		struct FVector                                             InitialPosition;                                         // 0x0148(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               TelemetryAttackId;                                       // 0x0154(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N5WD[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     TrailData;                                               // 0x0168(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.WeaponProjectileCreator
	 * Size -> 0x01B0
	 */
	struct FWeaponProjectileCreator
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AttackId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		struct FVector                                             Origin;                                                  // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Direction;                                               // 0x0034(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FProjectileAim                                      AimData;                                                 // 0x0040(0x0050) ContainsInstancedReference
		TArray<class AActor*>                                      IgnoredActors;                                           // 0x0090(0x0010) ZeroConstructor
		struct FWeaponProjectileParams                             Params;                                                  // 0x00A0(0x00B0)
		class UClass*                                              DamagerType;                                             // 0x0150(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FGuid                                               TelemetryAttackId;                                       // 0x0158(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    SubAttackGroupId;                                        // 0x0168(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XICR[0x4];                                   // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          WeaponMeshTransform;                                     // 0x0170(0x0030) IsPlainOldData, NoDestructor
		class UObject*                                             WeaponMesh;                                              // 0x01A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceBeforeGravity;                                   // 0x01A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_73UU[0x4];                                   // 0x01AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileHitScanVFX
	 * Size -> 0x00F0
	 */
	struct FProjectileHitScanVFX
	{
	public:
		struct FProjectile                                         Projectile;                                              // 0x0000(0x001C)
		unsigned char                                              UnknownData_MIMF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponProjectileParams                             AmmoParams;                                              // 0x0020(0x00B0)
		class UClass*                                              DamagerType;                                             // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_B8EX[0x18];                                  // 0x00D8(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StatueCosmeticTimingHandler
	 * Size -> 0x0028
	 */
	struct FStatueCosmeticTimingHandler
	{
	public:
		unsigned char                                              UnknownData_WF4I[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestBookPageRenderingTriggerRedraw
	 * Size -> 0x0002
	 */
	struct FQuestBookPageRenderingTriggerRedraw
	{
	public:
		EQuestBookPageRenderingMode                                PreviousMode;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EQuestBookPageRenderingMode                                NewMode;                                                 // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RiddleTextPhraseId
	 * Size -> 0x000C
	 */
	struct FRiddleTextPhraseId
	{
	public:
		class FName                                                PhraseId;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VariantIndex;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StatusScreenEffectParams
	 * Size -> 0x0044
	 */
	struct FStatusScreenEffectParams
	{
	public:
		unsigned char                                              UnknownData_KQP8[0x44];                                  // 0x0000(0x0044) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerUpdateCrewState
	 * Size -> 0x0038
	 */
	struct FServerUpdateCrewState
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FVector2D>                                   Locations;                                               // 0x0010(0x0010) ZeroConstructor
		ECrewSessionType                                           SessionType;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Q57I[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           ContendedResources;                                      // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ServerStateUpdateMessage
	 * Size -> 0x0010
	 */
	struct FServerStateUpdateMessage
	{
	public:
		TArray<struct FServerUpdateCrewState>                      Crews;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipCreatureManagerCreatureInstanceModifierCurves
	 * Size -> 0x0018
	 */
	struct FShipCreatureManagerCreatureInstanceModifierCurves
	{
	public:
		class UCurveFloat*                                         SpeedModifierCurve;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         RollCurve;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveVector*                                        OffsetCurve;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SiteGeneratorThresholdData
	 * Size -> 0x001C
	 */
	struct FSiteGeneratorThresholdData
	{
	public:
		float                                                      MinSpawnDistanceFromEndOfWorldZone;                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ClearanceRadius;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromClosestShipwreck;                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromClosestCrewShip;                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromClosestIsland;                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromClosestPlayer;                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinDistanceFromClosestRock;                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipwreckSite
	 * Size -> 0x0018
	 */
	struct FShipwreckSite
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.UpdatedEntitlementsAvailableEvent
	 * Size -> 0x0078
	 */
	struct FUpdatedEntitlementsAvailableEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.PurchaseConfigurationSettings
	 * Size -> 0x0008
	 */
	struct FPurchaseConfigurationSettings
	{
	public:
		float                                                      BackOffTimeInSeconds;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BackOffTimeGain;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsShopVoyageLimitResponseEvent
	 * Size -> 0x0004
	 */
	struct FCaptainsShopVoyageLimitResponseEvent
	{
	public:
		int32_t                                                    VoyageLimit;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsShopVoyageLimitRequestEvent
	 * Size -> 0x0001
	 */
	struct FCaptainsShopVoyageLimitRequestEvent
	{
	public:
		unsigned char                                              UnknownData_4BUR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestOpenCaptainsShopEvent
	 * Size -> 0x01B0
	 */
	struct FRequestOpenCaptainsShopEvent
	{
	public:
		struct FShopDefinition                                     VoyagesDefinition;                                       // 0x0000(0x00D8)
		struct FShopDefinition                                     ConsumablesDefinition;                                   // 0x00D8(0x00D8)
	};

	/**
	 * ScriptStruct Athena.InitialisePiratePreviewInShop
	 * Size -> 0x0001
	 */
	struct FInitialisePiratePreviewInShop
	{
	public:
		unsigned char                                              UnknownData_WBJH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RankOffer
	 * Size -> 0x01E8
	 */
	struct FRankOffer
	{
	public:
		struct FShopOffer                                          ShopOffer;                                               // 0x0000(0x01E0)
		int32_t                                                    LevelRequirement;                                        // 0x01E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9KCX[0x4];                                   // 0x01E4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageOffer
	 * Size -> 0x0200
	 */
	struct FVoyageOffer
	{
	public:
		struct FShopOffer                                          ShopOffer;                                               // 0x0000(0x01E0)
		class FString                                              BackgroundImage;                                         // 0x01E0(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RibbonImage;                                             // 0x01F0(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CompanyShopOffersEvent
	 * Size -> 0x0208
	 */
	struct FCompanyShopOffersEvent
	{
	public:
		struct FRankOffer                                          RankOffer;                                               // 0x0000(0x01E8)
		TArray<struct FVoyageOffer>                                VoyageOffers;                                            // 0x01E8(0x0010) ZeroConstructor
		TArray<struct FShopOffer>                                  ItemOffers;                                              // 0x01F8(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestCompanyShopOffersEvent
	 * Size -> 0x0020
	 */
	struct FRequestCompanyShopOffersEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PurchaseShopOfferFailedEvent
	 * Size -> 0x0001
	 */
	struct FPurchaseShopOfferFailedEvent
	{
	public:
		unsigned char                                              UnknownData_5DTR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchaseShopOfferSucceededEvent
	 * Size -> 0x0001
	 */
	struct FPurchaseShopOfferSucceededEvent
	{
	public:
		unsigned char                                              UnknownData_9QPC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestPurchaseShopOfferEvent
	 * Size -> 0x0020
	 */
	struct FRequestPurchaseShopOfferEvent
	{
	public:
		struct FGuid                                               OfferId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              CatalogName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShopOffersEvent
	 * Size -> 0x0030
	 */
	struct FEventShopOffersEvent
	{
	public:
		TArray<struct FShopOffer>                                  Offers;                                                  // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      Categories;                                              // 0x0010(0x0010) ZeroConstructor
		TArray<struct FShopOffer>                                  GildedVoyages;                                           // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShopOffersEvent
	 * Size -> 0x0020
	 */
	struct FShopOffersEvent
	{
	public:
		TArray<struct FShopOffer>                                  Offers;                                                  // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      Categories;                                              // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestShopOffersFailedEvent
	 * Size -> 0x0001
	 */
	struct FRequestShopOffersFailedEvent
	{
	public:
		unsigned char                                              UnknownData_WDBI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestEventShopOffersEvent
	 * Size -> 0x0010
	 */
	struct FRequestEventShopOffersEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestShopOffersEvent
	 * Size -> 0x0010
	 */
	struct FRequestShopOffersEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ForceCloseMultiShopEvent
	 * Size -> 0x0001
	 */
	struct FForceCloseMultiShopEvent
	{
	public:
		unsigned char                                              UnknownData_7CUZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ForceCloseShopEvent
	 * Size -> 0x0001
	 */
	struct FForceCloseShopEvent
	{
	public:
		unsigned char                                              UnknownData_NCQ2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MultiShopSelectionScreenClosedEvent
	 * Size -> 0x0001
	 */
	struct FMultiShopSelectionScreenClosedEvent
	{
	public:
		unsigned char                                              UnknownData_8GY7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestOpenMultiShopSelectionScreenEvent
	 * Size -> 0x0001
	 */
	struct FRequestOpenMultiShopSelectionScreenEvent
	{
	public:
		EMultiShopType                                             MultiShopTypeValue;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MultiShopStoreSelectedEvent
	 * Size -> 0x0001
	 */
	struct FMultiShopStoreSelectedEvent
	{
	public:
		EShopType                                                  StoreType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShopClosedEvent
	 * Size -> 0x0001
	 */
	struct FShopClosedEvent
	{
	public:
		unsigned char                                              UnknownData_LDRA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestOpenShopEvent
	 * Size -> 0x00D8
	 */
	struct FRequestOpenShopEvent
	{
	public:
		struct FShopDefinition                                     ShopDefinition;                                          // 0x0000(0x00D8)
	};

	/**
	 * ScriptStruct Athena.SkellyFortFinder
	 * Size -> 0x0080
	 */
	struct FSkellyFortFinder
	{
	public:
		unsigned char                                              UnknownData_XTSP[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRitualComplete
	 * Size -> 0x0001
	 */
	struct FEventRitualComplete
	{
	public:
		unsigned char                                              UnknownData_9NE8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSummonMegalodon
	 * Size -> 0x0001
	 */
	struct FEventSummonMegalodon
	{
	public:
		ETinySharkTypes                                            SoulType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHandInMegalodonSoul
	 * Size -> 0x0014
	 */
	struct FEventHandInMegalodonSoul
	{
	public:
		ETinySharkTypes                                            SoulType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T3KW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventCollectedMegalodonSoul
	 * Size -> 0x0020
	 */
	struct FEventCollectedMegalodonSoul
	{
	public:
		ETinySharkTypes                                            SoulType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T1IJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               CrewId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_95D8[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Collector;                                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CinematicCrewEvent
	 * Size -> 0x0050
	 */
	struct FCinematicCrewEvent
	{
	public:
		TArray<class FString>                                      CrewMembers;                                             // 0x0000(0x0010) ZeroConstructor
		class FText                                                Header;                                                  // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_693D[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                Tag;                                                     // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CinematicCrewNetworkEvent
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FCinematicCrewNetworkEvent : public FNetworkEventStruct
	{
	public:
		TArray<class APlayerState*>                                CrewMembersPlayerStates;                                 // 0x0010(0x0010) ZeroConstructor
		class FText                                                Header;                                                  // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_U23I[0x20];                                  // 0x0038(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                Tag;                                                     // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventReceiveTankardRefillerComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveTankardRefillerComponentState
	{
	public:
		class UTankardRefillerComponent*                           Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VomitFacialAnim
	 * Size -> 0x0001
	 */
	struct FVomitFacialAnim
	{
	public:
		unsigned char                                              UnknownData_D71K[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveWeepingComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveWeepingComponentState
	{
	public:
		class UWeepingComponent*                                   Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WielderInfo
	 * Size -> 0x0018
	 */
	struct FWielderInfo
	{
	public:
		class AAthenaPlayerCharacter*                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaPlayerController*                             Controller;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AAthenaPlayerState*                                  State;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SailsBillowStateChangeRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSailsBillowStateChangeRpc : public FBoxedRpc
	{
	public:
		bool                                                       AreSailsBillowed;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected
		unsigned char                                              UnknownData_XQS6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAIEndCustomAnimationSequenceLoop
	 * Size -> 0x0001
	 */
	struct FEventAIEndCustomAnimationSequenceLoop
	{
	public:
		unsigned char                                              UnknownData_37ZB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAITriggerCustomAnimationSequence
	 * Size -> 0x0008
	 */
	struct FEventAITriggerCustomAnimationSequence
	{
	public:
		class FName                                                SequenceName;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAISkeletalShipCaptainAnimState
	 * Size -> 0x0001
	 */
	struct FEventAISkeletalShipCaptainAnimState
	{
	public:
		ESkeletonShipCaptainDockedAnimationState                   ActiveAnimationState;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAIUseAlternateLocomotionSet
	 * Size -> 0x0010
	 */
	struct FEventAIUseAlternateLocomotionSet
	{
	public:
		bool                                                       UseAlternateLocomotionSet;                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_12TQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              WieldedItemAnimationStoreId;                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAIEmoteActionAnimationChange
	 * Size -> 0x0010
	 */
	struct FEventAIEmoteActionAnimationChange
	{
	public:
		ESkeletonEmoteActionState                                  ActiveEmoteActionState;                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M38O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAthenaCharacter*                                    Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAISenseAnimationChange
	 * Size -> 0x0010
	 */
	struct FEventAISenseAnimationChange
	{
	public:
		ESkeletonSensingState                                      ActiveSenseState;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HLC8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAthenaCharacter*                                    Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAncientAIFormDespawned
	 * Size -> 0x0010
	 */
	struct FEventAncientAIFormDespawned
	{
	public:
		bool                                                       WasKilled;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YO4L[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              KilledBy;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FogBankLocalPlayerPenetrationEvent
	 * Size -> 0x0014
	 */
	struct FFogBankLocalPlayerPenetrationEvent
	{
	public:
		EFogBankType                                               FogBankType;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DP9G[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PenetrationT3D;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PenetrationTHorizontal;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PenetrationTVertical;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaximumAudioFogIntensityRTPC;                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAudioPlayerExitedHotFloorVicinity
	 * Size -> 0x0001
	 */
	struct FEventAudioPlayerExitedHotFloorVicinity
	{
	public:
		unsigned char                                              UnknownData_1XWB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAudioPlayerEnteredHotFloorVicinity
	 * Size -> 0x0001
	 */
	struct FEventAudioPlayerEnteredHotFloorVicinity
	{
	public:
		unsigned char                                              UnknownData_Q82W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpeechAccessibilitySetting
	 * Size -> 0x0020
	 */
	struct FSpeechAccessibilitySetting
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Value;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpeechAccessibilityProfileUser
	 * Size -> 0x0038
	 */
	struct FSpeechAccessibilityProfileUser
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HostID;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSpeechAccessibilitySetting>                 Settings;                                                // 0x0020(0x0010) ZeroConstructor
		bool                                                       IsSponsoredUser;                                         // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2OR8[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpeechAccessibilityModel
	 * Size -> 0x0010
	 */
	struct FSpeechAccessibilityModel
	{
	public:
		TArray<struct FSpeechAccessibilityProfileUser>             ProfileUsers;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SpeechAccessibilityOptions
	 * Size -> 0x0048
	 */
	struct FSpeechAccessibilityOptions
	{
	public:
		bool                                                       GameChatSTT;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       GameChatTTS;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PI8R[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PersonaID;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PersonaName;                                             // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    PersonaGender;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SSSO[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PersonaLang;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       GameTextSS;                                              // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XKGL[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LocalGameChatStatusEvent
	 * Size -> 0x0001
	 */
	struct FLocalGameChatStatusEvent
	{
	public:
		ELocalGameChatStatus                                       Status;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TeardownAndReloadUICompleted
	 * Size -> 0x0001
	 */
	struct FTeardownAndReloadUICompleted
	{
	public:
		unsigned char                                              UnknownData_QIEX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TeardownAndReloadUI
	 * Size -> 0x0001
	 */
	struct FTeardownAndReloadUI
	{
	public:
		unsigned char                                              UnknownData_9TC6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SignOutButtonVisibilityEvent
	 * Size -> 0x0001
	 */
	struct FSignOutButtonVisibilityEvent
	{
	public:
		bool                                                       IsVisible;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.UpdateSignOutButtonVisibilityEvent
	 * Size -> 0x0001
	 */
	struct FUpdateSignOutButtonVisibilityEvent
	{
	public:
		unsigned char                                              UnknownData_Q6IZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseMaidenVoyageFlowEvent
	 * Size -> 0x0001
	 */
	struct FUseMaidenVoyageFlowEvent
	{
	public:
		bool                                                       IsNewPlayer;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientInputMatchmakingResult
	 * Size -> 0x0001
	 */
	struct FClientInputMatchmakingResult
	{
	public:
		bool                                                       IsAccepted;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.BootFlowCrossInputMatchmakingStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowCrossInputMatchmakingStateEvent
	{
	public:
		bool                                                       CrossInput;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventBackfillWeightingChange
	 * Size -> 0x0004
	 */
	struct FEventBackfillWeightingChange
	{
	public:
		unsigned char                                              UnknownData_OHJ8[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HideGenericModalContinueEvent
	 * Size -> 0x0001
	 */
	struct FHideGenericModalContinueEvent
	{
	public:
		unsigned char                                              UnknownData_P7A4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericModalContinueEvent
	 * Size -> 0x0010
	 */
	struct FGenericModalContinueEvent
	{
	public:
		class FString                                              DisplayMessage;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QueryGenericModalContinueEvent
	 * Size -> 0x0001
	 */
	struct FQueryGenericModalContinueEvent
	{
	public:
		unsigned char                                              UnknownData_H7CA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericModalContinueConfirmEvent
	 * Size -> 0x0001
	 */
	struct FGenericModalContinueConfirmEvent
	{
	public:
		unsigned char                                              UnknownData_UF0J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HideGenericConfirmationEvent
	 * Size -> 0x0001
	 */
	struct FHideGenericConfirmationEvent
	{
	public:
		unsigned char                                              UnknownData_723X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericConfirmationEvent
	 * Size -> 0x0010
	 */
	struct FGenericConfirmationEvent
	{
	public:
		class FString                                              DisplayMessage;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QueryGenericConfirmationEvent
	 * Size -> 0x0001
	 */
	struct FQueryGenericConfirmationEvent
	{
	public:
		unsigned char                                              UnknownData_7IIW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericConfirmEvent
	 * Size -> 0x0001
	 */
	struct FGenericConfirmEvent
	{
	public:
		unsigned char                                              UnknownData_SI5F[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericRejectEvent
	 * Size -> 0x0001
	 */
	struct FGenericRejectEvent
	{
	public:
		unsigned char                                              UnknownData_M01S[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientEndEngagementMessageEvent
	 * Size -> 0x0018
	 */
	struct FClientEndEngagementMessageEvent
	{
	public:
		float                                                      ScreenDuration;                                          // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RRIQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EndedScreen;                                             // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MapTableAnimationEvent_Advance
	 * Size -> 0x0001
	 */
	struct FMapTableAnimationEvent_Advance
	{
	public:
		unsigned char                                              UnknownData_G5P4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MapTableAnimationEvent_End
	 * Size -> 0x0001
	 */
	struct FMapTableAnimationEvent_End
	{
	public:
		unsigned char                                              UnknownData_AIOI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MapTableAnimationEvent_Start
	 * Size -> 0x0001
	 */
	struct FMapTableAnimationEvent_Start
	{
	public:
		unsigned char                                              UnknownData_RFA5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArenaTutorialFinishedEvent
	 * Size -> 0x0001
	 */
	struct FArenaTutorialFinishedEvent
	{
	public:
		unsigned char                                              UnknownData_YCNI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArenaTutorialEndEvent
	 * Size -> 0x0001
	 */
	struct FArenaTutorialEndEvent
	{
	public:
		unsigned char                                              UnknownData_4DZD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArenaTutorialAnimationStartEvent
	 * Size -> 0x0001
	 */
	struct FArenaTutorialAnimationStartEvent
	{
	public:
		unsigned char                                              UnknownData_TLG7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArenaTutorialStartEvent
	 * Size -> 0x0001
	 */
	struct FArenaTutorialStartEvent
	{
	public:
		unsigned char                                              UnknownData_Z5BA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OptedIntoMarketingEvent
	 * Size -> 0x0001
	 */
	struct FOptedIntoMarketingEvent
	{
	public:
		unsigned char                                              UnknownData_B7CJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameNarrationStateChangeEvent
	 * Size -> 0x0030
	 */
	struct FGameNarrationStateChangeEvent
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NC72[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PreferredVoice;                                          // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Language;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Gender;                                                  // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XCAX[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GamerTagUpdated
	 * Size -> 0x0010
	 */
	struct FGamerTagUpdated
	{
	public:
		class FString                                              GamerTag;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_CancelRerollRequest
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_CancelRerollRequest
	{
	public:
		unsigned char                                              UnknownData_4AQI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_RestartClient
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_RestartClient
	{
	public:
		unsigned char                                              UnknownData_2OEP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_OpenReroll
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_OpenReroll
	{
	public:
		unsigned char                                              UnknownData_FNQW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_HideRequestRerollModal
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_HideRequestRerollModal
	{
	public:
		unsigned char                                              UnknownData_YM4G[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_RequestReroll
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_RequestReroll
	{
	public:
		unsigned char                                              UnknownData_NEWM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_CancelReroll
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_CancelReroll
	{
	public:
		unsigned char                                              UnknownData_SCH4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateRerollEvent_StartReroll
	 * Size -> 0x0001
	 */
	struct FPirateRerollEvent_StartReroll
	{
	public:
		unsigned char                                              UnknownData_H50B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_InitialModalRemoved
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_InitialModalRemoved
	{
	public:
		unsigned char                                              UnknownData_ZUVE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_FavoriteButtonPressed
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_FavoriteButtonPressed
	{
	public:
		unsigned char                                              UnknownData_SXRZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_SelectButtonPressed
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_SelectButtonPressed
	{
	public:
		unsigned char                                              UnknownData_L80M[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_RefreshButtonPressed
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_RefreshButtonPressed
	{
	public:
		unsigned char                                              UnknownData_642W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_End
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_End
	{
	public:
		unsigned char                                              UnknownData_E66N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_CelebrationEnded
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_CelebrationEnded
	{
	public:
		unsigned char                                              UnknownData_IWRV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_PirateSaved
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_PirateSaved
	{
	public:
		unsigned char                                              UnknownData_QBEZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_SavePirate
	 * Size -> 0x0090
	 */
	struct FPirateCreationEvent_SavePirate
	{
	public:
		struct FPirateDescription                                  Description;                                             // 0x0000(0x0080) BlueprintVisible
		TArray<class UClass*>                                      Outfit;                                                  // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_UserExitGameRequest
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_UserExitGameRequest
	{
	public:
		unsigned char                                              UnknownData_3Q31[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_UserConfirmationResponse
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_UserConfirmationResponse
	{
	public:
		bool                                                       ShouldSavePirate;                                        // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_UserConfirmationRequest
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_UserConfirmationRequest
	{
	public:
		unsigned char                                              UnknownData_Q8SE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_UserPirateGenerateRequest
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_UserPirateGenerateRequest
	{
	public:
		unsigned char                                              UnknownData_IMGU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateCreationEvent_Begin
	 * Size -> 0x0001
	 */
	struct FPirateCreationEvent_Begin
	{
	public:
		unsigned char                                              UnknownData_74OV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowWhatsNewArticle
	 * Size -> 0x0070
	 */
	struct FBootFlowWhatsNewArticle
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HeroImage;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridImage;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridPrimaryDescription;                                  // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridSecondaryDescription;                                // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DescriptionTimes;                                        // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowSetWhatsNewArticleList
	 * Size -> 0x0010
	 */
	struct FBootFlowSetWhatsNewArticleList
	{
	public:
		TArray<struct FBootFlowWhatsNewArticle>                    WhatsNewArticleList;                                     // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BootFlowSetContentEngagementMessage
	 * Size -> 0x0030
	 */
	struct FBootFlowSetContentEngagementMessage
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              Body;                                                    // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              KeyArt;                                                  // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowSetEngagementMessage
	 * Size -> 0x0010
	 */
	struct FBootFlowSetEngagementMessage
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestSwitchAccountEvent
	 * Size -> 0x0001
	 */
	struct FRequestSwitchAccountEvent
	{
	public:
		unsigned char                                              UnknownData_549F[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestLobbyUIEvent
	 * Size -> 0x0002
	 */
	struct FRequestLobbyUIEvent
	{
	public:
		ECrewSessionType                                           SessionType;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESessionVisibility                                         SessionVisibility;                                       // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VisibleSessionTypeSelectionResponseEvent
	 * Size -> 0x0018
	 */
	struct FVisibleSessionTypeSelectionResponseEvent
	{
	public:
		ESessionVisibility                                         SessionVisibility;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECrewSessionType                                           SessionType;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayMode                                                  SelectedPlayMode;                                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESessionGrouping                                           SessionGrouping;                                         // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESessionStyle                                              SessionStyle;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CBNG[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShipId;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SessionTypeSelectionResponseEvent
	 * Size -> 0x0001
	 */
	struct FSessionTypeSelectionResponseEvent
	{
	public:
		ECrewSessionType                                           SessionType;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestSessionTypeSelectionEvent
	 * Size -> 0x0001
	 */
	struct FRequestSessionTypeSelectionEvent
	{
	public:
		unsigned char                                              UnknownData_EKF2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowQuitLobbyEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowQuitLobbyEvent
	{
	public:
		unsigned char                                              UnknownData_5DPE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuitMaidenVoyageEvent
	 * Size -> 0x0001
	 */
	struct FQuitMaidenVoyageEvent
	{
	public:
		unsigned char                                              UnknownData_XJUT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuitGameEvent
	 * Size -> 0x0001
	 */
	struct FQuitGameEvent
	{
	public:
		unsigned char                                              UnknownData_WE7W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUserDismissedErrorEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowUserDismissedErrorEvent
	{
	public:
		unsigned char                                              UnknownData_91SZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowErrorMessageQueryEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowErrorMessageQueryEvent
	{
	public:
		unsigned char                                              UnknownData_R3H8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStateQueryEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStateQueryEvent
	{
	public:
		unsigned char                                              UnknownData_I8VT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUserSelectedStartServerMatchmakingEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowUserSelectedStartServerMatchmakingEvent
	{
	public:
		unsigned char                                              UnknownData_9GPX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUserSelectedStartCrewMatchmakingEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowUserSelectedStartCrewMatchmakingEvent
	{
	public:
		unsigned char                                              UnknownData_T8DL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUserSelectedEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowUserSelectedEvent
	{
	public:
		unsigned char                                              UnknownData_9FDM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowEngagedViaControllerInputEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowEngagedViaControllerInputEvent
	{
	public:
		unsigned char                                              UnknownData_A7KL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QueryConfirmInviteResponse
	 * Size -> 0x0020
	 */
	struct FQueryConfirmInviteResponse
	{
	public:
		bool                                                       IsInviteConfirmationPending;                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0OBL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ErrorMessage;                                            // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsErrorMessage;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KJKZ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowSessionDetailsEvent
	 * Size -> 0x0004
	 */
	struct FBootFlowSessionDetailsEvent
	{
	public:
		ESessionVisibility                                         SessionVisibility;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECrewSessionType                                           SessionType;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayMode                                                  SelectedPlayMode;                                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CrossInput;                                              // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RejectInviteEvent
	 * Size -> 0x0001
	 */
	struct FRejectInviteEvent
	{
	public:
		unsigned char                                              UnknownData_UBIW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConfirmInviteEvent
	 * Size -> 0x0001
	 */
	struct FConfirmInviteEvent
	{
	public:
		unsigned char                                              UnknownData_RO90[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QueryConfirmInviteRequest
	 * Size -> 0x0001
	 */
	struct FQueryConfirmInviteRequest
	{
	public:
		unsigned char                                              UnknownData_KVD0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HideInviteModalEvent
	 * Size -> 0x0001
	 */
	struct FHideInviteModalEvent
	{
	public:
		unsigned char                                              UnknownData_9TNK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShowInviteErrorModalEvent
	 * Size -> 0x0010
	 */
	struct FShowInviteErrorModalEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShowInviteConfirmationModalEvent
	 * Size -> 0x0001
	 */
	struct FShowInviteConfirmationModalEvent
	{
	public:
		unsigned char                                              UnknownData_0IOP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowInviteAcceptedEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowInviteAcceptedEvent
	{
	public:
		unsigned char                                              UnknownData_YS6Y[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUpdateTaskStatusEvent
	 * Size -> 0x0010
	 */
	struct FBootFlowUpdateTaskStatusEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowStateQueryResponseEvent
	 * Size -> 0x0010
	 */
	struct FBootFlowStateQueryResponseEvent
	{
	public:
		class FString                                              StateName;                                               // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowErrorMessageQueryResponseEvent
	 * Size -> 0x0010
	 */
	struct FBootFlowErrorMessageQueryResponseEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowErrorOccurredEvent
	 * Size -> 0x0010
	 */
	struct FBootFlowErrorOccurredEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootFlowStartHandleErrorStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartHandleErrorStateEvent
	{
	public:
		unsigned char                                              UnknownData_PEAW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowEndInGameStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowEndInGameStateEvent
	{
	public:
		unsigned char                                              UnknownData_NYGU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartInGameStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartInGameStateEvent
	{
	public:
		unsigned char                                              UnknownData_7KT8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLoadIntoGameEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLoadIntoGameEvent
	{
	public:
		unsigned char                                              UnknownData_61XF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowEndContestMatchmakingStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowEndContestMatchmakingStateEvent
	{
	public:
		unsigned char                                              UnknownData_YFK9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartContestMatchmakingStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartContestMatchmakingStateEvent
	{
	public:
		unsigned char                                              UnknownData_PY6S[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartCrewMatchmakingStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartCrewMatchmakingStateEvent
	{
	public:
		unsigned char                                              UnknownData_GY7B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLobbyStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLobbyStateEvent
	{
	public:
		unsigned char                                              UnknownData_UWQO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSetupServerConfigurationStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSetupServerConfigurationStateEvent
	{
	public:
		unsigned char                                              UnknownData_SCQ1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSetupCrewSessionStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSetupCrewSessionStateEvent
	{
	public:
		unsigned char                                              UnknownData_75JX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEndMaidenVoyageStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEndMaidenVoyageStateEvent
	{
	public:
		unsigned char                                              UnknownData_IE5F[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartCheckForExistingSessionsStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartCheckForExistingSessionsStateEvent
	{
	public:
		unsigned char                                              UnknownData_CA1X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UpdateSelectedPirateEvent
	 * Size -> 0x0090
	 */
	struct FUpdateSelectedPirateEvent
	{
	public:
		unsigned char                                              UnknownData_PRHL[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Outfit;                                                  // 0x0080(0x0010) ZeroConstructor, Transient, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.BootFlowStartAccessibilitySettingsStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartAccessibilitySettingsStateEvent
	{
	public:
		unsigned char                                              UnknownData_LIT7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartMarketingOptInStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartMarketingOptInStateEvent
	{
	public:
		unsigned char                                              UnknownData_1PHH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSwapServicesStampStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSwapServicesStampStateEvent
	{
	public:
		unsigned char                                              UnknownData_S2JQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSessionSelectStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSessionSelectStateEvent
	{
	public:
		unsigned char                                              UnknownData_GKLG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowEndPirateSelectionStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowEndPirateSelectionStateEvent
	{
	public:
		unsigned char                                              UnknownData_JVFZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartPirateSelectionStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartPirateSelectionStateEvent
	{
	public:
		unsigned char                                              UnknownData_Y5MV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowWaitForLoadingScreenStateTransitionEvent
	 * Size -> 0x0028
	 */
	struct FBootFlowWaitForLoadingScreenStateTransitionEvent
	{
	public:
		class FString                                              OldState;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NewState;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      OldStateDuration;                                        // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_81VP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSetupServiceBridgeStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSetupServiceBridgeStateEvent
	{
	public:
		unsigned char                                              UnknownData_WZEO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEnumerateEntitlementsStateStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEnumerateEntitlementsStateStateEvent
	{
	public:
		unsigned char                                              UnknownData_DA4Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSetupBannedHandlerStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSetupBannedHandlerStateEvent
	{
	public:
		unsigned char                                              UnknownData_BVXW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSetupConfigurationServiceStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSetupConfigurationServiceStateEvent
	{
	public:
		unsigned char                                              UnknownData_QZ6O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLoginTokenExchangeStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLoginTokenExchangeStateEvent
	{
	public:
		unsigned char                                              UnknownData_029W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLoadUserSettingsStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLoadUserSettingsStateEvent
	{
	public:
		unsigned char                                              UnknownData_6HV4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartStoreRedemptionStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartStoreRedemptionStateEvent
	{
	public:
		unsigned char                                              UnknownData_GOOQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEmblemDefinitionRetrievalStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEmblemDefinitionRetrievalStateEvent
	{
	public:
		unsigned char                                              UnknownData_2DWR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartWhatsNewArticleRetrievalStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartWhatsNewArticleRetrievalStateEvent
	{
	public:
		unsigned char                                              UnknownData_PU58[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEngagementMessageRetrievalStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEngagementMessageRetrievalStateEvent
	{
	public:
		unsigned char                                              UnknownData_0WSU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLocalizationStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLocalizationStateEvent
	{
	public:
		unsigned char                                              UnknownData_PRLL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartWaitForLoadingScreenStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartWaitForLoadingScreenStateEvent
	{
	public:
		unsigned char                                              UnknownData_GWWE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartServiceDiscoveryStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartServiceDiscoveryStateEvent
	{
	public:
		unsigned char                                              UnknownData_GBK9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartSelectUserStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartSelectUserStateEvent
	{
	public:
		unsigned char                                              UnknownData_DQ0M[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEngageStateEvent_End
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEngageStateEvent_End
	{
	public:
		unsigned char                                              UnknownData_KDSM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEngageStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEngageStateEvent
	{
	public:
		unsigned char                                              UnknownData_UIT3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartWaitForEntryLevelEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartWaitForEntryLevelEvent
	{
	public:
		unsigned char                                              UnknownData_E8L8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowUserPromptRestartLocaleChangedStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowUserPromptRestartLocaleChangedStateEvent
	{
	public:
		unsigned char                                              UnknownData_8JSW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowLocaleRefreshUIStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowLocaleRefreshUIStateEvent
	{
	public:
		unsigned char                                              UnknownData_AFRW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartCheckNarrationStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartCheckNarrationStateEvent
	{
	public:
		unsigned char                                              UnknownData_XAEC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowAdvanceLegalSplashStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowAdvanceLegalSplashStateEvent
	{
	public:
		unsigned char                                              UnknownData_Z1OI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowEndLegalSplashStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowEndLegalSplashStateEvent
	{
	public:
		unsigned char                                              UnknownData_WCTN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartLegalSplashStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartLegalSplashStateEvent
	{
	public:
		unsigned char                                              UnknownData_JCCT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowPreLoadUserSettingStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowPreLoadUserSettingStateEvent
	{
	public:
		unsigned char                                              UnknownData_HBVO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartEntryLevelStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartEntryLevelStateEvent
	{
	public:
		unsigned char                                              UnknownData_3NB5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RejectRejoinEvent
	 * Size -> 0x0001
	 */
	struct FRejectRejoinEvent
	{
	public:
		unsigned char                                              UnknownData_ALIS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConfirmRejoinEvent
	 * Size -> 0x0001
	 */
	struct FConfirmRejoinEvent
	{
	public:
		unsigned char                                              UnknownData_SHZM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HideRejoinModalEvent
	 * Size -> 0x0001
	 */
	struct FHideRejoinModalEvent
	{
	public:
		unsigned char                                              UnknownData_R3JZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShowRejoinModalEvent
	 * Size -> 0x0001
	 */
	struct FShowRejoinModalEvent
	{
	public:
		unsigned char                                              UnknownData_A8UR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LobbyCrewMember
	 * Size -> 0x0020
	 */
	struct FLobbyCrewMember
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LobbyCrewInfo
	 * Size -> 0x0028
	 */
	struct FLobbyCrewInfo
	{
	public:
		ECrewSessionType                                           SessionType;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5QHB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLobbyCrewMember>                            Members;                                                 // 0x0008(0x0010) ZeroConstructor
		class FString                                              SessionName;                                             // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LobbySetupChangedEvent
	 * Size -> 0x0020
	 */
	struct FLobbySetupChangedEvent
	{
	public:
		unsigned char                                              UnknownData_4WAB[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LobbySetup
	 * Size -> 0x0020
	 */
	struct FLobbySetup
	{
	public:
		TArray<struct FLobbyCrewInfo>                              Crews;                                                   // 0x0000(0x0010) ZeroConstructor
		TArray<struct FLobbyCrewMember>                            CrewlessMembers;                                         // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventSessionCodeTextboxTextFromVirtualKeyboard
	 * Size -> 0x0010
	 */
	struct FEventSessionCodeTextboxTextFromVirtualKeyboard
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSessionCodeTextboxFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventSessionCodeTextboxFocusRequest
	{
	public:
		bool                                                       ShouldFocusSessionCodeTextbox;                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SessionLaunchedFailedEvent
	 * Size -> 0x0001
	 */
	struct FSessionLaunchedFailedEvent
	{
	public:
		unsigned char                                              UnknownData_VXFC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SessionLaunchedEvent
	 * Size -> 0x0001
	 */
	struct FSessionLaunchedEvent
	{
	public:
		unsigned char                                              UnknownData_CR99[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestLaunchSessionEvent
	 * Size -> 0x0001
	 */
	struct FRequestLaunchSessionEvent
	{
	public:
		unsigned char                                              UnknownData_LPOZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestLeaveCrewEvent
	 * Size -> 0x0001
	 */
	struct FRequestLeaveCrewEvent
	{
	public:
		unsigned char                                              UnknownData_MABB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewChangeFailedEvent
	 * Size -> 0x0010
	 */
	struct FCrewChangeFailedEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewMembershipUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FCrewMembershipUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_E4DV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestJoinCrewEvent
	 * Size -> 0x0004
	 */
	struct FRequestJoinCrewEvent
	{
	public:
		int32_t                                                    CrewId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreativeCrewConfig
	 * Size -> 0x0001
	 */
	struct FCreativeCrewConfig
	{
	public:
		ECrewSessionType                                           CrewSessionType;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreativeCrewMember
	 * Size -> 0x0028
	 */
	struct FCreativeCrewMember
	{
	public:
		int32_t                                                    CrewId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3QSV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GamerTag;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              XUID;                                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreativeSession
	 * Size -> 0x0050
	 */
	struct FCreativeSession
	{
	public:
		TArray<struct FCreativeCrewConfig>                         CrewConfigs;                                             // 0x0000(0x0010) ZeroConstructor
		bool                                                       IsHost;                                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_I4OD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCreativeCrewMember>                         Members;                                                 // 0x0018(0x0010) ZeroConstructor
		class FString                                              SessionCode;                                             // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    State;                                                   // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TQGT[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              XUID;                                                    // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SessionEvent
	 * Size -> 0x0050
	 */
	struct FSessionEvent
	{
	public:
		struct FCreativeSession                                    Session;                                                 // 0x0000(0x0050)
	};

	/**
	 * ScriptStruct Athena.RequestSessionEvent
	 * Size -> 0x0001
	 */
	struct FRequestSessionEvent
	{
	public:
		unsigned char                                              UnknownData_UEOS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.JoinSessionFailedEvent
	 * Size -> 0x0010
	 */
	struct FJoinSessionFailedEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.JoinSessionSuccessEvent
	 * Size -> 0x0001
	 */
	struct FJoinSessionSuccessEvent
	{
	public:
		unsigned char                                              UnknownData_OB0M[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CreateSessionFailedEvent
	 * Size -> 0x0010
	 */
	struct FCreateSessionFailedEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateSessionSuccessEvent
	 * Size -> 0x0001
	 */
	struct FCreateSessionSuccessEvent
	{
	public:
		unsigned char                                              UnknownData_ALN4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestJoinSessionEvent
	 * Size -> 0x0010
	 */
	struct FRequestJoinSessionEvent
	{
	public:
		class FString                                              SessionCode;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestCreateSessionEvent
	 * Size -> 0x0010
	 */
	struct FRequestCreateSessionEvent
	{
	public:
		TArray<ECrewSessionType>                                   SessionTypes;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EnableServerCreationEvent
	 * Size -> 0x0001
	 */
	struct FEnableServerCreationEvent
	{
	public:
		bool                                                       Value;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.BootFlowCreatorLobbyQuitEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowCreatorLobbyQuitEvent
	{
	public:
		unsigned char                                              UnknownData_07PK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowStartCreatorModeSessionStateEvent
	 * Size -> 0x0001
	 */
	struct FBootFlowStartCreatorModeSessionStateEvent
	{
	public:
		unsigned char                                              UnknownData_ELSS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateDeletionSucceededEvent
	 * Size -> 0x0010
	 */
	struct FPirateDeletionSucceededEvent
	{
	public:
		class FString                                              PirateId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateDeletionFailedEvent
	 * Size -> 0x0004
	 */
	struct FPirateDeletionFailedEvent
	{
	public:
		unsigned char                                              UnknownData_OOSQ[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateDeletionRequestedEvent
	 * Size -> 0x0078
	 */
	struct FPirateDeletionRequestedEvent
	{
	public:
		struct FPirateIdentity                                     Target;                                                  // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.ConnectToServicesStateDiscoverySucceededPreLoginEvent
	 * Size -> 0x0001
	 */
	struct FConnectToServicesStateDiscoverySucceededPreLoginEvent
	{
	public:
		unsigned char                                              UnknownData_P66J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LobbyInviteCode
	 * Size -> 0x0020
	 */
	struct FLobbyInviteCode
	{
	public:
		class FString                                              Code;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CreatedUtc;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LobbyCreationRequestModel
	 * Size -> 0x0010
	 */
	struct FLobbyCreationRequestModel
	{
	public:
		class FString                                              SessionName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LobbyServiceModel
	 * Size -> 0x0060
	 */
	struct FLobbyServiceModel
	{
	public:
		struct FLobbyInviteCode                                    InviteCode;                                              // 0x0000(0x0020)
		class FString                                              HostXuid;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HostToken;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FLobbyCreationRequestModel                          LobbyCreationRequest;                                    // 0x0040(0x0010)
		class FString                                              CreationTimeUtc;                                         // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SessionCreationCrewMemberModel
	 * Size -> 0x0010
	 */
	struct FSessionCreationCrewMemberModel
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SessionCreationCrewModel
	 * Size -> 0x0028
	 */
	struct FSessionCreationCrewModel
	{
	public:
		class FString                                              CrewLeaderXuid;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSessionCreationCrewMemberModel>             CrewMembers;                                             // 0x0010(0x0010) ZeroConstructor
		ECrewSessionType                                           SessionType;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y8HY[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SessionCreationCrewResponseModel
	 * Size -> 0x0038
	 */
	struct FSessionCreationCrewResponseModel
	{
	public:
		class FString                                              SessionName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FSessionCreationCrewModel                           Crew;                                                    // 0x0010(0x0028)
	};

	/**
	 * ScriptStruct Athena.SessionCreationResponseModel
	 * Size -> 0x0010
	 */
	struct FSessionCreationResponseModel
	{
	public:
		TArray<struct FSessionCreationCrewResponseModel>           Crews;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SessionCreationRequestModel
	 * Size -> 0x0030
	 */
	struct FSessionCreationRequestModel
	{
	public:
		class FString                                              PrivateServerId;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HostID;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSessionCreationCrewModel>                   Crews;                                                   // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestMatchmakingLocationsResponseModel
	 * Size -> 0x0018
	 */
	struct FContestMatchmakingLocationsResponseModel
	{
	public:
		TArray<class FString>                                      Locations;                                               // 0x0000(0x0010) ZeroConstructor
		int32_t                                                    MaxHops;                                                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_177J[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestMatchmakingClientResponseModel
	 * Size -> 0x0010
	 */
	struct FContestMatchmakingClientResponseModel
	{
	public:
		struct FTimespan                                           EstimatedWaitTime;                                       // 0x0000(0x0008) ZeroConstructor
		struct FTimespan                                           RetryAfter;                                              // 0x0008(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestMatchmakingCrewModel
	 * Size -> 0x0030
	 */
	struct FContestMatchmakingCrewModel
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0010(0x0018)
		int32_t                                                    SessionType;                                             // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9057[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestMatchmakingClientRequestModel
	 * Size -> 0x00D8
	 */
	struct FContestMatchmakingClientRequestModel
	{
	public:
		TArray<class FString>                                      PlayModeTags;                                            // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      PlayModeStates;                                          // 0x0010(0x0010) ZeroConstructor
		TMap<class FString, class FString>                         OptionalPlayModeInfo;                                    // 0x0020(0x0050) ZeroConstructor
		class FString                                              HostID;                                                  // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HostSessionSignature;                                    // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FContestMatchmakingCrewModel>                Crews;                                                   // 0x0090(0x0010) ZeroConstructor
		class FString                                              ServerLocation;                                          // 0x00A0(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   FeatureHash;                                             // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2CAM[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PrivateServerId;                                         // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               RequestCorrelationId;                                    // 0x00C8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WhatsNewArticleModel
	 * Size -> 0x0070
	 */
	struct FWhatsNewArticleModel
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HeroImage;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridImage;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridPrimaryDescription;                                  // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GridSecondaryDescription;                                // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DescriptionTimes;                                        // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WhatsNewArticleClientResponseModel
	 * Size -> 0x0010
	 */
	struct FWhatsNewArticleClientResponseModel
	{
	public:
		TArray<struct FWhatsNewArticleModel>                       WhatsNewArticleList;                                     // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StoreRedemptionStateFailedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FStoreRedemptionStateFailedTelemetryEvent
	{
	public:
		EStoreAsyncResult                                          Status;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ToggleCinematicModeRpc
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FToggleCinematicModeRpc : public FBoxedRpc
	{
	public:
		bool                                                       bInCinematicMode;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7Y6L[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerController*                                   PlayerController;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UpdateCameraPositionRpc
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FUpdateCameraPositionRpc : public FBoxedRpc
	{
	public:
		class AAthenaPlayerController*                             AthenaPlayerController;                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CompanyLevelDataTable
	 * Size -> 0x0004
	 */
	struct FCompanyLevelDataTable : public FTableRowBase
	{
	public:
		int32_t                                                    XpRequiredForLevel;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientPlayerNewLevelTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientPlayerNewLevelTelemetryEvent
	{
	public:
		uint32_t                                                   PlayerLevel;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PreviousPlayerLevel;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerXpGrantedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerXpGrantedTelemetryEvent
	{
	public:
		uint64_t                                                   XpAmount;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               BootyId;                                                 // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ContestEventScoreUpdated
	 * Size -> 0x0001
	 */
	struct FContestEventScoreUpdated
	{
	public:
		unsigned char                                              UnknownData_B9PJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestEventShipAssignmentsUpdated
	 * Size -> 0x0001
	 */
	struct FContestEventShipAssignmentsUpdated
	{
	public:
		unsigned char                                              UnknownData_XA2K[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMemberRivalVoteEvent
	 * Size -> 0x0010
	 */
	struct FCrewMemberRivalVoteEvent
	{
	public:
		class APlayerState*                                        CrewMemberPlayerState;                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsInFavourOfRivalChange;                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CF82[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewRequestedRivalChangeEvent
	 * Size -> 0x0010
	 */
	struct FCrewRequestedRivalChangeEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ContestCrewMemberModel
	 * Size -> 0x0028
	 */
	struct FContestCrewMemberModel
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		class FString                                              GamerTag;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestCrewResultModel
	 * Size -> 0x0028
	 */
	struct FContestCrewResultModel
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FContestCrewMemberModel>                     Members;                                                 // 0x0010(0x0010) ZeroConstructor
		uint32_t                                                   Reputation;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Score;                                                   // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestResultMessage
	 * Size -> 0x0048
	 */
	struct FContestResultMessage
	{
	public:
		struct FGuid                                               SessionId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ContestType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipType;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FContestCrewResultModel>                     CrewResults;                                             // 0x0030(0x0010) ZeroConstructor
		struct FDateTime                                           TimestampUtc;                                            // 0x0040(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestCrewResult
	 * Size -> 0x0014
	 */
	struct FContestCrewResult
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		uint32_t                                                   Score;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StreamSnapshotModel
	 * Size -> 0x0010
	 */
	struct FStreamSnapshotModel
	{
	public:
		int32_t                                                    ViewerCount;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KB12[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           TimeStamp;                                               // 0x0008(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StreamingStatusModel
	 * Size -> 0x00C8
	 */
	struct FStreamingStatusModel
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		TMap<class FString, struct FStreamSnapshotModel>           StreamSnapshots;                                         // 0x0078(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StreamersResponse
	 * Size -> 0x0010
	 */
	struct FStreamersResponse
	{
	public:
		TArray<struct FStreamingStatusModel>                       StreamingStatuses;                                       // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StreamersRequest
	 * Size -> 0x0010
	 */
	struct FStreamersRequest
	{
	public:
		TArray<struct FStreamingStatusModel>                       StreamingStatuses;                                       // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CreatorCrewSettings
	 * Size -> 0x0008
	 */
	struct FCreatorCrewSettings
	{
	public:
		float                                                      UpdateStreamersPollIntervalSeconds;                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UpdateStreamersRateLimitSeconds;                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewSessionLostEvent
	 * Size -> 0x0001
	 */
	struct FCrewSessionLostEvent
	{
	public:
		unsigned char                                              UnknownData_WBUD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewSessionDetailsChangedEvent
	 * Size -> 0x0018
	 */
	struct FCrewSessionDetailsChangedEvent
	{
	public:
		unsigned char                                              UnknownData_27LU[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCurrentCrewSessionEvent
	 * Size -> 0x0001
	 */
	struct FRequestCurrentCrewSessionEvent
	{
	public:
		unsigned char                                              UnknownData_DOAQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LargeSessionServerEncounterDevTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FLargeSessionServerEncounterDevTelemetryEvent
	{
	public:
		class FString                                              InitiatingUserId;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EncounteredUserId;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       TaskSucceeded;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3QEC[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LargeSessionEncounterDevTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FLargeSessionEncounterDevTelemetryEvent
	{
	public:
		class FString                                              EncounteredUserId;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       TaskSucceeded;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AHVA[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DebugFlyingActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FDebugFlyingActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.DebugSuperSailorActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FDebugSuperSailorActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.DebugSuperSailorSetSpeedAmpRPCEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FDebugSuperSailorSetSpeedAmpRPCEvent : public FNetworkEventStruct
	{
	public:
		float                                                      FwdSpdAmp;                                               // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      YawSpdAmp;                                               // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DebugSuperSailorSetYawSpeedRPCEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FDebugSuperSailorSetYawSpeedRPCEvent : public FNetworkEventStruct
	{
	public:
		float                                                      YawSpd;                                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KXW1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DebugSuperSailorSetFwdSpeedRPCEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FDebugSuperSailorSetFwdSpeedRPCEvent : public FNetworkEventStruct
	{
	public:
		float                                                      FwdSpd;                                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GGUX[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QueryContendedResourcesRpc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FQueryContendedResourcesRpc : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.QueryEventSchedulerStatusRpc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FQueryEventSchedulerStatusRpc : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.QueryMigrationStatusRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FQueryMigrationStatusRpc : public FBoxedRpc
	{
	public:
		class AAthenaPlayerController*                             AthenaPlayerController;                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QueryServerMemoryRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FQueryServerMemoryRpc : public FBoxedRpc
	{
	public:
		class AAthenaPlayerController*                             AthenaPlayerController;                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ResponseContendedResourcesNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FResponseContendedResourcesNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              ContendedResources;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ResponseEventSchedulerStatusNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FResponseEventSchedulerStatusNetworkEvent : public FNetworkEventStruct
	{
	public:
		TArray<class FString>                                      EventStatus;                                             // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ResponseMigrationStatusNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FResponseMigrationStatusNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              MigrationStatusLog;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ResponseServerMemoryNetworkEvent
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FResponseServerMemoryNetworkEvent : public FNetworkEventStruct
	{
	public:
		struct FMemoryCommonData                                   MemoryData;                                              // 0x0010(0x0050)
		TArray<struct FMemoryVisualiserCategory>                   VisualiserCategories;                                    // 0x0060(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmoteDescHelpers
	 * Size -> 0x0001
	 */
	struct FEmoteDescHelpers
	{
	public:
		unsigned char                                              UnknownData_A1JY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CheatPerformedByClientNetworkEvent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FCheatPerformedByClientNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              CheatSource;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CheatFunction;                                           // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CheatArguments;                                          // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFireWeapon
	 * Size -> 0x0001
	 */
	struct FEventFireWeapon
	{
	public:
		bool                                                       bForFirstPerson;                                         // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FallingIntoWaterEvent
	 * Size -> 0x0004
	 */
	struct FFallingIntoWaterEvent
	{
	public:
		float                                                      FallingSpeed;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCustomAnimationPlayAnimation
	 * Size -> 0x0008
	 */
	struct FEventCustomAnimationPlayAnimation
	{
	public:
		class FName                                                AnimSequenceName;                                        // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCustomAnimationStateChanged
	 * Size -> 0x0001
	 */
	struct FEventCustomAnimationStateChanged
	{
	public:
		ENPCCustomAnimationState                                   CustomAnimationState;                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCapstanArmIntentChanged
	 * Size -> 0x0004
	 */
	struct FEventCapstanArmIntentChanged
	{
	public:
		float                                                      NewIntent;                                               // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerObjectUsageTelemetryFragmentInput
	 * Size -> 0x0008
	 */
	struct FPlayerObjectUsageTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class UObject>                              ObjectBeingUsed;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerObjectUsageBaseTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FPlayerObjectUsageBaseTelemetryFragment
	{
	public:
		class FString                                              ObjectId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCapstanUsageEndTelemetryEvent
	 * Size -> 0x000C
	 */
	struct FPlayerCapstanUsageEndTelemetryEvent
	{
	public:
		int32_t                                                    NumCurrentUsers;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanVelocity;                                         // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanState;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCapstanUsageStartTelemetryEvent
	 * Size -> 0x000C
	 */
	struct FPlayerCapstanUsageStartTelemetryEvent
	{
	public:
		int32_t                                                    NumCurrentUsers;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanVelocity;                                         // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CapstanState;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCannonConcealedAnimData
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationCannonConcealedAnimData
	{
	public:
		class UAnimSequence*                                       InCannonIdle;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       FiredFromCannon;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCannonAnimData
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationCannonAnimData
	{
	public:
		class UBlendSpace1D*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBlendSpace1D*>                               Idle;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UBlendSpace1D*                                       Fire;                                                    // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       Outof;                                                   // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAICharacterNewWaveGroupSpawned
	 * Size -> 0x0001
	 */
	struct FAthenaAICharacterNewWaveGroupSpawned
	{
	public:
		unsigned char                                              UnknownData_7BTM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAICharacterWasKilledWhileCursed
	 * Size -> 0x0018
	 */
	struct FAthenaAICharacterWasKilledWhileCursed
	{
	public:
		TArray<EPlayerCurseTag>                                    Curses;                                                  // 0x0000(0x0010) ZeroConstructor
		class AActor*                                              Instigator;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaPlayerZonePenetrationTrackerUpdateEvent
	 * Size -> 0x0020
	 */
	struct FAthenaPlayerZonePenetrationTrackerUpdateEvent
	{
	public:
		class AActor*                                              PenetratedActor;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Player;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PenetrationT3D;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PenetrationTHorizontal;                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PenetrationTVertical;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WHVO[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BlinkStrafeEvent
	 * Size -> 0x0001
	 */
	struct FBlinkStrafeEvent
	{
	public:
		unsigned char                                              UnknownData_PYBF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaCharacterDodgeEvent
	 * Size -> 0x000C
	 */
	struct FAthenaCharacterDodgeEvent
	{
	public:
		struct FVector                                             DodgeDirection;                                          // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventDeathBlackFadeStopped
	 * Size -> 0x0001
	 */
	struct FEventDeathBlackFadeStopped
	{
	public:
		unsigned char                                              UnknownData_BIN1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventDeathBlackFadeTriggered
	 * Size -> 0x0004
	 */
	struct FEventDeathBlackFadeTriggered
	{
	public:
		unsigned char                                              UnknownData_MAAK[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventDeathCameraDeactivated
	 * Size -> 0x0001
	 */
	struct FEventDeathCameraDeactivated
	{
	public:
		unsigned char                                              UnknownData_R0IA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventDeathCameraActivated
	 * Size -> 0x0004
	 */
	struct FEventDeathCameraActivated
	{
	public:
		float                                                      CameraDuration;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterModelsReplaced
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterModelsReplaced
	{
	public:
		class AActor*                                              PlayerCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterExitedShip
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterExitedShip
	{
	public:
		class AActor*                                              PlayerCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterEnteredShip
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterEnteredShip
	{
	public:
		class AActor*                                              PlayerCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterLeft
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterLeft
	{
	public:
		class AAthenaPlayerCharacter*                              AthenaCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterJoined
	 * Size -> 0x0008
	 */
	struct FEventPlayerCharacterJoined
	{
	public:
		class AAthenaPlayerCharacter*                              AthenaCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterFootExitWater
	 * Size -> 0x0020
	 */
	struct FEventCharacterFootExitWater
	{
	public:
		struct FCharacterFootWaterImpactResult                     Result;                                                  // 0x0000(0x0020) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.EventCharacterFootEnterWater
	 * Size -> 0x0020
	 */
	struct FEventCharacterFootEnterWater
	{
	public:
		struct FCharacterFootWaterImpactResult                     Result;                                                  // 0x0000(0x0020) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.EventCharacterFootImpact
	 * Size -> 0x00D0
	 */
	struct FEventCharacterFootImpact
	{
	public:
		struct FCharacterFootImpactResult                          Result;                                                  // 0x0000(0x00D0) BlueprintVisible, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.ClientMeleeHitRegInfoTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FClientMeleeHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    NumHits;                                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HQD4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HitObjectId;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectType;                                           // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitActorName;                                            // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsDamageBlocked;                                         // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1SBX[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMeleeHitRegInfoTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FServerMeleeHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    NumHits;                                                 // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KHLU[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HitObjectId;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectType;                                           // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitActorName;                                            // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsDamageBlocked;                                         // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsDamageConfirmed;                                       // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HasPerformedKnockBack;                                   // 0x004A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HasPerformedStun;                                        // 0x004B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_F1U1[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MeleeWeaponAttackTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FMeleeWeaponAttackTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              AttackType;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    ComboIndex;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OH83[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WeaponName;                                              // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      RequesterLatencyMs;                                      // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RequesterTimeOffset;                                     // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeleeAttackMoveSpeedValidationTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FMeleeAttackMoveSpeedValidationTelemetryEvent
	{
	public:
		EMeleeAttackMoveCorrectionReason                           CorrectionReason;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4SRX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AllowedWindowStartTimeSeconds;                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AllowedWindowFinishTimeSeconds;                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentAttackClientTimeSeconds;                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AIKnockbackActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FAIKnockbackActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FVector                                             KnockbackDirection;                                      // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      KnockbackSpeed;                                          // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      KnockbackAccel;                                          // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EAIKnockbackStrengthType                                   KnockbackStrengthType;                                   // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PFKL[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ControlObjectActionStateSerialisableData
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FControlObjectActionStateSerialisableData : public FActionStateSerialisableData
	{
	public:
		struct FVector                                             UndockLocation;                                          // 0x0030(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor
		bool                                                       UndockRequested;                                         // 0x003C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3LAN[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AIShipCaptainActionStateSerialisableData
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	struct FAIShipCaptainActionStateSerialisableData : public FControlObjectActionStateSerialisableData
	{	};

	/**
	 * ScriptStruct Athena.BeingRetractedActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FBeingRetractedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class USceneComponent*                                     RetractingComponent;                                     // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapturedByKrakenActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FCapturedByKrakenActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        Tentacle;                                                // 0x0030(0x0014)
		unsigned char                                              UnknownData_XX5O[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CharacterActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FCharacterActionStateConstructionInfo : public FActionStateConstructionInfo
	{
	public:
		class AAthenaCharacter*                                    CharacterOwner;                                          // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientConditionsCompleteNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FClientConditionsCompleteNetworkEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.DockToObjectActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FDockToObjectActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetObjectPtr                                       DockToObject;                                            // 0x0030(0x0014)
		bool                                                       IsInteractingActorFemale;                                // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G0R1[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ControlObjectActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	struct FControlObjectActionStateConstructionInfo : public FDockToObjectActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.ControlPulleyActionStateConstructionInfo
	 * Size -> 0x0048 (FullSize[0x0090] - InheritedSize[0x0048])
	 */
	struct FControlPulleyActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		EControllableObjectType                                    ControllableType;                                        // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_77ES[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AnalogInputId;                                           // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FControlPulleyActionStateParams                     ActionStateParamsOverride;                               // 0x0058(0x0034)
		bool                                                       UseActionStateParamsOverride;                            // 0x008C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8XFZ[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmoteActionStateConstructionInfo
	 * Size -> 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
	 */
	struct FEmoteActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FEmoteData                                          EmoteData;                                               // 0x0030(0x00A0)
		class FName                                                EmoteIdentifier;                                         // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ForcedEmote;                                             // 0x00D8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GVV8[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmoteActionStateParams
	 * Size -> 0x0001
	 */
	struct FEmoteActionStateParams
	{
	public:
		unsigned char                                              UnknownData_OF04[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FiredFromActorActionStateConstructionInfo
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FFiredFromActorActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        FiringActor;                                             // 0x0030(0x0014)
		struct FVector                                             LaunchVelocity;                                          // 0x0044(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.LaunchedFromKrakenActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
	 */
	struct FLaunchedFromKrakenActionStateConstructionInfo : public FFiredFromActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        Tentacle;                                                // 0x0050(0x0014)
		unsigned char                                              UnknownData_FQ3X[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IngestedByKrakenActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FIngestedByKrakenActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        Tentacle;                                                // 0x0030(0x0014)
		unsigned char                                              UnknownData_KIS5[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractLoadableActionStateConstructionInfo
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	struct FInteractLoadableActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        LoadableObject;                                          // 0x0030(0x0014)
		struct FNetActorPtr                                        Interactable;                                            // 0x0044(0x0014)
		bool                                                       ControllingLoadable;                                     // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MBTG[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DefaultItemDesc;                                         // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventTriggerOverlayAction
	 * Size -> 0x0010
	 */
	struct FEventTriggerOverlayAction
	{
	public:
		class UObject*                                             InteractObject;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EInteractableOverlayActionType                             InteractableActionType;                                  // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SY4T[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InvertRadialYInputEvent
	 * Size -> 0x0001
	 */
	struct FInvertRadialYInputEvent
	{
	public:
		bool                                                       InvertRadialYInputEvent;                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EnableMovementDuringRadialEvent
	 * Size -> 0x0001
	 */
	struct FEnableMovementDuringRadialEvent
	{
	public:
		bool                                                       EnableMovementDuringRadial;                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TransitionLadderActionStateConstructionInfo
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	struct FTransitionLadderActionStateConstructionInfo : public FDockToObjectActionStateConstructionInfo
	{
	public:
		float                                                      StartingInteractionHeight;                               // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ClimbId;                                                 // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ELadderTransitionMode                                      LadderTransitionMode;                                    // 0x004D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IL7E[0x2];                                   // 0x004E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderDefinition                                   LadderDefinition;                                        // 0x0050(0x001C)
		unsigned char                                              UnknownData_NAHK[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LinearTransitionLadderActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	struct FLinearTransitionLadderActionStateConstructionInfo : public FTransitionLadderActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.MeleeBlockingActionStateConstructionInfo
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	struct FMeleeBlockingActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        WieldedItem;                                             // 0x0030(0x0014)
		unsigned char                                              UnknownData_E78D[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InputID;                                                 // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      BlockMovementLockTime;                                   // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NWF1[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MeleeBlockingActionStateParams
	 * Size -> 0x0001
	 */
	struct FMeleeBlockingActionStateParams
	{
	public:
		unsigned char                                              UnknownData_MA1N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MigrationActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FMigrationActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		bool                                                       EnableMigrationUI;                                       // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8M82[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientMigrationEndedEvent
	 * Size -> 0x0001
	 */
	struct FClientMigrationEndedEvent
	{
	public:
		unsigned char                                              UnknownData_HKEX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMigrationStateChanged
	 * Size -> 0x0001
	 */
	struct FServerMigrationStateChanged
	{
	public:
		unsigned char                                              UnknownData_Q0TJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MigrationSetupCompleteNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FMigrationSetupCompleteNetworkEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.ModalInteractionActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FModalInteractionActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        InteractionProxy;                                        // 0x0030(0x0014)
		unsigned char                                              UnknownData_MEW7[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ModalInteractionActionStateSerialisableData
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FModalInteractionActionStateSerialisableData : public FActionStateSerialisableData
	{
	public:
		struct FNetActorPtr                                        Interaction;                                             // 0x0030(0x0014)
		unsigned char                                              UnknownData_KGC7[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MoveToLocationActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FMoveToLocationActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class USceneComponent*                                     RelativeToComponent;                                     // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TargetLocation;                                          // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_M3Z9[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RepairObjectActionStateConstructionInfo
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	struct FRepairObjectActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetSubObjectPtr                                    RepairableObject;                                        // 0x0030(0x0014)
		struct FNetActorPtr                                        WieldedItem;                                             // 0x0044(0x0014)
		class UClass*                                              InputID;                                                 // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RepairObjectActionStateSerialisableData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FRepairObjectActionStateSerialisableData : public FActionStateSerialisableData
	{
	public:
		bool                                                       SuccessfulRepair;                                        // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GR3Z[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerActionStateClientStartedAckNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FServerActionStateClientStartedAckNetworkEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.ShovelDigActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FShovelDigActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        UsableObject;                                            // 0x0030(0x0014)
		unsigned char                                              UnknownData_9WRP[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SplineTransitionLadderActionFinishedMessage
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSplineTransitionLadderActionFinishedMessage : public FActionStateMessage
	{
	public:
		float                                                      TimeCompleted;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OHFX[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SplineTransitionLadderActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	struct FSplineTransitionLadderActionStateConstructionInfo : public FTransitionLadderActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.StunnedEvent
	 * Size -> 0x000C
	 */
	struct FStunnedEvent
	{
	public:
		bool                                                       Stunned;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ApplyStunAnim;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EStunAnimationType                                         StunAnimType;                                            // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TriggerStunnedVFX;                                       // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Duration;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InterruptMeleeAttacks;                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9KNZ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StunnedActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FStunnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FStunnedActionStateParams                           Params;                                                  // 0x0030(0x0018)
	};

	/**
	 * ScriptStruct Athena.SwallowedByKrakenActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FSwallowedByKrakenActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        Tentacle;                                                // 0x0030(0x0014)
		unsigned char                                              UnknownData_L7K2[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TalkToNPCActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FTalkToNPCActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class UNPCDialogComponent*                                 NPCDialogComp;                                           // 0x0030(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AWDO[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientRequestTeleportCompleteAckNetworkEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FClientRequestTeleportCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		class USceneComponent*                                     Base;                                                    // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            Rotation;                                                // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerTeleportCompleteAckNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FServerTeleportCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		EServerTeleportAckReason                                   Reason;                                                  // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_O81R[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TeleportStageCompletedEvent
	 * Size -> 0x0018
	 */
	struct FTeleportStageCompletedEvent
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Duration;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETeleportActionStateReason                                 Reason;                                                  // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETeleportActionStateStage                                  CompletedStage;                                          // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JHRR[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TeleportActionStateSerialisableData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FTeleportActionStateSerialisableData : public FActionStateSerialisableData
	{
	public:
		bool                                                       IsTeleporting;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5A5W[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UndoRepairActionStateConstructionInfo
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FUndoRepairActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetSubObjectPtr                                    RepairableObject;                                        // 0x0030(0x0014)
		unsigned char                                              UnknownData_GQF8[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InputID;                                                 // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UndoRepairActionStateSerialisableData
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FUndoRepairActionStateSerialisableData : public FActionStateSerialisableData
	{
	public:
		bool                                                       SuccessfulUndo;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5KWZ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseLadderActionStateConstructionInfo
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	struct FUseLadderActionStateConstructionInfo : public FDockToObjectActionStateConstructionInfo
	{
	public:
		float                                                      StartingInteractionHeight;                               // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ClimbId;                                                 // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ECCB[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderDefinition                                   LadderDefinition;                                        // 0x0050(0x001C)
		unsigned char                                              UnknownData_YQ6O[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WaitForDemoResetActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FWaitForDemoResetActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.WaitingToSpawnActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FWaitingToSpawnActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class AActor*                                              StartSpot;                                               // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    StreamOutLevel;                                          // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    StreamInLevel;                                           // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETeleportActionStateReason                                 Reason;                                                  // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ReceiveLoadout;                                          // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ReceiveEntitlement;                                      // 0x0042(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WaitForRelevancy;                                        // 0x0043(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MV4I[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWaitingToSpawnNetRelevantActorsCreated
	 * Size -> 0x0001
	 */
	struct FEventWaitingToSpawnNetRelevantActorsCreated
	{
	public:
		unsigned char                                              UnknownData_FT8I[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRemoveStackableLocomotionActionState
	 * Size -> 0x0004
	 */
	struct FEventRemoveStackableLocomotionActionState
	{
	public:
		unsigned char                                              UnknownData_FJ6I[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAddStackableLocomotionActionState
	 * Size -> 0x0030
	 */
	struct FEventAddStackableLocomotionActionState
	{
	public:
		unsigned char                                              UnknownData_HBJW[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StopUpdatingConstellationVisibility
	 * Size -> 0x0001
	 */
	struct FStopUpdatingConstellationVisibility
	{
	public:
		unsigned char                                              UnknownData_SDOK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StartUpdatingConstellationVisibility
	 * Size -> 0x000C
	 */
	struct FStartUpdatingConstellationVisibility
	{
	public:
		unsigned char                                              UnknownData_O4S0[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConstellationSpawnedEvent
	 * Size -> 0x0010
	 */
	struct FConstellationSpawnedEvent
	{
	public:
		unsigned char                                              UnknownData_IGIT[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSwimmingCreatureShipBite
	 * Size -> 0x0018
	 */
	struct FEventSwimmingCreatureShipBite
	{
	public:
		class AShip*                                               Ship;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             BiteLocation;                                            // 0x0008(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KD6Y[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerTookFlameOfFateEvent
	 * Size -> 0x0018
	 */
	struct FPlayerTookFlameOfFateEvent
	{
	public:
		class AAthenaPlayerCharacter*                              PlayerCharacter;                                         // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             Source;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TV5Z[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerSetFlameOfFateEvent
	 * Size -> 0x0018
	 */
	struct FPlayerSetFlameOfFateEvent
	{
	public:
		class AAthenaPlayerCharacter*                              PlayerCharacter;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             Target;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OEC1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetShipFlameOfFateEvent
	 * Size -> 0x0018
	 */
	struct FSetShipFlameOfFateEvent
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y4HD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Source;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             Ship;                                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetFlameOfFateEvent
	 * Size -> 0x0010
	 */
	struct FSetFlameOfFateEvent
	{
	public:
		EFlameOfFateType                                           FlameOfFateType;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RS2F[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Source;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerRecieveFlameTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerRecieveFlameTelemetryEvent
	{
	public:
		class FString                                              LightSourceId;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LightSourceType;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FlameColour;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerSetFlameOfFateTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerSetFlameOfFateTelemetryEvent
	{
	public:
		class FString                                              LitObjectId;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FlameColour;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LitObjectType;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlinthActivatedEvent
	 * Size -> 0x0001
	 */
	struct FPlinthActivatedEvent
	{
	public:
		unsigned char                                              UnknownData_47RR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeactivateHatchEvent
	 * Size -> 0x0008
	 */
	struct FDeactivateHatchEvent
	{
	public:
		class FName                                                EventID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActivateHatchEvent
	 * Size -> 0x000C
	 */
	struct FActivateHatchEvent
	{
	public:
		class FName                                                EventID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFlameOfFateType                                           FlameSpecificPhobia;                                     // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PTMU[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnRepIsXboxGamePadOnlyServerEvent
	 * Size -> 0x0001
	 */
	struct FOnRepIsXboxGamePadOnlyServerEvent
	{
	public:
		bool                                                       IsXboxGamePadOnlyServer;                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventAthenaCharacterMovementTickFinished
	 * Size -> 0x0001
	 */
	struct FEventAthenaCharacterMovementTickFinished
	{
	public:
		unsigned char                                              UnknownData_H049[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventInitialNetRelevantActorsCreated
	 * Size -> 0x0001
	 */
	struct FEventInitialNetRelevantActorsCreated
	{
	public:
		unsigned char                                              UnknownData_IMQC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHarpoonProjectileClientStateChanged
	 * Size -> 0x0001
	 */
	struct FEventHarpoonProjectileClientStateChanged
	{
	public:
		EHarpoonProjectileState                                    ProjectileState;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingLoadoutUpdatedEvent
	 * Size -> 0x0008
	 */
	struct FClothingLoadoutUpdatedEvent
	{
	public:
		class AActor*                                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmoteLoadoutUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FEmoteLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_YMPS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerChangedShipLoadoutEvent
	 * Size -> 0x0020
	 */
	struct FPlayerChangedShipLoadoutEvent
	{
	public:
		class FString                                              ShipEquippedType;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipEquippedName;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerChangedLoadoutEvent
	 * Size -> 0x0020
	 */
	struct FPlayerChangedLoadoutEvent
	{
	public:
		class FString                                              EquippedType;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EquippedName;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetLoadoutUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FPetLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_IW2V[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MountedWeaponFireAcknowledgeRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMountedWeaponFireAcknowledgeRpc : public FBoxedRpc
	{
	public:
		class UObject*                                             MountedWeaponObject;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MountedWeaponFireRejectionRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMountedWeaponFireRejectionRpc : public FBoxedRpc
	{
	public:
		class UObject*                                             MountedWeaponObject;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ReputationMenuClosedEvent
	 * Size -> 0x0001
	 */
	struct FReputationMenuClosedEvent
	{
	public:
		unsigned char                                              UnknownData_4CM8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenReputationMenuEvent
	 * Size -> 0x0018
	 */
	struct FOpenReputationMenuEvent
	{
	public:
		EReputationNavigationAction                                NavigationAction;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UAPV[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CompanyId;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OpenReputationMenuTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FOpenReputationMenuTelemetryEvent
	{
	public:
		class FString                                              ShopLocation;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              VisitStartDate;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   VisitDuration;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EReputationNavigationAction                                NavigationAction;                                        // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_55G5[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CompanyId;                                               // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventNPCServiceRegistered
	 * Size -> 0x0001
	 */
	struct FEventNPCServiceRegistered
	{
	public:
		unsigned char                                              UnknownData_XCES[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipRestockedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipRestockedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_FV84[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerExitsShopTelemetryEvent
	 * Size -> 0x0060
	 */
	struct FPlayerExitsShopTelemetryEvent
	{
	public:
		class FString                                              ShopLocation;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              VisitStartDate;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   VisitDuration;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZDXL[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShopName;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogName;                                             // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               CatalogId;                                               // 0x0048(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ForcedExit;                                              // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PJJL[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientRequestCameraFadeCompleteAckNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FClientRequestCameraFadeCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		float                                                      AckTimeout;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6138[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerCameraFadeCompleteAckNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FServerCameraFadeCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		EServerCameraFadeAckReason                                 Reason;                                                  // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CIW4[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CampaignCompletedNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FCampaignCompletedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FName                                                Name;                                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmblemUnlockedPopupEvent
	 * Size -> 0x0010
	 */
	struct FEmblemUnlockedPopupEvent
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpAudioDesc*                                     PopUpAudioOverrides;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventEmblemUnlockedNotification
	 * Size -> 0x0058
	 */
	struct FEventEmblemUnlockedNotification
	{
	public:
		class FName                                                CompanyName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FriendlyName;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                EmblemName;                                              // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_S47K[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              EmblemUrl;                                               // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewCostumeEntitlementHelpers
	 * Size -> 0x0001
	 */
	struct FCrewCostumeEntitlementHelpers
	{
	public:
		unsigned char                                              UnknownData_3NUJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementLoadFailedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementLoadFailedTelemetryEvent
	{
	public:
		class FString                                              AssetName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ConsumeEntitlementRequestFailedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FConsumeEntitlementRequestFailedTelemetryEvent
	{
	public:
		EConsumeEntitlementFailureReason                           Reason;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerAttackTelemetryEvent
	 * Size -> 0x0048
	 */
	struct FPlayerAttackTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DamageType;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              WeaponType;                                              // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             TargetPos;                                               // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      DamageDealt;                                             // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Success;                                                 // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IX2F[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerConfigSetBooleanValue
	 * Size -> 0x000C
	 */
	struct FEventPlayerConfigSetBooleanValue
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Value;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0NIP[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerConfigRequestAllConfigsResponse
	 * Size -> 0x0050
	 */
	struct FEventPlayerConfigRequestAllConfigsResponse
	{
	public:
		TMap<class FString, int32_t>                               AllConfigs;                                              // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerConfigRequestAllConfigs
	 * Size -> 0x0001
	 */
	struct FEventPlayerConfigRequestAllConfigs
	{
	public:
		unsigned char                                              UnknownData_BIZD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerTeleportComplete
	 * Size -> 0x0008
	 */
	struct FEventPlayerTeleportComplete
	{
	public:
		class AAthenaPlayerState*                                  PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerWaitingToSpawnComplete
	 * Size -> 0x0008
	 */
	struct FEventPlayerWaitingToSpawnComplete
	{
	public:
		class AAthenaPlayerState*                                  PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerTriggeredTrapPressurePlate
	 * Size -> 0x0001
	 */
	struct FEventPlayerTriggeredTrapPressurePlate
	{
	public:
		unsigned char                                              UnknownData_A82S[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerFellDistance
	 * Size -> 0x0008
	 */
	struct FEventPlayerFellDistance
	{
	public:
		float                                                      FallDamage;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LandingSpeed;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerLeftRainZone
	 * Size -> 0x0001
	 */
	struct FEventPlayerLeftRainZone
	{
	public:
		unsigned char                                              UnknownData_1QP2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredRainZone
	 * Size -> 0x0001
	 */
	struct FEventPlayerEnteredRainZone
	{
	public:
		unsigned char                                              UnknownData_AW7C[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWielderHasExternalLightSource
	 * Size -> 0x0001
	 */
	struct FEventWielderHasExternalLightSource
	{
	public:
		bool                                                       bOn;                                                     // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerTreasureMapSet
	 * Size -> 0x0018
	 */
	struct FEventPlayerTreasureMapSet
	{
	public:
		TWeakObjectPtr<class UTexture>                             MapTexture;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TArray<struct FVector2D>                                   Marks;                                                   // 0x0008(0x0010) BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerUseItemEnd
	 * Size -> 0x0010
	 */
	struct FEventPlayerUseItemEnd
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              UsedItem;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerUseItemStart
	 * Size -> 0x0010
	 */
	struct FEventPlayerUseItemStart
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              UsedItem;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerItemEquip
	 * Size -> 0x0008
	 */
	struct FEventPlayerItemEquip
	{
	public:
		class AActor*                                              EquippedItem;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerDrinkingConsumed
	 * Size -> 0x0004
	 */
	struct FEventPlayerDrinkingConsumed
	{
	public:
		unsigned char                                              UnknownData_4NZ3[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerDrinkingEnd
	 * Size -> 0x0001
	 */
	struct FEventPlayerDrinkingEnd
	{
	public:
		unsigned char                                              UnknownData_6DCI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerDrinkingStart
	 * Size -> 0x0001
	 */
	struct FEventPlayerDrinkingStart
	{
	public:
		unsigned char                                              UnknownData_IK5B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerResetCrewOccurred
	 * Size -> 0x0001
	 */
	struct FEventPlayerResetCrewOccurred
	{
	public:
		unsigned char                                              UnknownData_AJEL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCureAllAilments
	 * Size -> 0x0001
	 */
	struct FEventPlayerCureAllAilments
	{
	public:
		unsigned char                                              UnknownData_CT4X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerRepairObjectEnd
	 * Size -> 0x0008
	 */
	struct FEventPlayerRepairObjectEnd
	{
	public:
		unsigned char                                              UnknownData_WH1T[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerRepairObjectCompleted
	 * Size -> 0x0008
	 */
	struct FEventPlayerRepairObjectCompleted
	{
	public:
		unsigned char                                              UnknownData_IG0P[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerRepairObjectStart
	 * Size -> 0x0008
	 */
	struct FEventPlayerRepairObjectStart
	{
	public:
		unsigned char                                              UnknownData_XT4V[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerSeamlessTravelStarted
	 * Size -> 0x0001
	 */
	struct FEventPlayerSeamlessTravelStarted
	{
	public:
		unsigned char                                              UnknownData_MIT7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerLoggedOut
	 * Size -> 0x0008
	 */
	struct FEventPlayerLoggedOut
	{
	public:
		class AOnlineAthenaPlayerController*                       OnlineAthenaPlayerController;                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventInitialPawnPossessed
	 * Size -> 0x0001
	 */
	struct FEventInitialPawnPossessed
	{
	public:
		unsigned char                                              UnknownData_Z584[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerPawnLeavingGame
	 * Size -> 0x0001
	 */
	struct FEventPlayerPawnLeavingGame
	{
	public:
		unsigned char                                              UnknownData_HGBM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerLoggedIn
	 * Size -> 0x0018
	 */
	struct FEventPlayerLoggedIn
	{
	public:
		class AOnlineAthenaPlayerController*                       OnlineAthenaPlayerController;                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z0UG[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerProvidedInput
	 * Size -> 0x0001
	 */
	struct FEventPlayerProvidedInput
	{
	public:
		unsigned char                                              UnknownData_4CCE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerActionBaseTelemetryFragmentInput
	 * Size -> 0x0018
	 */
	struct FPlayerActionBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class UObject>                              ObjectBeingUsed;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		class FString                                              ActionName;                                              // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerActionBaseTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FPlayerActionBaseTelemetryFragment
	{
	public:
		class FString                                              ObjectId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ActionName;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerItemUsageTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FPlayerItemUsageTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		TWeakObjectPtr<class AActor>                               ItemBeingUsed;                                           // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerItemUsageBaseTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FPlayerItemUsageBaseTelemetryFragment
	{
	public:
		class FString                                              InputID;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemId;                                                  // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TeleportStageCompletedTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FTeleportStageCompletedTelemetryEvent
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Duration;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KVDQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Reason;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CompletedStage;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStatusEffectDeactivatedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPlayerStatusEffectDeactivatedTelemetryEvent
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                StatusName;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStatusEffectActivatedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPlayerStatusEffectActivatedTelemetryEvent
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                StatusName;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerLeftGhostShipTelemetryEvent
	 * Size -> 0x0004
	 */
	struct FPlayerLeftGhostShipTelemetryEvent
	{
	public:
		int32_t                                                    LifetimeInSeconds;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerChangedShipLoadoutTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerChangedShipLoadoutTelemetryEvent
	{
	public:
		class FString                                              ShipEquippedItemType;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipEquippedItemName;                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerChangedLoadoutTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerChangedLoadoutTelemetryEvent
	{
	public:
		class FString                                              EquippedItemType;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EquippedItemName;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerHeroStatUpdatedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPlayerHeroStatUpdatedTelemetryEvent
	{
	public:
		class FString                                              Result;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   Stat;                                                    // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_60K1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerMilestoneUnlockTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPlayerMilestoneUnlockTelemetryEvent
	{
	public:
		class FString                                              MilestoneName;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint64_t                                                   ClassNumber;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientPlayerEmblemUnlockTelemetryEvent
	 * Size -> 0x0008
	 */
	struct FClientPlayerEmblemUnlockTelemetryEvent
	{
	public:
		class FName                                                EmblemName;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerEmoteTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPlayerEmoteTelemetryEvent
	{
	public:
		class FString                                              EmoteName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   EmoteDuration;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DSLG[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerControllerTypeTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerControllerTypeTelemetryEvent
	{
	public:
		EInputControllerType                                       ControllerType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerEncounterEndTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerEncounterEndTelemetryEvent
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerEncounterStartTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerEncounterStartTelemetryEvent
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              EncounteredObjectId;                                     // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EEncounterType                                             EncounterType;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShipRegion                                                ShipRegion;                                              // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LKIX[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EncounterDistance;                                       // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MoveSpeedValidationFailedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FMoveSpeedValidationFailedTelemetryEvent
	{
	public:
		class FString                                              Item;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    SpeedId;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DurationMS;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    IgnoredRequestCount;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CSGP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerTamperedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerTamperedTelemetryEvent
	{
	public:
		uint64_t                                                   TamperFlags;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   ShipRegion;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerSetFootLocationTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerSetFootLocationTelemetryEvent
	{
	public:
		class FString                                              LocationName;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerDepartLocationTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerDepartLocationTelemetryEvent
	{
	public:
		class FString                                              LocationName;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerArriveLocationTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerArriveLocationTelemetryEvent
	{
	public:
		class FString                                              LocationName;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCheatTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerCheatTelemetryEvent
	{
	public:
		class FString                                              CheatSource;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CheatFunction;                                           // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CheatArguments;                                          // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerDeathTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerDeathTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Location;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    LifetimeInSeconds;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PossessCount;                                            // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     SecondsSinceSpawned;                                     // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerHealthChangeTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerHealthChangeTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      CurrentHealth;                                           // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PreviousHealth;                                          // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HealthDelta;                                             // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DIS1[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   PossessCount;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_884T[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     SecondsSinceSpawned;                                     // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerHeartbeatTelemetryEvent
	 * Size -> 0x0048
	 */
	struct FPlayerHeartbeatTelemetryEvent
	{
	public:
		class FString                                              MovementMode;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocationOnShip;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      CurrentHealth;                                           // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActiveTime;                                              // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    IdleTime;                                                // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CurrentStateTime;                                        // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MoveTimeStampReset;                                      // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MoveTimeStampExpired;                                    // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MoveDiscrepancyCorrections;                              // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AverageNetActorConsiderCount;                            // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AverageNetActorEvaluatedCount;                           // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AverageNetActorDormantCount;                             // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerItemUsageEndTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerItemUsageEndTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_3BI4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerItemUsageStartTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerItemUsageStartTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_J5XE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerItemEquipTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerItemEquipTelemetryEvent
	{
	public:
		class FString                                              ItemId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerActionCannonTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerActionCannonTelemetryEvent
	{
	public:
		class FString                                              ProjectileId;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               AttackId;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerActionTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerActionTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_0IIS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerObjectUsageEndTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerObjectUsageEndTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_KTKB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerObjectUsageStartTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerObjectUsageStartTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_SLGH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerSpawnTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FPlayerSpawnTelemetryEvent
	{
	public:
		class FString                                              SpawnPointName;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              IslandName;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   SpawnCount;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterType                                             SpawnType;                                               // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QBA3[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     SpawnDuration;                                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PlayersCrewSize;                                         // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZX2H[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     DistanceToClosestOpponent;                               // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerGameEndTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FPlayerGameEndTelemetryEvent
	{
	public:
		uint32_t                                                   IdleDuration;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   ActiveDuration;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   VoiceChatDuration;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsMigration;                                             // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HadSTTEnabled;                                           // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HadTTSEnabled;                                           // 0x000E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HadTranslationEnabled;                                   // 0x000F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerGameStartTelemetryEvent
	 * Size -> 0x0014
	 */
	struct FPlayerGameStartTelemetryEvent
	{
	public:
		struct FGuid                                               TitleSession;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsMigration;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3YZA[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmissaryLeaderboardScoreUpdatedNetworkEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FEmissaryLeaderboardScoreUpdatedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FName                                                EmissaryAffiliation;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    From;                                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    To;                                                      // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientNPCDialogBeganTelemetryEvent
	 * Size -> 0x0070
	 */
	struct FClientNPCDialogBeganTelemetryEvent
	{
	public:
		struct FGuid                                               NPCInteractionSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              NPCDialogTreeDataAsset;                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCDialogOverrideType;                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCDialogConditionalContext;                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCDialogConditionalContextData;                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCInteracted;                                           // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCInteractedType;                                       // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCDialogExecuteOptionOnServerRpc
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FNPCDialogExecuteOptionOnServerRpc : public FBoxedRpc
	{
	public:
		class UNPCDialogComponent*                                 DialogComponent;                                         // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		class UClass*                                              OverrideType;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    CurrentDialog;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		int32_t                                                    CurrentOption;                                           // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientNPCDialogOptionUsedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientNPCDialogOptionUsedTelemetryEvent
	{
	public:
		class FString                                              DialogOptionName;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ReplacementDialogue
	 * Size -> 0x0038
	 */
	struct FReplacementDialogue
	{
	public:
		class FText                                                ReplacementText;                                         // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_92FQ[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PioneerObjectiveCompleteNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FPioneerObjectiveCompleteNetworkEvent : public FNetworkEventStruct
	{
	public:
		bool                                                       Granted;                                                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3MJ3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateProfile
	 * Size -> 0x00F8
	 */
	struct FPirateProfile
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FPirateDescription                                  Description;                                             // 0x0078(0x0080)
	};

	/**
	 * ScriptStruct Athena.PlayerInfoRequest
	 * Size -> 0x0001
	 */
	struct FPlayerInfoRequest
	{
	public:
		unsigned char                                              UnknownData_JE6Y[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerInfoResponse
	 * Size -> 0x0070
	 */
	struct FPlayerInfoResponse
	{
	public:
		class FText                                                GamerTag;                                                // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_C661[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Title;                                                   // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_6UHZ[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PlayerManagerServiceUninitialisedEvent
	 * Size -> 0x0010
	 */
	struct FPlayerManagerServiceUninitialisedEvent
	{
	public:
		unsigned char                                              UnknownData_B9TN[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerManagerServiceInitialisedEvent
	 * Size -> 0x0010
	 */
	struct FPlayerManagerServiceInitialisedEvent
	{
	public:
		unsigned char                                              UnknownData_APG1[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardRequestSucceededNotificationEvent
	 * Size -> 0x0008
	 */
	struct FRewardRequestSucceededNotificationEvent
	{
	public:
		unsigned char                                              UnknownData_3F22[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardRequestFailedNotificationEvent
	 * Size -> 0x0001
	 */
	struct FRewardRequestFailedNotificationEvent
	{
	public:
		unsigned char                                              UnknownData_39ZT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MilestoneCompletionNetworkEvent
	 * Size -> 0x00A0 (FullSize[0x00B0] - InheritedSize[0x0010])
	 */
	struct FMilestoneCompletionNetworkEvent : public FNetworkEventStruct
	{
	public:
		struct FGuid                                               AlignmentId;                                             // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		uint64_t                                                   Progress;                                                // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Alignment;                                               // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Level;                                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ShipName;                                                // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AlignmentKey;                                            // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                ScrambledShipName;                                       // 0x0078(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_6P7B[0x20];                                  // 0x0090(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.RewardGrantedNetworkEvent
	 * Size -> 0x0098 (FullSize[0x00A8] - InheritedSize[0x0010])
	 */
	struct FRewardGrantedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              RewardId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DOSB[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   CurrencyAmount;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   NumLevels;                                               // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FString>                                      Entitlements;                                            // 0x0040(0x0010) ZeroConstructor
		class FString                                              DeferralReason;                                          // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipName;                                                // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                ScrambledShipName;                                       // 0x0070(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_U55R[0x20];                                  // 0x0088(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.XPGrantedNetworkEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FXPGrantedNetworkEvent : public FNetworkEventStruct
	{
	public:
		uint32_t                                                   XPGranted;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   CurrentLevel;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   CurrentXP;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_49IP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CurrencyGrantedNetworkEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FCurrencyGrantedNetworkEvent : public FNetworkEventStruct
	{
	public:
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9FTD[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Amount;                                                  // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                EmissaryAffiliation;                                     // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      EmissaryMultiplier;                                      // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RewardId;                                                // 0x0024(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FVNG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplySingleStickSettings
	 * Size -> 0x0001
	 */
	struct FEventApplySingleStickSettings
	{
	public:
		EUseSingleStick                                            UseSingleStick;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStatsDispatcherSettings
	 * Size -> 0x001C
	 */
	struct FPlayerStatsDispatcherSettings
	{
	public:
		float                                                      DispatchFrequencySeconds;                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   NumOfCachedValuesToTriggerFlush;                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PollIntervalSeconds;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BatchWindowMilliseconds;                                 // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   MaxBatchMessageNumberOfStats;                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   BatchesPerSecond;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   BurstCapacity;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StatSingleMessage
	 * Size -> 0x0080
	 */
	struct FStatSingleMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		uint64_t                                                   Value;                                                   // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StatBatchMessageValues
	 * Size -> 0x0028
	 */
	struct FStatBatchMessageValues
	{
	public:
		TArray<uint64_t>                                           Values;                                                  // 0x0000(0x0010) ZeroConstructor
		bool                                                       ApplyShipProgression;                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KM13[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               ShipId;                                                  // 0x0014(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4YNB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StatBatchMessage
	 * Size -> 0x0148
	 */
	struct FStatBatchMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FPirateIdentity                                     Captain;                                                 // 0x0078(0x0078)
		EPlayMode                                                  PlayMode;                                                // 0x00F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x00F1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8P8V[0x6];                                   // 0x00F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<uint32_t, struct FStatBatchMessageValues>             StatIds;                                                 // 0x00F8(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EnableObjectLeakDetectionTelemetryRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FEnableObjectLeakDetectionTelemetryRpc : public FBoxedRpc
	{
	public:
		float                                                      Interval;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PYUD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ObjectLeakDetectionDataReceivedEvent
	 * Size -> 0x0018
	 */
	struct FObjectLeakDetectionDataReceivedEvent
	{
	public:
		class UNetConnection*                                      Connection;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<unsigned char>                                      DataBlob;                                                // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ObjectLeakDetectionTelemetryRpc
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FObjectLeakDetectionTelemetryRpc : public FBoxedRpc
	{
	public:
		TArray<unsigned char>                                      DataBlob;                                                // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestWalletBalanceUpdateHUDEvent
	 * Size -> 0x0001
	 */
	struct FRequestWalletBalanceUpdateHUDEvent
	{
	public:
		unsigned char                                              UnknownData_RJTI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HUDWalletBalance
	 * Size -> 0x0048
	 */
	struct FHUDWalletBalance
	{
	public:
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_083W[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayBalance;                                          // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_7R24[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		uint32_t                                                   Balance;                                                 // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_09BD[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UpdateWalletBalanceHUDEvent
	 * Size -> 0x0010
	 */
	struct FUpdateWalletBalanceHUDEvent
	{
	public:
		TArray<struct FHUDWalletBalance>                           Balances;                                                // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ArmoryChestEquipItemEvent
	 * Size -> 0x0010
	 */
	struct FArmoryChestEquipItemEvent
	{
	public:
		class UClass*                                              ItemDesc;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    SlotIndex;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UAW6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestClosePossessionsChestEvent
	 * Size -> 0x0001
	 */
	struct FRequestClosePossessionsChestEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingChestCloseRequestEvent
	 * Size -> 0x0001
	 */
	struct FClothingChestCloseRequestEvent
	{
	public:
		struct FRequestClosePossessionsChestEvent                  ClosePossessionsChestEvent;                              // 0x0000(0x0001)
	};

	/**
	 * ScriptStruct Athena.RequestOpenPossessionsChestEvent
	 * Size -> 0x0018
	 */
	struct FRequestOpenPossessionsChestEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RS52[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Categories;                                              // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ClothingChestOpenRequestEvent
	 * Size -> 0x0020
	 */
	struct FClothingChestOpenRequestEvent
	{
	public:
		struct FRequestOpenPossessionsChestEvent                   OpenPossessionsChestEvent;                               // 0x0000(0x0018)
		class AActor*                                              Interaction;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingChestUnequipEmoteEvent
	 * Size -> 0x0008
	 */
	struct FClothingChestUnequipEmoteEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingChestEquipEmoteEvent
	 * Size -> 0x0010
	 */
	struct FClothingChestEquipEmoteEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    Index;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IHZR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClothingChestChangeClothingEvent
	 * Size -> 0x0020
	 */
	struct FClothingChestChangeClothingEvent
	{
	public:
		TArray<class UClass*>                                      Adds;                                                    // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
		TArray<class UClass*>                                      Removes;                                                 // 0x0010(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ClothingChestUnequipClothingEvent
	 * Size -> 0x0008
	 */
	struct FClothingChestUnequipClothingEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingChestEquipClothingEvent
	 * Size -> 0x0008
	 */
	struct FClothingChestEquipClothingEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EquipmentChestEquipItemEvent
	 * Size -> 0x0008
	 */
	struct FEquipmentChestEquipItemEvent
	{
	public:
		class UClass*                                              ItemDesc;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestNamePetFeedbackEvent
	 * Size -> 0x0001
	 */
	struct FPetChestNamePetFeedbackEvent
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PetChestNamePetEvent
	 * Size -> 0x0010
	 */
	struct FPetChestNamePetEvent
	{
	public:
		class FString                                              PetName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestCloseRequestEvent
	 * Size -> 0x0001
	 */
	struct FPetChestCloseRequestEvent
	{
	public:
		struct FRequestClosePossessionsChestEvent                  ClosePossessionsChestEvent;                              // 0x0000(0x0001)
	};

	/**
	 * ScriptStruct Athena.PetChestOpenRequestEvent
	 * Size -> 0x0020
	 */
	struct FPetChestOpenRequestEvent
	{
	public:
		struct FRequestOpenPossessionsChestEvent                   OpenPossessionsChestEvent;                               // 0x0000(0x0018)
		class AActor*                                              Interaction;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestRemovePetEvent
	 * Size -> 0x0010
	 */
	struct FPetChestRemovePetEvent
	{
	public:
		TArray<class UClass*>                                      Removes;                                                 // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PetChestUnequipPetEvent
	 * Size -> 0x0008
	 */
	struct FPetChestUnequipPetEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestEquipPetEvent
	 * Size -> 0x0008
	 */
	struct FPetChestEquipPetEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestSuccessfulNameChangeTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPetChestSuccessfulNameChangeTelemetryEvent
	{
	public:
		class FString                                              PetName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PetCategory;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PetVariantName;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestSwapToSavedLoadoutEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationChestSwapToSavedLoadoutEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestUpdateSavedLoadoutEvent
	 * Size -> 0x0008
	 */
	struct FShipCustomizationChestUpdateSavedLoadoutEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestLoadoutUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationChestLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_OUW3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestUnequipShipCustomizationEvent
	 * Size -> 0x0008
	 */
	struct FShipCustomizationChestUnequipShipCustomizationEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestEquipShipCustomizationEvent
	 * Size -> 0x0008
	 */
	struct FShipCustomizationChestEquipShipCustomizationEvent
	{
	public:
		class UClass*                                              Desc;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipFlagCustomizationChestEndedInteractionEvent
	 * Size -> 0x0001
	 */
	struct FShipFlagCustomizationChestEndedInteractionEvent
	{
	public:
		unsigned char                                              UnknownData_YH6X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PuzzleVaultKeyUsedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPuzzleVaultKeyUsedTelemetryEvent
	{
	public:
		struct FGuid                                               VaultId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                VaultType;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                VaultKeyUsed;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PuzzleVaultStartedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPuzzleVaultStartedTelemetryEvent
	{
	public:
		struct FGuid                                               VaultId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                VaultType;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PuzzleVaultCompletedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FPuzzleVaultCompletedTelemetryEvent
	{
	public:
		struct FGuid                                               VaultId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                VaultType;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventEmissaryFlagMeshChanged
	 * Size -> 0x0040
	 */
	struct FEventEmissaryFlagMeshChanged
	{
	public:
		struct FEmissaryFlagMeshReferences                         EmissaryFlagMeshReferences;                              // 0x0000(0x0020)
		struct FStringAssetReference                               EmissaryFlotsamSpawnDataAsset;                           // 0x0020(0x0010) ZeroConstructor
		struct FStringAssetReference                               EmissaryFlagTextureReference;                            // 0x0030(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventSailFullyRaised
	 * Size -> 0x0001
	 */
	struct FEventSailFullyRaised
	{
	public:
		unsigned char                                              UnknownData_NEMQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSailFullyLowered
	 * Size -> 0x0001
	 */
	struct FEventSailFullyLowered
	{
	public:
		unsigned char                                              UnknownData_Z3U3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSailLostPerfectWind
	 * Size -> 0x0001
	 */
	struct FEventSailLostPerfectWind
	{
	public:
		unsigned char                                              UnknownData_SB2G[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSailGotPerfectWind
	 * Size -> 0x0001
	 */
	struct FEventSailGotPerfectWind
	{
	public:
		unsigned char                                              UnknownData_ZZVW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipOnFireEndTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipOnFireEndTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_RHTQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipOnFireBeginTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipOnFireBeginTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_HWZG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipMastCollapseStateTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipMastCollapseStateTelemetryEvent
	{
	public:
		bool                                                       MastCollapsedState;                                      // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipUndoRepairTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FShipUndoRepairTelemetryEvent
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             UndoRepairLocation;                                      // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VU70[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShipPart;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UndoRepairPercentage;                                    // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipRepairTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FShipRepairTelemetryEvent
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             DamageLocation;                                          // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_95V4[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RepairedShipPart;                                        // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RepairPercentage;                                        // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipDamagedTelemetryEvent
	 * Size -> 0x0048
	 */
	struct FShipDamagedTelemetryEvent
	{
	public:
		class FString                                              DamageType;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             DamageLocation;                                          // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YVAD[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DamagedShipPart;                                         // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               AttackId;                                                // 0x0034(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XGUJ[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipHeartbeatTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FShipHeartbeatTelemetryEvent
	{
	public:
		float                                                      Speed;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Yaw;                                                     // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InternalWaterLevel;                                      // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FireCellsActive;                                         // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipDestroyedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipDestroyedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_PW94[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipSpawnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipSpawnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_K7GV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStatueThreatWasDefeated
	 * Size -> 0x0010
	 */
	struct FEventStatueThreatWasDefeated
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              DirectInstigator;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventStatueThreatWasDamaged
	 * Size -> 0x0058
	 */
	struct FEventStatueThreatWasDamaged
	{
	public:
		struct FImpactDamageEvent                                  ImpactDamageEvent;                                       // 0x0000(0x0058)
	};

	/**
	 * ScriptStruct Athena.MermaidStatueDespawnedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FMermaidStatueDespawnedTelemetryEvent
	{
	public:
		class FString                                              MermaidStatueId;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              MermaidStatueDespawnReason;                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FGuid>                                       Crews;                                                   // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MermaidStatueSpawnTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FMermaidStatueSpawnTelemetryEvent
	{
	public:
		class FString                                              LocationName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              MermaidStatueId;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              MermaidStatueClass;                                      // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventStormLightningImpact
	 * Size -> 0x0010
	 */
	struct FEventStormLightningImpact
	{
	public:
		struct FVector                                             ImpactPoint;                                             // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      TimeTillImpact;                                          // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NewTitlesAvailableToBuyNotificationEvent
	 * Size -> 0x0010
	 */
	struct FNewTitlesAvailableToBuyNotificationEvent
	{
	public:
		unsigned char                                              UnknownData_JXF2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TutorialEventControlledObjectDestroyed
	 * Size -> 0x0008
	 */
	struct FTutorialEventControlledObjectDestroyed
	{
	public:
		class ATutorialEventControlledObject*                      TutorialEventControlledObject;                           // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TutorialEventControlledObjectCreated
	 * Size -> 0x0008
	 */
	struct FTutorialEventControlledObjectCreated
	{
	public:
		class ATutorialEventControlledObject*                      TutorialEventControlledObject;                           // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OnHandleBackwardMovementStopped
	 * Size -> 0x0001
	 */
	struct FOnHandleBackwardMovementStopped
	{
	public:
		unsigned char                                              UnknownData_8FKI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnHandleBackwardMovementStarted
	 * Size -> 0x0001
	 */
	struct FOnHandleBackwardMovementStarted
	{
	public:
		unsigned char                                              UnknownData_1LU7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnHandleForwardMovementStopped
	 * Size -> 0x0001
	 */
	struct FOnHandleForwardMovementStopped
	{
	public:
		unsigned char                                              UnknownData_7JX9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnHandleForwardMovementStarted
	 * Size -> 0x0001
	 */
	struct FOnHandleForwardMovementStarted
	{
	public:
		unsigned char                                              UnknownData_ONQD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBucketEmptyTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerBucketEmptyTelemetryEvent
	{
	public:
		struct FGuid                                               ScoopID;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              EmptyBucketTo;                                           // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBucketScoopTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FPlayerBucketScoopTelemetryEvent
	{
	public:
		class FString                                              BucketContents;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               ScoopID;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ScoopSource;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      ScoopVolume;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WGYV[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseItemOnServerRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FUseItemOnServerRpc : public FBoxedRpc
	{
	public:
		class AWieldableItem*                                      Item;                                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestBucketStateRpc
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FRequestBucketStateRpc : public FUseItemOnServerRpc
	{
	public:
		EBucketState                                               RequestedBucketState;                                    // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4IGX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RejectGrenadeThrowRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FRejectGrenadeThrowRpc : public FBoxedRpc
	{
	public:
		class AGrenade*                                            Grenade;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ThrowGrenadeMulticastRpc
	 * Size -> 0x0048 (FullSize[0x0058] - InheritedSize[0x0010])
	 */
	struct FThrowGrenadeMulticastRpc : public FBoxedRpc
	{
	public:
		class AActor*                                              Wielder;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AGrenade*                                            Grenade;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             ServerThrowLocation;                                     // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             LaunchVelocity;                                          // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              ThrownProjectileType;                                    // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		float                                                      FirstPersonScaleModifier;                                // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ProjectileGravityScale;                                  // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             FirstPersonThrowOffset;                                  // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseVisualThrowOffset;                                    // 0x0054(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_C6XL[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ThrowGrenadeRpc
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FThrowGrenadeRpc : public FBoxedRpc
	{
	public:
		struct FVector                                             RelativeLocalThrowLocation;                              // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            LocalLaunchAngle;                                        // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      LocalLaunchSpeed;                                        // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             LocalWielderVelocity;                                    // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.FireLaunchableShotRpc
	 * Size -> 0x00E8 (FullSize[0x0100] - InheritedSize[0x0018])
	 */
	struct FFireLaunchableShotRpc : public FUseItemOnServerRpc
	{
	public:
		unsigned char                                              UnknownData_080K[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFireRequest                                        Request;                                                 // 0x0020(0x00B0) ContainsInstancedReference
		class ULaunchableShotActionComponent*                      Action;                                                  // 0x00D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             LocalWielderVelocity;                                    // 0x00D8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7LMT[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    StartTime;                                               // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    StopTime;                                                // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B1SU[0x8];                                   // 0x00F8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnLaunchableShotRpc
	 * Size -> 0x0048 (FullSize[0x0060] - InheritedSize[0x0018])
	 */
	struct FSpawnLaunchableShotRpc : public FUseItemOnServerRpc
	{
	public:
		unsigned char                                              UnknownData_RXW1[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          SpawnTransform;                                          // 0x0020(0x0030) IsPlainOldData, NoDestructor
		class ULaunchableShotActionComponent*                      Action;                                                  // 0x0050(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4LL0[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLanternIsLightOnStateChanged
	 * Size -> 0x0018
	 */
	struct FEventLanternIsLightOnStateChanged
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              InputID;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       IsLightOn;                                               // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_R2HX[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FireWeaponOnServerRpc
	 * Size -> 0x00B8 (FullSize[0x00D0] - InheritedSize[0x0018])
	 */
	struct FFireWeaponOnServerRpc : public FUseItemOnServerRpc
	{
	public:
		unsigned char                                              UnknownData_QJKQ[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFireRequest                                        FireRequest;                                             // 0x0020(0x00B0) ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.EventProjectileWeaponFire
	 * Size -> 0x000C
	 */
	struct FEventProjectileWeaponFire
	{
	public:
		unsigned char                                              UnknownData_0WX8[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventProjectileWeaponReload
	 * Size -> 0x0001
	 */
	struct FEventProjectileWeaponReload
	{
	public:
		unsigned char                                              UnknownData_FSMR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponHitScanShotTelemetryEvent
	 * Size -> 0x0098
	 */
	struct FProjectileWeaponHitScanShotTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		double                                                     ClientSentTimeStamp;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     ServerTimeStamp;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ClientHitActorTypeName;                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ClientHitActorSpecificClassName;                         // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ServerHitActorTypeName;                                  // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ServerHitActorSpecificClassName;                         // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipShooterIsStandingOn;                                 // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipTargetIsStandingOn;                                  // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DamagerType;                                             // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       HasInaccuracySeedMismatch;                               // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientAgreedFirstTime_Unimportant;              // 0x0091(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientAgreedFirstTime_Important;                // 0x0092(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientDisagreedFirstTime_Unimportant;           // 0x0093(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientDisagreedFirstTime_Important_NoCorrectionAttempted; // 0x0094(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientDisagreedFirstTime_Important_ClientMissBelieved; // 0x0095(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientDisagreedFirstTime_Important_RewindEstimation_Corrected; // 0x0096(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerAndClientDisagreedFirstTime_Important_RewindEstimation_StillDisagrees; // 0x0097(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFireBelieveClientMissesTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FProjectileWeaponFireBelieveClientMissesTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		double                                                     ClientSentTimeStamp;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     ServerTimeStamp;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFireInaccuracySeedMismatchTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FProjectileWeaponFireInaccuracySeedMismatchTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    ClientSeed;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ServerSeed;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFireEnhancedClientRewindEstimationTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FProjectileWeaponFireEnhancedClientRewindEstimationTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		double                                                     ClientSentTimeStamp;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     ServerTimeStamp;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     CorrectedServerTimeStamp;                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumCorrectedProjectiles;                                 // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumStillMissingProjectiles;                              // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFireAimClampTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FProjectileWeaponFireAimClampTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DamagerType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      RequesterLatencyMs;                                      // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             ClampedByAmmount;                                        // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      WantedDistance;                                          // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U4ZW[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFireStatsTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FProjectileWeaponFireStatsTelemetryEvent
	{
	public:
		float                                                      AimPositionDifference;                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AimPositionCorrection;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LatencyMs;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               AttackId;                                                // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0EB7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WeaponType;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileWeaponFiredTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FProjectileWeaponFiredTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               TelemetryAttackId;                                       // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DamagerType;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              WeaponName;                                              // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       WasLoaded;                                               // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WasAiming;                                               // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZLII[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RequesterLatencyMs;                                      // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RequesterTimeOffset;                                     // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PA7U[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeaponProjectileMaxIterationsTelemetryEvent
	 * Size -> 0x001C
	 */
	struct FWeaponProjectileMaxIterationsTelemetryEvent
	{
	public:
		int32_t                                                    MaxSimulationIterations;                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinTickTimeSecs;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxSimulationTimeStep;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               TelemetryAttackId;                                       // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShovelTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FShovelTelemetryEvent
	{
	public:
		class FString                                              DigType;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Terrain;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldSnapshot
	 * Size -> 0x0010
	 */
	struct FWorldSnapshot
	{
	public:
		unsigned char                                              UnknownData_GLNX[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Version;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActorStateData
	 * Size -> 0x0020
	 */
	struct FActorStateData
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              IslandName;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemStateData
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FItemStateData : public FActorStateData
	{
	public:
		class FString                                              ItemName;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VaultStateData
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FVaultStateData : public FActorStateData
	{
	public:
		bool                                                       IsActive;                                                // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_31X0[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RewardPlinthPosition;                                    // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SkeletonThroneStateData
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FSkeletonThroneStateData : public FActorStateData
	{	};

	/**
	 * ScriptStruct Athena.BeaconStateData
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FBeaconStateData : public FActorStateData
	{
	public:
		EFlameOfFateType                                           FlameOfFate;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsLit;                                                   // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AOKL[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VolcanoActorStateData
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FVolcanoActorStateData : public FActorStateData
	{
	public:
		EVolcanoState                                              State;                                                   // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JNPV[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GeyserStateData
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FGeyserStateData : public FActorStateData
	{
	public:
		EGeyserState                                               State;                                                   // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7SYC[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipwreckStateData
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FShipwreckStateData : public FActorStateData
	{
	public:
		class FString                                              Name;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AmmoChestStateData
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FAmmoChestStateData : public FActorStateData
	{	};

	/**
	 * ScriptStruct Athena.NPCStateData
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FNPCStateData : public FActorStateData
	{
	public:
		class FString                                              Name;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CampfireStateData
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FCampfireStateData : public FActorStateData
	{
	public:
		bool                                                       IsBuilt;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsOnFire;                                                // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsPartiallyBurned;                                       // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H1YZ[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StorageContainerStateData
	 * Size -> 0x0050 (FullSize[0x0070] - InheritedSize[0x0020])
	 */
	struct FStorageContainerStateData : public FActorStateData
	{
	public:
		TMap<class FString, int32_t>                               Items;                                                   // 0x0020(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CannonStateData
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FCannonStateData : public FActorStateData
	{
	public:
		class FString                                              LoadedItemId;                                            // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerCharacterSnapshot
	 * Size -> 0x0014
	 */
	struct FPlayerCharacterSnapshot
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Health;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStateSnapshot
	 * Size -> 0x0048
	 */
	struct FPlayerStateSnapshot
	{
	public:
		int32_t                                                    PlayerStateId;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               PlayerGameId;                                            // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SZ3O[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GamerTag;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPlayerCharacterSnapshot                            Character;                                               // 0x0028(0x0014)
		unsigned char                                              UnknownData_QPRA[0xC];                                   // 0x003C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CollectedBootySnapshot
	 * Size -> 0x0028
	 */
	struct FCollectedBootySnapshot
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_E654[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewSnapshotV1
	 * Size -> 0x0048
	 */
	struct FCrewSnapshotV1
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ShipSize;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    ShipId;                                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8AG0[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStateSnapshot>                        Players;                                                 // 0x0028(0x0010) ZeroConstructor
		TArray<struct FCollectedBootySnapshot>                     Booty;                                                   // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipTrackerSnapshot
	 * Size -> 0x0008
	 */
	struct FShipTrackerSnapshot
	{
	public:
		int32_t                                                    ShipId;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShipRegion                                                Region;                                                  // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z7GD[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WheelSnapshot
	 * Size -> 0x0008
	 */
	struct FWheelSnapshot
	{
	public:
		float                                                      Angle;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxAngle;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CapstanSnapshot
	 * Size -> 0x0004
	 */
	struct FCapstanSnapshot
	{
	public:
		float                                                      Raised;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SailSnapshot
	 * Size -> 0x000C
	 */
	struct FSailSnapshot
	{
	public:
		float                                                      LengthProportion;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Angle;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Damage;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastSnapshot
	 * Size -> 0x0020
	 */
	struct FMastSnapshot
	{
	public:
		TArray<struct FSailSnapshot>                               Sails;                                                   // 0x0000(0x0010) ZeroConstructor
		float                                                      LengthProportionRatio;                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AngleRatio;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G63I[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipSnapshotV1
	 * Size -> 0x0068
	 */
	struct FShipSnapshotV1
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FWheelSnapshot                                      Wheel;                                                   // 0x0010(0x0008)
		struct FCapstanSnapshot                                    Capstan;                                                 // 0x0018(0x0004)
		unsigned char                                              UnknownData_4VG6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMastSnapshot>                               Masts;                                                   // 0x0020(0x0010) ZeroConstructor
		TArray<struct FCannonStateData>                            Cannons;                                                 // 0x0030(0x0010) ZeroConstructor
		TArray<struct FStorageContainerStateData>                  StorageContainers;                                       // 0x0040(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_VRB5[0x18];                                  // 0x0050(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IslandSnapshotV1
	 * Size -> 0x0020
	 */
	struct FIslandSnapshotV1
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Name;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RowboatSnapshotV1
	 * Size -> 0x0010
	 */
	struct FRowboatSnapshotV1
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WorldEventSnapshotV1
	 * Size -> 0x0020
	 */
	struct FWorldEventSnapshotV1
	{
	public:
		class FString                                              EventID;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Status;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldSnapshotV2
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FWorldSnapshotV2 : public FWorldSnapshot
	{
	public:
		TArray<struct FCrewSnapshotV1>                             Crews;                                                   // 0x0010(0x0010) ZeroConstructor
		TArray<struct FShipSnapshotV1>                             Ships;                                                   // 0x0020(0x0010) ZeroConstructor
		TArray<struct FIslandSnapshotV1>                           Islands;                                                 // 0x0030(0x0010) ZeroConstructor
		TArray<struct FRowboatSnapshotV1>                          Rowboats;                                                // 0x0040(0x0010) ZeroConstructor
		TArray<struct FWorldEventSnapshotV1>                       WorldEvents;                                             // 0x0050(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SpawnItemDataResponse
	 * Size -> 0x0008
	 */
	struct FSpawnItemDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QF4F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ItemId;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpawnItemData
	 * Size -> 0x0028
	 */
	struct FSpawnItemData
	{
	public:
		class FString                                              AssetId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    AssetType;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             SpawnLocation;                                           // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Rotation;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IX27[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ToogleAFKKickFunctionalityRequest
	 * Size -> 0x0001
	 */
	struct FToogleAFKKickFunctionalityRequest
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EndEmoteData
	 * Size -> 0x0018
	 */
	struct FEndEmoteData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RPU5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EmoteName;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StartEmoteData
	 * Size -> 0x0018
	 */
	struct FStartEmoteData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J2DK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EmoteName;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoveStatusesData
	 * Size -> 0x0018
	 */
	struct FRemoveStatusesData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XDRQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Statuses;                                                // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AddStatusesData
	 * Size -> 0x0018
	 */
	struct FAddStatusesData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HIFP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Statuses;                                                // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetActorsInRadiusDataResponse
	 * Size -> 0x0001
	 */
	struct FGetActorsInRadiusDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.GetItemsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetItemsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_6OWC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FItemStateData>                              Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetActorsInRadiusData
	 * Size -> 0x000C
	 */
	struct FGetActorsInRadiusData
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GetItemsInRadiusData
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FGetItemsInRadiusData : public FGetActorsInRadiusData
	{
	public:
		unsigned char                                              UnknownData_ZVO9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GetVaultsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetVaultsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_QBVE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVaultStateData>                             Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetSkeletonThronesDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetSkeletonThronesDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_YEFD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSkeletonThroneStateData>                    Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetBeaconsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetBeaconsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_NJ82[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBeaconStateData>                            Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetGeysersDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetGeysersDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_ZQHM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGeyserStateData>                            Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetVolcanoesDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetVolcanoesDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_XSSV[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVolcanoActorStateData>                      Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetShipwrecksDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetShipwrecksDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_R8JG[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FShipwreckStateData>                         Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetAmmoChestsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetAmmoChestsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_3ZNX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAmmoChestStateData>                         Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetNPCsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetNPCsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_Y84T[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNPCStateData>                               Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetCampfiresDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetCampfiresDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_AT7Y[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCampfireStateData>                          Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetStorageContainersDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetStorageContainersDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_VIZX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStorageContainerStateData>                  Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetCannonsDataResponse
	 * Size -> 0x0017 (FullSize[0x0018] - InheritedSize[0x0001])
	 */
	struct FGetCannonsDataResponse : public FGetActorsInRadiusDataResponse
	{
	public:
		unsigned char                                              UnknownData_MVG4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCannonStateData>                            Data;                                                    // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RemoveAITypeSpawnRuleData
	 * Size -> 0x0020
	 */
	struct FRemoveAITypeSpawnRuleData
	{
	public:
		class FString                                              TypeName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Region;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AddAITypeSpawnRuleData
	 * Size -> 0x0028
	 */
	struct FAddAITypeSpawnRuleData
	{
	public:
		class FString                                              TypeName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Region;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Enabled;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VS4J[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ResetDefaultWindData
	 * Size -> 0x0001
	 */
	struct FResetDefaultWindData
	{
	public:
		unsigned char                                              UnknownData_BDNC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetWindMagnitudeData
	 * Size -> 0x0004
	 */
	struct FSetWindMagnitudeData
	{
	public:
		float                                                      Magnitude;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetWindAngleData
	 * Size -> 0x0004
	 */
	struct FSetWindAngleData
	{
	public:
		float                                                      Angle;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoveFogBankData
	 * Size -> 0x0004
	 */
	struct FRemoveFogBankData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateFogBankDataResponse
	 * Size -> 0x0008
	 */
	struct FCreateFogBankDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NWCA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FogBankId;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateFogBankData
	 * Size -> 0x001C
	 */
	struct FCreateFogBankData
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Density;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             SizeInKm;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      FadeDuration;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EnableDefaultFogBanksData
	 * Size -> 0x0001
	 */
	struct FEnableDefaultFogBanksData
	{
	public:
		bool                                                       Enable;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SetStormPropertiesData
	 * Size -> 0x0010
	 */
	struct FSetStormPropertiesData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           StormCentre;                                             // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      StormStrength;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoveStormData
	 * Size -> 0x0004
	 */
	struct FRemoveStormData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateStormDataResponse
	 * Size -> 0x0008
	 */
	struct FCreateStormDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_M0P0[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StormId;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateStormData
	 * Size -> 0x000C
	 */
	struct FCreateStormData
	{
	public:
		struct FVector2D                                           StormCentre;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      StormStrength;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EnableDefaultStormsData
	 * Size -> 0x0001
	 */
	struct FEnableDefaultStormsData
	{
	public:
		bool                                                       Enable;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventEntityIdsSwitch
	 * Size -> 0x0028
	 */
	struct FEventEntityIdsSwitch
	{
	public:
		class FName                                                Event;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<int32_t>                                            EnableEntityIds;                                         // 0x0008(0x0010) ZeroConstructor
		TArray<int32_t>                                            DisableEntityIds;                                        // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EntityEventSubscriptionData
	 * Size -> 0x0030
	 */
	struct FEntityEventSubscriptionData
	{
	public:
		TArray<struct FEventEntityIdsSwitch>                       EventsSwitched;                                          // 0x0000(0x0010) ZeroConstructor
		TArray<class FName>                                        EventsWithAllIdsEnabled;                                 // 0x0010(0x0010) ZeroConstructor
		TArray<class FName>                                        EventsWithAllIdsDisabled;                                // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GlobalEventSubscriptionData
	 * Size -> 0x0020
	 */
	struct FGlobalEventSubscriptionData
	{
	public:
		TArray<class FName>                                        EnableEvents;                                            // 0x0000(0x0010) ZeroConstructor
		TArray<class FName>                                        DisableEvents;                                           // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmptyWaterFromVaultData
	 * Size -> 0x0004
	 */
	struct FEmptyWaterFromVaultData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AddWaterToVaultData
	 * Size -> 0x0008
	 */
	struct FAddWaterToVaultData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterAmount;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetVaultDoorStateData
	 * Size -> 0x0008
	 */
	struct FSetVaultDoorStateData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              DoorType;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              DoorState;                                               // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TKT5[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CustomModeInfoModel
	 * Size -> 0x0058
	 */
	struct FCustomModeInfoModel
	{
	public:
		class FString                                              GameModeId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Name;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ControllerAddress;                                       // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ProgressionEnabled;                                      // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Y3HY[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CommandData
	 * Size -> 0x0020
	 */
	struct FCommandData
	{
	public:
		class FString                                              Command;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Params;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EnableSkeletonSpawnerData
	 * Size -> 0x0018
	 */
	struct FEnableSkeletonSpawnerData
	{
	public:
		bool                                                       Skeletons;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CannonSkeletons;                                         // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SkeletonCaptains;                                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AncientSkeletons;                                        // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IMK2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IslandName;                                              // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetTriggerDetectingData
	 * Size -> 0x0008
	 */
	struct FSetTriggerDetectingData
	{
	public:
		int32_t                                                    NetId;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Detecting;                                               // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CLC8[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetTriggerDetectingItemData
	 * Size -> 0x0004 (FullSize[0x000C] - InheritedSize[0x0008])
	 */
	struct FSetTriggerDetectingItemData : public FSetTriggerDetectingData
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetTriggerDetectingEntityData
	 * Size -> 0x0004 (FullSize[0x000C] - InheritedSize[0x0008])
	 */
	struct FSetTriggerDetectingEntityData : public FSetTriggerDetectingData
	{
	public:
		int32_t                                                    EntityNetId;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoveTriggerData
	 * Size -> 0x0004
	 */
	struct FRemoveTriggerData
	{
	public:
		int32_t                                                    TriggerId;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateTriggerDataResponse
	 * Size -> 0x0008
	 */
	struct FCreateTriggerDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GAOT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TriggerNetId;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateSphereTriggerData
	 * Size -> 0x0010
	 */
	struct FCreateSphereTriggerData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CreateBoxTriggerData
	 * Size -> 0x0018
	 */
	struct FCreateBoxTriggerData
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             Extent;                                                  // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RemoveWorldEventData
	 * Size -> 0x0060
	 */
	struct FRemoveWorldEventData
	{
	public:
		class FString                                              EventType;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TMap<class FString, class FString>                         Parameters;                                              // 0x0010(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AddWorldEventData
	 * Size -> 0x0060
	 */
	struct FAddWorldEventData
	{
	public:
		class FString                                              EventType;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TMap<class FString, class FString>                         Parameters;                                              // 0x0010(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EnableDefaultGameEventSchedulerData
	 * Size -> 0x0001
	 */
	struct FEnableDefaultGameEventSchedulerData
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AdvanceGameEventSchedulerData
	 * Size -> 0x0004
	 */
	struct FAdvanceGameEventSchedulerData
	{
	public:
		int32_t                                                    Seconds;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadShipCannonData
	 * Size -> 0x0028
	 */
	struct FLoadShipCannonData
	{
	public:
		class FString                                              ItemName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CannonIndex;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FPGM[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AddItemToShipData
	 * Size -> 0x0028
	 */
	struct FAddItemToShipData
	{
	public:
		class FString                                              ItemName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    Quantity;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BBRC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReplenishShipData
	 * Size -> 0x0010
	 */
	struct FReplenishShipData
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SetTimeData
	 * Size -> 0x0004
	 */
	struct FSetTimeData
	{
	public:
		int32_t                                                    Hours;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetVulnerabilityData
	 * Size -> 0x0020
	 */
	struct FSetVulnerabilityData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MKUW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DamagerType;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      DamageMultipler;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2ED2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetHealthChangeLockData
	 * Size -> 0x0008
	 */
	struct FSetHealthChangeLockData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       EnableLock;                                              // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_38AL[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ApplyDamageData
	 * Size -> 0x0010
	 */
	struct FApplyDamageData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Damage;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    InstigatorId;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LYB1[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetToMaxHealthData
	 * Size -> 0x0004
	 */
	struct FSetToMaxHealthData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetHealthData
	 * Size -> 0x000C
	 */
	struct FSetHealthData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Health;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z0VO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetMaxHealthData
	 * Size -> 0x0008
	 */
	struct FSetMaxHealthData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxHealth;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetInvincibilityData
	 * Size -> 0x0008
	 */
	struct FSetInvincibilityData
	{
	public:
		int32_t                                                    ActorId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Enable;                                                  // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_57NF[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UpdateSnapshotVersionData
	 * Size -> 0x0008
	 */
	struct FUpdateSnapshotVersionData
	{
	public:
		class FName                                                Version;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldSnapshotV1
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FWorldSnapshotV1 : public FWorldSnapshot
	{
	public:
		TArray<struct FCrewSnapshotV1>                             Crews;                                                   // 0x0010(0x0010) ZeroConstructor
		TArray<struct FShipSnapshotV1>                             Ships;                                                   // 0x0020(0x0010) ZeroConstructor
		TArray<struct FIslandSnapshotV1>                           Islands;                                                 // 0x0030(0x0010) ZeroConstructor
		TArray<struct FRowboatSnapshotV1>                          Rowboats;                                                // 0x0040(0x0010) ZeroConstructor
		TArray<struct FWorldEventSnapshotV1>                       WorldEvents;                                             // 0x0050(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GameServerWebSocketEntityEvent
	 * Size -> 0x0028
	 */
	struct FGameServerWebSocketEntityEvent
	{
	public:
		class FString                                              EventID;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ServerId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           ServerTimeUTC;                                           // 0x0020(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventOverMemoryThreshold
	 * Size -> 0x0020
	 */
	struct FEventOverMemoryThreshold
	{
	public:
		class FString                                              EventID;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           ServerTimeUTC;                                           // 0x0010(0x0008) ZeroConstructor
		int32_t                                                    MemoryUsedPercentage;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LMVM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllianceDisbandedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FAllianceDisbandedTelemetryEvent
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               LeavingCrewSessionId;                                    // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewLeftAllianceTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FCrewLeftAllianceTelemetryEvent
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               LeavingCrewSessionId;                                    // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewJoinedAllianceTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FCrewJoinedAllianceTelemetryEvent
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OfferingCrewSessionId;                                   // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AcceptingCrewSessionId;                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AllianceCreatedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FAllianceCreatedTelemetryEvent
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OfferingCrewSessionId;                                   // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AcceptingCrewSessionId;                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerReleasedFromBrig
	 * Size -> 0x0010
	 */
	struct FPlayerReleasedFromBrig
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBanishedToBrig
	 * Size -> 0x0010
	 */
	struct FPlayerBanishedToBrig
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBrigStatusChanged
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FPlayerBrigStatusChanged : public FNetworkEventStruct
	{
	public:
		struct FNetActorPtr                                        NetPlayerState;                                          // 0x0010(0x0014)
		bool                                                       IsFree;                                                  // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YQGU[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewServiceCrewsReplicatedEvent
	 * Size -> 0x0001
	 */
	struct FCrewServiceCrewsReplicatedEvent
	{
	public:
		unsigned char                                              UnknownData_ZH9X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventQueriedPlayerSpawnLocation
	 * Size -> 0x0001
	 */
	struct FEventQueriedPlayerSpawnLocation
	{
	public:
		ECrewSpawnState                                            CrewSpawnState;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FailedToFindPlayerSpawnLocationPotentialLocation
	 * Size -> 0x0020
	 */
	struct FFailedToFindPlayerSpawnLocationPotentialLocation
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GBZ9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FailedToFindPlayerSpawnLocationTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FFailedToFindPlayerSpawnLocationTelemetryEvent
	{
	public:
		ECrewSpawnState                                            SpawnState;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsInBrig;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInHideout;                                             // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsFirstTimePlaying;                                      // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsOnContestServer;                                       // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsInContestTavern;                                       // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VZNP[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFailedToFindPlayerSpawnLocationPotentialLocation> PotentialLocations;                                      // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.HideoutRevealedEvent
	 * Size -> 0x0038
	 */
	struct FHideoutRevealedEvent
	{
	public:
		class FText                                                HideoutName;                                             // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_0RSG[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.PlayerExitedHideoutEvent
	 * Size -> 0x0001
	 */
	struct FPlayerExitedHideoutEvent
	{
	public:
		unsigned char                                              UnknownData_SDT7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerEnteredHideoutEvent
	 * Size -> 0x0001
	 */
	struct FPlayerEnteredHideoutEvent
	{
	public:
		unsigned char                                              UnknownData_WH0G[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBuriableAdded
	 * Size -> 0x0048
	 */
	struct FEventBuriableAdded
	{
	public:
		struct FBuriedBuriable                                     BuryData;                                                // 0x0000(0x0048) BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.PlayerDeemedInactiveTelemetryEvent
	 * Size -> 0x0078
	 */
	struct FPlayerDeemedInactiveTelemetryEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.LoadoutRepairTelemetryEventBase
	 * Size -> 0x0004
	 */
	struct FLoadoutRepairTelemetryEventBase
	{
	public:
		int32_t                                                    PirateSeed;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadoutRepairFailedTelemetryEvent
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FLoadoutRepairFailedTelemetryEvent : public FLoadoutRepairTelemetryEventBase
	{
	public:
		unsigned char                                              UnknownData_B08K[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CarouselSeeds;                                           // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.LoadoutRepairSuccessTelemetryEvent
	 * Size -> 0x000C (FullSize[0x0010] - InheritedSize[0x0004])
	 */
	struct FLoadoutRepairSuccessTelemetryEvent : public FLoadoutRepairTelemetryEventBase
	{
	public:
		int32_t                                                    CarouselSeed;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumAppliedDescs;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumMissingCategories;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RepairLoadoutFromSeedRpc
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FRepairLoadoutFromSeedRpc : public FBoxedRpc
	{
	public:
		TArray<int32_t>                                            Seeds;                                                   // 0x0010(0x0010) ZeroConstructor
		TArray<struct FStringClassReference>                       CategoriesToApply;                                       // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptureChatMessage
	 * Size -> 0x0058
	 */
	struct FCaptureChatMessage
	{
	public:
		struct FGuid                                               SessionId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              XUID;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           TimeUtc;                                                 // 0x0020(0x0008) ZeroConstructor
		class FString                                              RawMessage;                                              // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CensoredMessage;                                         // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             PlayerLocation;                                          // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UY9X[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptureChatMessagesRequestModel
	 * Size -> 0x0010
	 */
	struct FCaptureChatMessagesRequestModel
	{
	public:
		TArray<struct FCaptureChatMessage>                         ChatMessages;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ProjectileServiceUpdateRewindFailedEvent
	 * Size -> 0x0030
	 */
	struct FProjectileServiceUpdateRewindFailedEvent
	{
	public:
		TArray<struct FGuid>                                       AffectedProjectilesTelemetryAttackIds;                   // 0x0000(0x0010) ZeroConstructor
		class FString                                              DamagerType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      AttackGroupStartTime;                                    // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AttackGroupEndTime;                                      // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Count;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VZEV[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReapersMarkLevelChanged
	 * Size -> 0x0014
	 */
	struct FReapersMarkLevelChanged
	{
	public:
		int32_t                                                    NewLevel;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               AssociatedCrew;                                          // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ReapersMarkResetVoyageProgress
	 * Size -> 0x0001
	 */
	struct FReapersMarkResetVoyageProgress
	{
	public:
		unsigned char                                              UnknownData_IT8L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ReapersMarkUpdateVoyageProgress
	 * Size -> 0x0001
	 */
	struct FReapersMarkUpdateVoyageProgress
	{
	public:
		unsigned char                                              UnknownData_766L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DisplayShutdownTimerMessageClient
	 * Size -> 0x0010
	 */
	struct FDisplayShutdownTimerMessageClient
	{
	public:
		struct FTimespan                                           TimeTillShutdown;                                        // 0x0000(0x0008) ZeroConstructor
		struct FTimespan                                           DisplayPeriod;                                           // 0x0008(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ServerStartingForcedShutdownEvent
	 * Size -> 0x0008
	 */
	struct FServerStartingForcedShutdownEvent
	{
	public:
		struct FTimespan                                           TimeTillShutdown;                                        // 0x0000(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ClientScheduleShutdownNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FClientScheduleShutdownNetworkEvent : public FNetworkEventStruct
	{
	public:
		int64_t                                                    ShutdownTimeTicks;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ScheduledShutdownSettingsClient
	 * Size -> 0x0018
	 */
	struct FScheduledShutdownSettingsClient
	{
	public:
		float                                                      StartScreenFadeWithTimeRemainingSeconds;                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ScreenFadeTimeSeconds;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      QuitGameTimeRemainingSeconds;                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      UpperDisplayPeriodTimeSeconds;                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      LowerDisplayPeriodTimeSeconds;                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SwitchToLowerTimePeriodWithTimeRemainingSeconds;         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerPerformanceHeartbeatTelemetryEvent
	 * Size -> 0x0080
	 */
	struct FServerPerformanceHeartbeatTelemetryEvent
	{
	public:
		float                                                      FrameMSAverage;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FrameMSMin;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FrameMSMax;                                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FPSAverage;                                              // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FPSMin;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FPSMax;                                                  // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyAvg;                                          // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyMin;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailPhyMax;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirAvg;                                          // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirMin;                                          // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemAvailVirMax;                                          // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyAvg;                                           // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyMin;                                           // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedPhyMax;                                           // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirAvg;                                           // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirMin;                                           // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   MemUsedVirMax;                                           // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumOfPlayers;                                            // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumOfAI;                                                 // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DisplayServiceStatusNotificationClient
	 * Size -> 0x0048
	 */
	struct FDisplayServiceStatusNotificationClient
	{
	public:
		uint32_t                                                   NotificationId;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_618I[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                NotificationText;                                        // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_95YU[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FTimespan                                           Duration;                                                // 0x0040(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerEnteredFortVicinityEvent
	 * Size -> 0x0008
	 */
	struct FPlayerEnteredFortVicinityEvent
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortOfTheDamnedCompletedEvent
	 * Size -> 0x0001
	 */
	struct FFortOfTheDamnedCompletedEvent
	{
	public:
		unsigned char                                              UnknownData_QEF9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FortCompletedEvent
	 * Size -> 0x0001
	 */
	struct FFortCompletedEvent
	{
	public:
		unsigned char                                              UnknownData_3RCE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FortStartedEvent
	 * Size -> 0x0001
	 */
	struct FFortStartedEvent
	{
	public:
		unsigned char                                              UnknownData_WL7B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnShipStockEntitlementsProcessedNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FOnShipStockEntitlementsProcessedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UShipEntitlementProcessingPolicyDataAsset*           ShipEntitlementProcessingPolicyDataAsset;                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InitRHIDiagnosticTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FInitRHIDiagnosticTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AimSensitivityRuntimeDataEntry
	 * Size -> 0x0010
	 */
	struct FAimSensitivityRuntimeDataEntry
	{
	public:
		struct FAimSensitivitySettingParams                        SettingParams;                                           // 0x0000(0x000C)
		float                                                      CurrentAimSensitivity;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AimSensitivityRuntimeData
	 * Size -> 0x00A0
	 */
	struct FAimSensitivityRuntimeData
	{
	public:
		TMap<EAimSensitivitySettingCategory, struct FAimSensitivityRuntimeDataEntry> MouseData;                                               // 0x0000(0x0050) ZeroConstructor
		TMap<EAimSensitivitySettingCategory, struct FAimSensitivityRuntimeDataEntry> ControllerData;                                          // 0x0050(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TriggerPlaceableReactionEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FTriggerPlaceableReactionEvent : public FBoxedRpc
	{
	public:
		class APlaceableReaction*                                  PlaceableReaction;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerExitedIslandDanger
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerExitedIslandDanger
	{
	public:
		unsigned char                                              UnknownData_F0VM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerEnteredIslandDanger
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerEnteredIslandDanger
	{
	public:
		unsigned char                                              UnknownData_VDQ2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MatineeActorSetPositionNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FMatineeActorSetPositionNetworkEvent : public FNetworkEventStruct
	{
	public:
		class AMatineeActor*                                       MatineeActor;                                            // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      InterpolationPosition;                                   // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Jump;                                                    // 0x001C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VN1T[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MatineeActorStopNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMatineeActorStopNetworkEvent : public FNetworkEventStruct
	{
	public:
		class AMatineeActor*                                       MatineeActor;                                            // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MatineeActorPlayNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMatineeActorPlayNetworkEvent : public FNetworkEventStruct
	{
	public:
		class AMatineeActor*                                       MatineeActor;                                            // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VideoSubtitleEvent
	 * Size -> 0x0018
	 */
	struct FVideoSubtitleEvent
	{
	public:
		class FString                                              SubtitleString;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		double                                                     SubtitleDuration;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VideoPlaybackResetEvent
	 * Size -> 0x0010
	 */
	struct FVideoPlaybackResetEvent
	{
	public:
		class FString                                              MediaTextureName;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VideoPlaybackPauseEvent
	 * Size -> 0x0010
	 */
	struct FVideoPlaybackPauseEvent
	{
	public:
		class FString                                              MediaTextureName;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VideoPlaybackStartEvent
	 * Size -> 0x0010
	 */
	struct FVideoPlaybackStartEvent
	{
	public:
		class FString                                              MediaTextureName;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerRadialChatTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FPlayerRadialChatTelemetryEvent
	{
	public:
		struct FGuid                                               RadialChatID;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              RadialChatString;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RadialContextType;                                       // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetPresenceConnectionStringResponseModel
	 * Size -> 0x0008
	 */
	struct FSetPresenceConnectionStringResponseModel
	{
	public:
		struct FTimespan                                           ResetAfter;                                              // 0x0000(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SetPresenceConnectionStringRequestModel
	 * Size -> 0x0010
	 */
	struct FSetPresenceConnectionStringRequestModel
	{
	public:
		class FString                                              ConnectionString;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementRemoteServiceLogTelemetry
	 * Size -> 0x0030
	 */
	struct FAchievementRemoteServiceLogTelemetry
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      LogLines;                                                // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AchievementUnlockedEvent
	 * Size -> 0x0010
	 */
	struct FAchievementUnlockedEvent
	{
	public:
		class FString                                              AchievementId;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementUnlockedMessage
	 * Size -> 0x0088
	 */
	struct FAchievementUnlockedMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		class FString                                              AchievementId;                                           // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AchievementUpdatedTelemetry
	 * Size -> 0x0010
	 */
	struct FAchievementUpdatedTelemetry
	{
	public:
		TArray<struct FAchievementUpdatedEvent>                    UpdatedAchievements;                                     // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AeolusAchievementsUpdatedFromServicesTelemetry
	 * Size -> 0x0028
	 */
	struct FAeolusAchievementsUpdatedFromServicesTelemetry
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Success;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7P24[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AchievementsUpdatedCount;                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AeolusIncorrectAchievementsRemovedTelemetry
	 * Size -> 0x0028
	 */
	struct FAeolusIncorrectAchievementsRemovedTelemetry
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Success;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XCOP[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AchievementsRemovedCount;                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoteAchievementCompletionModel
	 * Size -> 0x0010
	 */
	struct FRemoteAchievementCompletionModel
	{
	public:
		TArray<class FString>                                      AchievementIds;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RemoteAchievementProgressModel
	 * Size -> 0x0050
	 */
	struct FRemoteAchievementProgressModel
	{
	public:
		TMap<class FString, uint32_t>                              AchievementProgress;                                     // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.Catalog
	 * Size -> 0x0030
	 */
	struct FCatalog
	{
	public:
		class FString                                              DisplayName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DisplayDescription;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FCatalogOffer>                               Offers;                                                  // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyLevelClaim
	 * Size -> 0x0018
	 */
	struct FCompanyLevelClaim
	{
	public:
		uint32_t                                                   Level;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DC5Q[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Sig;                                                     // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PiratePurchaseClaims
	 * Size -> 0x0050
	 */
	struct FPiratePurchaseClaims
	{
	public:
		TMap<class FString, struct FCompanyLevelClaim>             CompanyLevels;                                           // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CommerceRemoteServicePurchaseRequest
	 * Size -> 0x0090
	 */
	struct FCommerceRemoteServicePurchaseRequest
	{
	public:
		class FString                                              StoreId;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               OfferId;                                                 // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9PIE[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TransactionId;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPiratePurchaseClaims                               PiratePurchaseClaims;                                    // 0x0038(0x0050)
		EPlayMode                                                  PlayMode;                                                // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x0089(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RCDE[0x6];                                   // 0x008A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GetFilteredCatalogRequestModel
	 * Size -> 0x0118
	 */
	struct FGetFilteredCatalogRequestModel
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		TMap<EWalletCurrencyId, uint32_t>                          Balances;                                                // 0x0078(0x0050) ZeroConstructor
		TMap<class FName, struct FCompanyLevelClaim>               CompanyLevels;                                           // 0x00C8(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EntitlementsUpdatedMessage
	 * Size -> 0x0078
	 */
	struct FEntitlementsUpdatedMessage
	{
	public:
		struct FPirateIdentity                                     Identity;                                                // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.PurchaseOfferResponse
	 * Size -> 0x0010
	 */
	struct FPurchaseOfferResponse
	{
	public:
		TArray<class FString>                                      PurchasedItems;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PurchaseRequestFailedResponse
	 * Size -> 0x0014
	 */
	struct FPurchaseRequestFailedResponse
	{
	public:
		struct FGuid                                               TransactionId;                                           // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EPurchaseRequestFailureReason                              Reason;                                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZGYK[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchaseRequestSuccessResponse
	 * Size -> 0x0020
	 */
	struct FPurchaseRequestSuccessResponse
	{
	public:
		struct FGuid                                               TransactionId;                                           // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<class FString>                                      PurchasedItems;                                          // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EntitlementInfo
	 * Size -> 0x0030
	 */
	struct FEntitlementInfo
	{
	public:
		class FString                                              InstanceId;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogItemId;                                           // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              Signature;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoteEntitlementsModel
	 * Size -> 0x0010
	 */
	struct FRemoteEntitlementsModel
	{
	public:
		TArray<struct FEntitlementInfo>                            Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SpecificEntitlementsRequestModel
	 * Size -> 0x0010
	 */
	struct FSpecificEntitlementsRequestModel
	{
	public:
		TArray<class FString>                                      EntitlementIds;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.WalletTransactionFinishedEvent
	 * Size -> 0x0080
	 */
	struct FWalletTransactionFinishedEvent
	{
	public:
		bool                                                       WasSuccessful;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8PCZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0008(0x0078)
	};

	/**
	 * ScriptStruct Athena.WalletLastKnownBalanceUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FWalletLastKnownBalanceUpdatedEvent
	{
	public:
		struct FWalletBalance                                      Balance;                                                 // 0x0000(0x0010)
	};

	/**
	 * ScriptStruct Athena.RequestCompanyProgressFailedEvent
	 * Size -> 0x0010
	 */
	struct FRequestCompanyProgressFailedEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RequestCompanyProgressSucceededEvent
	 * Size -> 0x0020
	 */
	struct FRequestCompanyProgressSucceededEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FCompanyReputationProgressModelCollection           PirateCompanyProgress;                                   // 0x0010(0x0010)
	};

	/**
	 * ScriptStruct Athena.RequestCompanyProgressEvent
	 * Size -> 0x0088
	 */
	struct FRequestCompanyProgressEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FGuid                                               RequestID;                                               // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CompanyProgressUpdateEvent
	 * Size -> 0x0028
	 */
	struct FCompanyProgressUpdateEvent
	{
	public:
		struct FCompanyReputationProgressModel                     CompanyProgress;                                         // 0x0000(0x0028)
	};

	/**
	 * ScriptStruct Athena.CompanyProgressUpdateMessage
	 * Size -> 0x00B0
	 */
	struct FCompanyProgressUpdateMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FCompanyReputationProgressModel                     CompanyProgress;                                         // 0x0078(0x0028)
		struct FGuid                                               RequestID;                                               // 0x00A0(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ConfigurationRemoteServiceRequestConfigurationResultEvent
	 * Size -> 0x0018
	 */
	struct FConfigurationRemoteServiceRequestConfigurationResultEvent
	{
	public:
		unsigned char                                              UnknownData_79VI[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConfigurationRemoteServiceRequestConfigurationEvent
	 * Size -> 0x0028
	 */
	struct FConfigurationRemoteServiceRequestConfigurationEvent
	{
	public:
		unsigned char                                              UnknownData_JRNQ[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RemoteConfigurationProviderUpdateConfigurationEvent
	 * Size -> 0x0020
	 */
	struct FRemoteConfigurationProviderUpdateConfigurationEvent
	{
	public:
		unsigned char                                              UnknownData_8EBQ[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RuntimeFeatureConfigurationAvailableEvent
	 * Size -> 0x0004
	 */
	struct FRuntimeFeatureConfigurationAvailableEvent
	{
	public:
		unsigned char                                              UnknownData_VJ04[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemRemoteCriteriaProgress
	 * Size -> 0x0014
	 */
	struct FEmblemRemoteCriteriaProgress
	{
	public:
		class FName                                                StatName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Value;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Threshold;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsCompleted;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QX4I[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemRemoteProgress
	 * Size -> 0x0030
	 */
	struct FEmblemRemoteProgress
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CompanyId;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsCompleted;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_A3NR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEmblemRemoteCriteriaProgress>               CriteriaProgress;                                        // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmblemDefinitionModel
	 * Size -> 0x02C0
	 */
	struct FEmblemDefinitionModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FriendlyName;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                CampaignDescription;                                     // 0x0018(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_1P6R[0x20];                                  // 0x0030(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                CampaignId;                                              // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               CampaignImagePath;                                       // 0x0058(0x0010) Edit, ZeroConstructor
		class FText                                                CampaignTitle;                                           // 0x0068(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_NZ1Z[0x20];                                  // 0x0080(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              CompanyId;                                               // 0x00A0(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class UClass*                                              Company;                                                 // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class FText                                                MoreInfoFirst;                                           // 0x00B8(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_P64Y[0x20];                                  // 0x00D0(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                MoreInfoSecond;                                          // 0x00F0(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_FVDA[0x20];                                  // 0x0108(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                MoreInfoFirstLocked;                                     // 0x0128(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_5QDK[0x20];                                  // 0x0140(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                MoreInfoSecondLocked;                                    // 0x0160(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_BTA4[0x20];                                  // 0x0178(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              RewardId;                                                // 0x0198(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       HasActiveDuration;                                       // 0x01A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       MarkAsNew;                                               // 0x01A9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HQS9[0x6];                                   // 0x01AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActiveFrom;                                              // 0x01B0(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveUntil;                                             // 0x01B8(0x0008) ZeroConstructor
		uint32_t                                                   UnlockAtNumCriteriaCompleted;                            // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B7VN[0x4];                                   // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x01C8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		struct FEmblemSetDefinition                                EmblemSet;                                               // 0x01D8(0x00E8) Edit
	};

	/**
	 * ScriptStruct Athena.EmblemServiceFinishedUpdatingProgressEvent
	 * Size -> 0x0001
	 */
	struct FEmblemServiceFinishedUpdatingProgressEvent
	{
	public:
		unsigned char                                              UnknownData_Y1JY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestEmblemProgressFailedEvent
	 * Size -> 0x0010
	 */
	struct FRequestEmblemProgressFailedEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EmblemCriteriaProgress
	 * Size -> 0x0010
	 */
	struct FEmblemCriteriaProgress
	{
	public:
		struct FPlayerStat                                         Stat;                                                    // 0x0000(0x0004)
		uint32_t                                                   Value;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Threshold;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsCompleted;                                             // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5MOE[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemProgress
	 * Size -> 0x0030
	 */
	struct FEmblemProgress
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CompanyId;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsCompleted;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V21R[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEmblemCriteriaProgress>                     CriteriaProgress;                                        // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEmblemProgressSucceededEvent
	 * Size -> 0x0020
	 */
	struct FRequestEmblemProgressSucceededEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FEmblemProgress>                             EmblemProgress;                                          // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEmblemDefinitionsFailedEvent
	 * Size -> 0x0001
	 */
	struct FRequestEmblemDefinitionsFailedEvent
	{
	public:
		unsigned char                                              UnknownData_U2A5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestEmblemDefinitionsSucceededEvent
	 * Size -> 0x0010
	 */
	struct FRequestEmblemDefinitionsSucceededEvent
	{
	public:
		TArray<class UEmblemDefinitionDataAsset*>                  DataAssets;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEmblemProgressEvent
	 * Size -> 0x0088
	 */
	struct FRequestEmblemProgressEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FGuid                                               RequestID;                                               // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EmblemUnlockedEvent
	 * Size -> 0x0010
	 */
	struct FEmblemUnlockedEvent
	{
	public:
		struct FGuid                                               EmblemId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RequestEmblemProgressMessage
	 * Size -> 0x0078
	 */
	struct FRequestEmblemProgressMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.EmblemUnlockedMessage
	 * Size -> 0x0088
	 */
	struct FEmblemUnlockedMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FGuid                                               EmblemId;                                                // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EngagementMessageServiceResultEvent
	 * Size -> 0x0030
	 */
	struct FEngagementMessageServiceResultEvent
	{
	public:
		unsigned char                                              UnknownData_DRDC[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EvictPlayerMessage
	 * Size -> 0x0010
	 */
	struct FEvictPlayerMessage
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LocText
	 * Size -> 0x0030
	 */
	struct FLocText
	{
	public:
		class FString                                              Namespace;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Key;                                                     // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedText;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoteLocalizationData
	 * Size -> 0x0020
	 */
	struct FRemoteLocalizationData
	{
	public:
		TArray<struct FLocText>                                    LocDictionary;                                           // 0x0000(0x0010) ZeroConstructor
		class FString                                              Locale;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemoteLocalizationModel
	 * Size -> 0x0020
	 */
	struct FRemoteLocalizationModel
	{
	public:
		struct FRemoteLocalizationData                             LocalizationData;                                        // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.ServerMigrationClientFailedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FServerMigrationClientFailedTelemetryEvent
	{
	public:
		struct FGuid                                               MigrationId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Stage;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Error;                                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerMigrationFailedDevTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FServerMigrationFailedDevTelemetryEvent
	{
	public:
		struct FGuid                                               MigrationId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Stage;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerMigrationCompletedTelemetryActorData
	 * Size -> 0x0018
	 */
	struct FServerMigrationCompletedTelemetryActorData
	{
	public:
		class FString                                              ActorClass;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Count;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OE9E[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMigrationCompletedDevTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FServerMigrationCompletedDevTelemetryEvent
	{
	public:
		struct FGuid                                               MigrationId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FServerMigrationCompletedTelemetryActorData> ActorDetails;                                            // 0x0010(0x0010) ZeroConstructor
		float                                                      TotalTime;                                               // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumClients;                                              // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumActorsMigrated;                                       // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ActorSerialisationBytes;                                 // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerMigrateToTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FServerMigrateToTelemetryEvent
	{
	public:
		struct FGuid                                               MigrationId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerMigrateFromTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FServerMigrateFromTelemetryEvent
	{
	public:
		struct FGuid                                               MigrationId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PeriodObjectiveCompleteMessage
	 * Size -> 0x0068
	 */
	struct FPeriodObjectiveCompleteMessage
	{
	public:
		class FString                                              PeriodId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           PeriodStartDateTime;                                     // 0x0010(0x0008) ZeroConstructor
		struct FDateTime                                           PeriodEndDateTime;                                       // 0x0018(0x0008) ZeroConstructor
		class FString                                              PeriodObjectiveId;                                       // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FGuid>                                       PlayerGameIds;                                           // 0x0040(0x0010) ZeroConstructor
		bool                                                       HasReward;                                               // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LW38[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RewardId;                                                // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PioneerProgressMessage
	 * Size -> 0x0040
	 */
	struct FPioneerProgressMessage
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               PlayerGameId;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ObjectiveKey;                                            // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		int64_t                                                    Value;                                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           DateTimeStampUtc;                                        // 0x0038(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RetrieveAllPiratesRequestSuccessEvent
	 * Size -> 0x0038
	 */
	struct FRetrieveAllPiratesRequestSuccessEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		TArray<struct FPirateProfile>                              PirateProfiles;                                          // 0x0018(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0028(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RetrieveAllPiratesRequestFailedEvent
	 * Size -> 0x0028
	 */
	struct FRetrieveAllPiratesRequestFailedEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		struct FGuid                                               RequestID;                                               // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RetrieveAllPiratesRequestEvent
	 * Size -> 0x0028
	 */
	struct FRetrieveAllPiratesRequestEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		struct FGuid                                               RequestID;                                               // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CreatePirateRequestSuccessEvent
	 * Size -> 0x0120
	 */
	struct FCreatePirateRequestSuccessEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		struct FPirateProfile                                      PirateProfile;                                           // 0x0018(0x00F8)
		struct FGuid                                               RequestID;                                               // 0x0110(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CreatePirateRequestFailedEvent
	 * Size -> 0x0028
	 */
	struct FCreatePirateRequestFailedEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		struct FGuid                                               RequestID;                                               // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CreatePirateRequestEvent
	 * Size -> 0x00A8
	 */
	struct FCreatePirateRequestEvent
	{
	public:
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0000(0x0018)
		struct FGuid                                               RequestID;                                               // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPirateDescription                                  Description;                                             // 0x0028(0x0080)
	};

	/**
	 * ScriptStruct Athena.PirateProfileImageModel
	 * Size -> 0x0010
	 */
	struct FPirateProfileImageModel
	{
	public:
		class FString                                              Hash;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateInventoryItemModel
	 * Size -> 0x0030
	 */
	struct FPirateInventoryItemModel
	{
	public:
		class FString                                              InstanceId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CatalogItemId;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Signature;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateReRollRequestModel
	 * Size -> 0x00B0
	 */
	struct FPirateReRollRequestModel
	{
	public:
		struct FPirateInventoryItemModel                           EntitlementItem;                                         // 0x0000(0x0030)
		struct FPirateDescription                                  PirateDescription;                                       // 0x0030(0x0080)
	};

	/**
	 * ScriptStruct Athena.PirateRemoteServiceModel
	 * Size -> 0x0010
	 */
	struct FPirateRemoteServiceModel
	{
	public:
		TArray<struct FPirateProfile>                              Pirates;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerActiveInWorldMessage
	 * Size -> 0x0080
	 */
	struct FPlayerActiveInWorldMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		EPlayMode                                                  PlayMode;                                                // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x0079(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EPYT[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PromptCountersModel
	 * Size -> 0x0050
	 */
	struct FPromptCountersModel
	{
	public:
		TMap<class FString, int32_t>                               PromptCounters;                                          // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.KeyBindingRemote
	 * Size -> 0x0020
	 */
	struct FKeyBindingRemote
	{
	public:
		class FString                                              BindingName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                KeyName;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EInputControllerTypeRemote                                 ControllerType;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4UHP[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RemotePreferences
	 * Size -> 0x0140
	 */
	struct FRemotePreferences
	{
	public:
		TArray<struct FKeyBindingRemote>                           ActionBindings;                                          // 0x0000(0x0010) ZeroConstructor
		TArray<struct FKeyBindingRemote>                           AxisBindings;                                            // 0x0010(0x0010) ZeroConstructor
		struct FGuid                                               Tag;                                                     // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ForceFeedbackIntensity;                                  // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity;                                        // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity;                                   // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerDeadzone;                                      // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerNonLinearity;                                  // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FieldOfView;                                             // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MasterVolume;                                            // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SfxVolume;                                               // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MusicVolume;                                             // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShantyVolume;                                            // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CrewChatVolume;                                          // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NonCrewChatVolume;                                       // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       UsePushToTalk;                                           // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseVirtualKeyboard;                                      // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertYAxisGamepad;                                      // 0x0062(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertYAxisMouse;                                        // 0x0063(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertXAxisGamepad;                                      // 0x0064(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertXAxisMouse;                                        // 0x0065(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePlatformForUnattenuatedChat;                          // 0x0066(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseProximityChatDirection;                               // 0x0067(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    NumberOfLogins;                                          // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OptedInToMarketing;                                      // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_746R[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KeyboardLayout;                                          // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShowPlayerTalkingIndicator;                              // 0x0074(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       MuteCopyrightedAudio;                                    // 0x0075(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseAltMapMarkTexture;                                    // 0x0076(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8S1H[0x1];                                   // 0x0077(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MouseSensitivity_Blunderbuss;                            // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Blunderbuss;                       // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_Flintlock;                              // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Flintlock;                         // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_EyeOfReach;                             // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_EyeOfReach;                        // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_Spyglass;                               // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Spyglass;                          // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_TridentOfDarkTides;                     // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_TridentOfDarkTides;                // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       VariableRefreshRate;                                     // 0x00A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JMFU[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HighDynamicRangeCalib;                                   // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CVDMode;                                                 // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CVDStrength;                                             // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ColorSaturationScale;                                    // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NotificationScale;                                       // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Joinable;                                                // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOwnCrewNameplates;                                   // 0x00B9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOtherCrewNameplates;                                 // 0x00BA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowFishNameplates;                                      // 0x00BB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOwnCrewStatusTags;                                   // 0x00BC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ScrambleGamertags;                                       // 0x00BD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowTallTalesOnMapTable;                                 // 0x00BE(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AutoVoteOnProposedVoyage;                                // 0x00BF(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NotificationsInMenus;                                    // 0x00C0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ToggleRadialMenu;                                        // 0x00C1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       StickyRadialItems;                                       // 0x00C2(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableMovementDuringRadial;                              // 0x00C3(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableLookWhenControllingObject;                         // 0x00C4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableAutoCentreLook;                                    // 0x00C5(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2YMS[0x2];                                   // 0x00C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoCentreLookTimeDelay;                                 // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AutoCentreLookSpeed;                                     // 0x00CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HoldActionsDontRequireHold;                              // 0x00D0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HoldActionsWithHeldItemsDontRequireHold;                 // 0x00D1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_U5QS[0x2];                                   // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TTSOverride;                                             // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    STTOverride;                                             // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LGRTMOverride;                                           // 0x00DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TranslateOtherPlayers;                                   // 0x00E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ScreenSpaceTooltips;                                     // 0x00E1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateToasts;                                           // 0x00E2(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7NV7[0x1];                                   // 0x00E3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ToastHoldDurationMultiplier;                             // 0x00E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NarrateOnHover;                                          // 0x00E8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateChangeOnly;                                       // 0x00E9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateEmotes;                                           // 0x00EA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EscapeAsBackAccessibilityOption;                         // 0x00EB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CrossInputPreference;                                    // 0x00EC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AdventureCrossInputPreference;                           // 0x00ED(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_80SK[0x2];                                   // 0x00EE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AdventureIslandBanners;                                  // 0x00F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ArenaIslandBanners;                                      // 0x00F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OutpostLocationBanners;                                  // 0x00F8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_J5RW[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UseSingleStick;                                          // 0x00FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    UseSingleStickSettingsApplied;                           // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    UseSingleStickCameraToggle;                              // 0x0104(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableControllerOnPC;                                   // 0x0108(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RecenterMouseInMenus;                                    // 0x0109(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AutoFloatInWater;                                        // 0x010A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G2QF[0x1];                                   // 0x010B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PushToTalkMode;                                          // 0x010C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CircularUINavigation;                                    // 0x0110(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Enable120Hz;                                             // 0x0111(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AlwaysSkipMapTableAnimation;                             // 0x0112(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AudioMonoMix;                                            // 0x0113(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AudioOutputHeadphones;                                   // 0x0114(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableSeasonsNotifications;                             // 0x0115(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AllowCrewToCustomiseCaptainedShip;                       // 0x0116(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableTutorialAttractAnimation;                          // 0x0117(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableInviteNotifications;                              // 0x0118(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ControlledTextAlignment;                                 // 0x0119(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ControlledLineHeight;                                    // 0x011A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OD3M[0x1];                                   // 0x011B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OtherCrewsMuteState;                                     // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NauticalNarrationEnabled;                                // 0x0120(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NarrateInteractableText;                                 // 0x0124(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateInteractableButtons;                              // 0x0125(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IgnoreDisabledInteractables;                             // 0x0126(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FishNameplateNarrationEnabled;                           // 0x0127(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseContinuousNarration;                                  // 0x0128(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NGM1[0x3];                                   // 0x0129(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ContinuousNarrationDelay;                                // 0x012C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableFlashes;                                          // 0x0130(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableBlur;                                             // 0x0131(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableScreenShake;                                      // 0x0132(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableOnScreenEffects;                                  // 0x0133(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnchantedCompassProximityAnnouncerEnabled;               // 0x0134(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableRats;                                             // 0x0135(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableSqueakyWheel;                                      // 0x0136(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HW06[0x1];                                   // 0x0137(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SqueakyWheelVolume;                                      // 0x0138(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    RemoteGameLanguage;                                      // 0x013C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RemotePreferencesModel
	 * Size -> 0x0140
	 */
	struct FRemotePreferencesModel
	{
	public:
		struct FRemotePreferences                                  Preferences;                                             // 0x0000(0x0140)
	};

	/**
	 * ScriptStruct Athena.HttpResponseTelemetryFragmentInput
	 * Size -> 0x0068
	 */
	struct FHttpResponseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		class FString                                              Method;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Endpoint;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Context;                                                 // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		EHttpRequestTelemetryResult                                Result;                                                  // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XLQM[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StatusCode;                                              // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DurationMS;                                              // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NEAM[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ResponseBody;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      ResponseHeaders;                                         // 0x0050(0x0010) ZeroConstructor
		int32_t                                                    Attempts;                                                // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6293[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HttpResponseTelemetryFragment
	 * Size -> 0x0068
	 */
	struct FHttpResponseTelemetryFragment
	{
	public:
		class FString                                              Method;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Endpoint;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Context;                                                 // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		EHttpRequestTelemetryResult                                Result;                                                  // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BIBS[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StatusCode;                                              // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DurationMS;                                              // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_31RG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ResponseBody;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      ResponseHeaders;                                         // 0x0050(0x0010) ZeroConstructor
		int32_t                                                    Attempts;                                                // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SHU1[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerClientHttpRequestTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerClientHttpRequestTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_3EB0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerServerHttpRequestTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FPlayerServerHttpRequestTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_90JO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RemoteRewardRequestModel
	 * Size -> 0x0048
	 */
	struct FRemoteRewardRequestModel
	{
	public:
		TArray<struct FPirateIdentity>                             Pirates;                                                 // 0x0000(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                RewardId;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Company;                                                 // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_K6ZW[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardGrantedMessage
	 * Size -> 0x0068
	 */
	struct FRewardGrantedMessage
	{
	public:
		class FString                                              RewardId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_74OH[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   CurrencyAmount;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   NumLevels;                                               // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FString>                                      Entitlements;                                            // 0x0030(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0040(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DeferralReason;                                          // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsShipReward;                                            // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_D7CS[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CompanyXpGrantedMessage
	 * Size -> 0x00B0
	 */
	struct FCompanyXpGrantedMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		class FName                                                CompanyId;                                               // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               RequestID;                                               // 0x0084(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               BootyId;                                                 // 0x0094(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                EmissaryAffiliation;                                     // 0x00A4(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CurrencyGrantedMessage
	 * Size -> 0x0030
	 */
	struct FCurrencyGrantedMessage
	{
	public:
		uint32_t                                                   Amount;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWalletCurrencyId                                          Currency;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5VEW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               TransactionId;                                           // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                EmissaryAffiliation;                                     // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DLVH[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     EmissaryMultiplier;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestFailedMessage
	 * Size -> 0x0038
	 */
	struct FRewardRequestFailedMessage
	{
	public:
		TArray<struct FPirateIdentity>                             PirateIdentities;                                        // 0x0000(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		ERewardRequestFailureReason                                FailureReason;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M0P2[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardRequestSucceededMessage
	 * Size -> 0x0010
	 */
	struct FRewardRequestSucceededMessage
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PenaltyRequestMessage
	 * Size -> 0x0090
	 */
	struct FPenaltyRequestMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               RequestID;                                               // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                PenaltyId;                                               // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestForPirateMessage
	 * Size -> 0x00A8
	 */
	struct FRewardRequestForPirateMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               RequestID;                                               // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                EmissaryAffiliation;                                     // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    EmissaryLevel;                                           // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x00A4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EPlayMode                                                  PlayMode;                                                // 0x00A5(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x00A6(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZK6T[0x1];                                   // 0x00A7(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeferredRewardRequestMessage
	 * Size -> 0x0060
	 */
	struct FDeferredRewardRequestMessage
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CompanyAffiliation;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RewardId;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       RewardAccount;                                           // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NotifyPlayer;                                            // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardCurrency;                                      // 0x0042(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardXp;                                            // 0x0043(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardSeasonXp;                                      // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PQ3P[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeferralReason;                                          // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		double                                                     RewardMultiplier;                                        // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestCrew
	 * Size -> 0x00C8
	 */
	struct FRewardRequestCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ShipId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FPirateIdentity>                             Pirates;                                                 // 0x0020(0x0010) ZeroConstructor
		class FName                                                EmissaryAffiliation;                                     // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FactionAffiliation;                                      // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   FactionStreakLevel;                                      // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   OpponentStreakLevel;                                     // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EDefenderLootLevel                                         FactionDefenderLootLevel;                                // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IFAT[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPirateIdentity                                     Captain;                                                 // 0x0050(0x0078)
	};

	/**
	 * ScriptStruct Athena.FactionLeaveFightRewardMessage
	 * Size -> 0x00E0
	 */
	struct FFactionLeaveFightRewardMessage
	{
	public:
		struct FRewardRequestCrew                                  Recipient;                                               // 0x0000(0x00C8)
		struct FGuid                                               RequestID;                                               // 0x00C8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    SandOfFateGoldLevel;                                     // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayMode                                                  PlayMode;                                                // 0x00DC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x00DD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FR0M[0x2];                                   // 0x00DE(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllianceRewardRequestMessage
	 * Size -> 0x0128
	 */
	struct FAllianceRewardRequestMessage
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AllianceId;                                              // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRewardRequestCrew                                  PrimaryRecipient;                                        // 0x0020(0x00C8)
		TArray<struct FRewardRequestCrew>                          SecondaryRecipients;                                     // 0x00E8(0x0010) ZeroConstructor
		class FName                                                RewardId;                                                // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               BootyId;                                                 // 0x0108(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                NPCName;                                                 // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x0120(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EPlayMode                                                  PlayMode;                                                // 0x0121(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x0122(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DontRewardCurrency;                                      // 0x0123(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardXp;                                            // 0x0124(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardSeasonXp;                                      // 0x0125(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardAllegiance;                                    // 0x0126(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SkipXpToAllegianceMultiplier;                            // 0x0127(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RewardRequestMessage
	 * Size -> 0x0050
	 */
	struct FRewardRequestMessage
	{
	public:
		TArray<struct FPirateIdentity>                             Pirates;                                                 // 0x0000(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                EmissaryAffiliation;                                     // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    EmissaryLevel;                                           // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EPlayMode                                                  PlayMode;                                                // 0x004D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x004E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8OU5[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateGoldReward
	 * Size -> 0x0080
	 */
	struct FPirateGoldReward
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		uint32_t                                                   Amount;                                                  // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TB2E[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AwardGoldMessage
	 * Size -> 0x0040
	 */
	struct FAwardGoldMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FPirateGoldReward>                           Rewards;                                                 // 0x0010(0x0010) ZeroConstructor
		struct FGuid                                               TransactionId;                                           // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Source;                                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingConfigChangedEvent
	 * Size -> 0x0004
	 */
	struct FServerMatchmakingConfigChangedEvent
	{
	public:
		unsigned char                                              UnknownData_J0UX[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingCrewLeftEvent
	 * Size -> 0x0010
	 */
	struct FServerMatchmakingCrewLeftEvent
	{
	public:
		unsigned char                                              UnknownData_EC25[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingPlayerServerAssignmentEvent
	 * Size -> 0x00B8
	 */
	struct FServerMatchmakingPlayerServerAssignmentEvent
	{
	public:
		unsigned char                                              UnknownData_QZDN[0xB8];                                  // 0x0000(0x00B8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingResultEvent
	 * Size -> 0x0028
	 */
	struct FServerMatchmakingResultEvent
	{
	public:
		unsigned char                                              UnknownData_J4JU[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingPlayerCrewAssignmentEvent
	 * Size -> 0x0090
	 */
	struct FServerMatchmakingPlayerCrewAssignmentEvent
	{
	public:
		unsigned char                                              UnknownData_8LKC[0x90];                                  // 0x0000(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingRequestEvent
	 * Size -> 0x00A8
	 */
	struct FServerMatchmakingRequestEvent
	{
	public:
		unsigned char                                              UnknownData_IKBD[0xA8];                                  // 0x0000(0x00A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingRefusedEvent
	 * Size -> 0x0088
	 */
	struct FServerMatchmakingRefusedEvent
	{
	public:
		unsigned char                                              UnknownData_1Q6L[0x88];                                  // 0x0000(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerJoinRefusedMessage
	 * Size -> 0x0010
	 */
	struct FPlayerJoinRefusedMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerMatchmakingFailedMessage
	 * Size -> 0x0014
	 */
	struct FServerMatchmakingFailedMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EServerMatchmakingFailureReason                            Reason;                                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_53JW[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerServerAssignmentMessage
	 * Size -> 0x0038
	 */
	struct FPlayerServerAssignmentMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ServerAddress;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ConnectionKey;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint64_t                                                   ConnectionToken;                                         // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerJoinCrewInProgressRequestMessage
	 * Size -> 0x0040
	 */
	struct FPlayerJoinCrewInProgressRequestMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0010(0x0018)
		class FString                                              PirateId;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		ECrewSessionType                                           SessionType;                                             // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S3UU[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerCrewAssignmentMessage
	 * Size -> 0x0040
	 */
	struct FPlayerCrewAssignmentMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FUniqueNetIdRepl                                    UserId;                                                  // 0x0010(0x0018)
		class FString                                              PirateId;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		ECrewSessionType                                           SessionType;                                             // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WUOB[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ServerCrewCapacity;                                      // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewServerRequestMessage
	 * Size -> 0x0048
	 */
	struct FCrewServerRequestMessage
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              PirateId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BuildId;                                                 // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       JoinInProgress;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		ECrewSessionType                                           SessionType;                                             // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XWV5[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ServerLocations;                                         // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ServiceStatusNotificationModel
	 * Size -> 0x0020
	 */
	struct FServiceStatusNotificationModel
	{
	public:
		uint32_t                                                   NotificationId;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PZRC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           ActivatedDateTimeUtc;                                    // 0x0008(0x0008) ZeroConstructor
		struct FGuid                                               CorrelationId;                                           // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServiceStatusNotificationCollectionModel
	 * Size -> 0x0010
	 */
	struct FServiceStatusNotificationCollectionModel
	{
	public:
		TArray<struct FServiceStatusNotificationModel>             Notifications;                                           // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StickyNotificationUpdatedMessage
	 * Size -> 0x0001
	 */
	struct FStickyNotificationUpdatedMessage
	{
	public:
		unsigned char                                              UnknownData_V3GT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardHandInPopupNetworkEvent
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FRewardHandInPopupNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpAudioDesc*                                     AudioOverride;                                           // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                FormattingText;                                          // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_KTWP[0x20];                                  // 0x0038(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FString>                                      Images;                                                  // 0x0058(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ServerAllocationSessionCookie
	 * Size -> 0x0090
	 */
	struct FServerAllocationSessionCookie
	{
	public:
		class FString                                              ServerLocation;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PrivateServerId;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FPlayModeDefiniton                                  PlayModeDefinition;                                      // 0x0020(0x0028)
		int32_t                                                    CrewCountBucket;                                         // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8UJW[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TitleVersion;                                            // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   FeatureHash;                                             // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FOYT[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StampId;                                                 // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ProgressionEnabled;                                      // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3OK9[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HostID;                                                  // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerShutdownRequestFilter
	 * Size -> 0x0058
	 */
	struct FServerShutdownRequestFilter
	{
	public:
		struct FDateTime                                           ShutdownTimeUtc;                                         // 0x0000(0x0008) ZeroConstructor
		class FString                                              VersionNumber;                                           // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		EPlayMode                                                  PlayMode;                                                // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EServerEnvironmentShutdownStatus                           ServerEnvironmentStatus;                                 // 0x001A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S1TE[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FeatureHash;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BuildId;                                                 // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   AgeOverSeconds;                                          // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               SessionId;                                               // 0x0044(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MD4O[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShutdownServerMessage
	 * Size -> 0x0070
	 */
	struct FShutdownServerMessage
	{
	public:
		class FString                                              ShutdownReason;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ShutdownNonActiveServers;                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MQB2[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FServerShutdownRequestFilter                        ServerShutdownRequestFilter;                             // 0x0018(0x0058)
	};

	/**
	 * ScriptStruct Athena.FeatureConfigTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FFeatureConfigTelemetryEvent
	{
	public:
		class FString                                              FeatureConfigHash;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FJsonObjectWrapper                                  Json;                                                    // 0x0010(0x0018)
	};

	/**
	 * ScriptStruct Athena.ServerHeartbeatTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FServerHeartbeatTelemetryEvent
	{
	public:
		struct FTimespan                                           ServerUptime;                                            // 0x0000(0x0008) ZeroConstructor
		struct FTimespan                                           ServerTimeToLive;                                        // 0x0008(0x0008) ZeroConstructor
		class FString                                              ServerAddress;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ForcingShutdown;                                         // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZIWU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventScreenSizeInfoRequest
	 * Size -> 0x0001
	 */
	struct FEventScreenSizeInfoRequest
	{
	public:
		unsigned char                                              UnknownData_IRRD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventScreenSizeInfo
	 * Size -> 0x001C
	 */
	struct FEventScreenSizeInfo
	{
	public:
		int32_t                                                    ScreenWidth;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ScreenHeight;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    WindowWidth;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    WindowHeight;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AutoDetectedMaxVerticalResolution;                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AutoDetectedMachineSpec;                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsFullScreen;                                            // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2ML8[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AlwaysSkipMapTableAnimationChangeEvent
	 * Size -> 0x0001
	 */
	struct FAlwaysSkipMapTableAnimationChangeEvent
	{
	public:
		bool                                                       AlwaysSkipMapTableAnimation;                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.GameNarrationOverrideStateChangeEvent
	 * Size -> 0x0004
	 */
	struct FGameNarrationOverrideStateChangeEvent
	{
	public:
		int32_t                                                    Status;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientBootFlowStampSwapResultTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FClientBootFlowStampSwapResultTelemetryEvent
	{
	public:
		class FString                                              FromStampId;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ToStampId;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       StampSwapOccurred;                                       // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3OME[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientBootFlowExistingSessionTelemetry
	 * Size -> 0x0040
	 */
	struct FClientBootFlowExistingSessionTelemetry
	{
	public:
		class FString                                              SessionId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PlayMode;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionType;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              OwningUserId;                                            // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientBootFlowExistingSessionsRetrievedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FClientBootFlowExistingSessionsRetrievedTelemetryEvent
	{
	public:
		int32_t                                                    OfferedSessionIndex;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WTQ3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FClientBootFlowExistingSessionTelemetry>     ExistingSessions;                                        // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.InvalidDependencyRootPackageEncounteredTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FInvalidDependencyRootPackageEncounteredTelemetryEvent
	{
	public:
		class FString                                              DependencyRootPackageName;                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ImportPackageName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerPlayerBannedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FServerPlayerBannedTelemetryEvent
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientInputMatchmakingNotificationResultTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientInputMatchmakingNotificationResultTelemetryEvent
	{
	public:
		bool                                                       Accepted;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientEndEngagementMessageTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FClientEndEngagementMessageTelemetryEvent
	{
	public:
		float                                                      ScreenDuration;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_OUKG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EndedScreen;                                             // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientBootFlowErrorOccurredTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientBootFlowErrorOccurredTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientPirateDeleteTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientPirateDeleteTelemetryEvent
	{
	public:
		class FString                                              PirateId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientOptedIntoMarketingTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientOptedIntoMarketingTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_MPQO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SyncLoadPackageTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FSyncLoadPackageTelemetryEvent
	{
	public:
		class FString                                              ObjectName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PackageName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientReachedInGameTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FClientReachedInGameTelemetryEvent
	{
	public:
		struct FGuid                                               PlayerGameId;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              SessionType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               MatchmakingAttemptId;                                    // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientStartConnectingToServerTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientStartConnectingToServerTelemetryEvent
	{
	public:
		struct FGuid                                               MatchmakingAttemptId;                                    // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientStartServerMatchmakingTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FClientStartServerMatchmakingTelemetryEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              SessionType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               MatchmakingAttemptId;                                    // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientStartCrewMatchmakingTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FClientStartCrewMatchmakingTelemetryEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              SessionType;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               MatchmakingAttemptId;                                    // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientStartLobbyTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientStartLobbyTelemetryEvent
	{
	public:
		class FString                                              SessionType;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientStartSessionSelectionTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientStartSessionSelectionTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_Q7B4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientStartPirateSelectionTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientStartPirateSelectionTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_CDGE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WaitForLoadingScreenTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FWaitForLoadingScreenTelemetryEvent
	{
	public:
		class FString                                              OldStateName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NewStateName;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      OldStateDuration;                                        // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_X2UN[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientProfileLogInTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientProfileLogInTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_AQHG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootFlowNetworkErrorTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FBootFlowNetworkErrorTelemetryEvent
	{
	public:
		double                                                     TimeConnected;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ServerAddress;                                           // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Message;                                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientInputBlockedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FClientInputBlockedTelemetryEvent
	{
	public:
		class FString                                              BlockedKey;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientInfoTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FClientInfoTelemetryEvent
	{
	public:
		class FString                                              OSVersion;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              OSSubVersion;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestTavernStagingTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FContestTavernStagingTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_WXU1[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_ZDWK[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestTavernStagingTelemetryFragment
	 * Size -> 0x0014
	 */
	struct FContestTavernStagingTelemetryFragment
	{
	public:
		int32_t                                                    CrewCountNeeded;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    OpenCrewMemberCountNeeded;                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TickingCountdown;                                        // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HasServerRecruitmentTimeEnded;                           // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_T50K[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TavernPlayersAwaitingSpawn;                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AreCrewsReadyToStart;                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_074A[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestCrewPositionTelemetryFragmentInput
	 * Size -> 0x0020
	 */
	struct FContestCrewPositionTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GX6W[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestCrewPositionTelemetryFragment
	 * Size -> 0x0014
	 */
	struct FContestCrewPositionTelemetryFragment
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CrewPositionInLastContest;                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestBaseTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FContestBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_SED3[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_BBON[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestBaseTelemetryFragment
	 * Size -> 0x0038
	 */
	struct FContestBaseTelemetryFragment
	{
	public:
		struct FGuid                                               ContestUniqueId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ContestVoyageName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EContestScoreId                                            ContestScoreIdentifier;                                  // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J2S0[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeRemainingInCurrentContestState;                      // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              ShipSize;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestParticipantTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FContestParticipantTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_JCQD[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_I8EQ[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestParticipantData
	 * Size -> 0x0014
	 */
	struct FContestParticipantData
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    NumberOfCrewMembers;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestParticipantTelemetryFragment
	 * Size -> 0x0018
	 */
	struct FContestParticipantTelemetryFragment
	{
	public:
		int32_t                                                    NumberOfCrews;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfParticipants;                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FContestParticipantData>                     ContestParticipants;                                     // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ContestScoreTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FContestScoreTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_1I07[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_SEM8[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestScoreTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FContestScoreTelemetryFragment
	{
	public:
		TArray<struct FCrewScore>                                  CrewScores;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ServerTavernCrewMatchmakingVisibilityChangedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernCrewMatchmakingVisibilityChangedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_PPBF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernServerRecruitmentEndedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernServerRecruitmentEndedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_XFTO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernStagingCountdownStoppedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernStagingCountdownStoppedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_9HFQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernStagingCountdownStartedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernStagingCountdownStartedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_R48J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernRecruitmentEndedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernRecruitmentEndedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_D068[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernSinglePlayerSpawnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernSinglePlayerSpawnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_3E5M[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerTavernHeartbeatTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerTavernHeartbeatTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_RZRB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RivalChangeTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FRivalChangeTelemetryEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerPlayerContestLeftTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerPlayerContestLeftTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_Q4MO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerPlayerContestJoinedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerPlayerContestJoinedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_FQ1X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerContestStateUpdateTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerContestStateUpdateTelemetryEvent
	{
	public:
		EContestState                                              CurrentContestState;                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerContestScoreUpdateTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FServerContestScoreUpdateTelemetryEvent
	{
	public:
		EScoreReason                                               ReasonForScoreChange;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JZC4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentCrewScore;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ScoreChangeAmount;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5Q33[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ScoreContext;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               InstigatorId;                                            // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerDeniedClientAtPreLoginTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FServerDeniedClientAtPreLoginTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EPreLoginDeniedReason                                      ReasonCode;                                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_475I[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FireTelemetryInput
	 * Size -> 0x0010
	 */
	struct FFireTelemetryInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_HQW3[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_IJXX[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FireTelemetryFragment
	 * Size -> 0x0008
	 */
	struct FFireTelemetryFragment
	{
	public:
		int32_t                                                    NumOfShipWithActiveCells;                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumOfActiveCells;                                        // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ErrorHappeningEvent
	 * Size -> 0x0001
	 */
	struct FErrorHappeningEvent
	{
	public:
		unsigned char                                              UnknownData_EOAG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientMemoryReportSentTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientMemoryReportSentTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_3SLA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientOutOfMemoryTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientOutOfMemoryTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_I68H[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientPanicGarbageCollectionTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FClientPanicGarbageCollectionTelemetryEvent
	{
	public:
		int32_t                                                    GCPanicMemThreshold;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PercentMemUsedBefore;                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   UsedPhysicalBefore;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   PercentMemUsedAfter;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3T3U[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   UsedPhysicalAfter;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientHighMemoryPerformanceTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientHighMemoryPerformanceTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_YM6C[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientPerformanceTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FClientPerformanceTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_DLTP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerPerformanceTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FServerPerformanceTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_1TRH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoiceChatStatusTelemetryEvent
	 * Size -> 0x0002
	 */
	struct FVoiceChatStatusTelemetryEvent
	{
	public:
		EVoiceChatAudioDevice                                      Device;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsInPartyChat;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.GraphicalSettingsTelemetryEvent
	 * Size -> 0x0004
	 */
	struct FGraphicalSettingsTelemetryEvent
	{
	public:
		uint32_t                                                   AutoDetectBucket;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.KeyBinding
	 * Size -> 0x0020
	 */
	struct FKeyBinding
	{
	public:
		class FString                                              BindingName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                KeyName;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EInputControllerType                                       ControllerType;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Q5XR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PersistentUserGameSettings
	 * Size -> 0x0180
	 */
	struct FPersistentUserGameSettings
	{
	public:
		bool                                                       InvertYAxisGamepad;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertYAxisMouse;                                        // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertXAxisGamepad;                                      // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InvertXAxisMouse;                                        // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseVirtualKeyboard;                                      // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePlatformForUnattenuatedChat;                          // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePushToTalk;                                           // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseProximityChatDirection;                               // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ForceFeedbackIntensity;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FieldOfView;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MasterVolume;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SfxVolume;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MusicVolume;                                             // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShantyVolume;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CrewChatVolume;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NonCrewChatVolume;                                       // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Brightness;                                              // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VSync;                                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaxFPS;                                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Fullscreen;                                              // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ISHY[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxVerticalResolution;                                   // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DefaultDetail;                                           // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ShadowDetail;                                            // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ModelDetail;                                             // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TextureDetail;                                           // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    WaterDetail;                                             // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AnimationQuality;                                        // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MMCThresholdScale;                                       // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ParticleEmitterQuality;                                  // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ParticleResolutionQuality;                               // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ResolutionScaling;                                       // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LightingDetail;                                          // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    BackBufferCount;                                         // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity;                                   // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerDeadzone;                                      // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerNonLinearity;                                  // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_Blunderbuss;                            // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Blunderbuss;                       // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_Flintlock;                              // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Flintlock;                         // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_EyeOfReach;                             // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_EyeOfReach;                        // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_Spyglass;                               // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_Spyglass;                          // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MouseSensitivity_TridentOfDarkTides;                     // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ControllerSensitivity_TridentOfDarkTides;                // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U3EE[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FKeyBinding>                                 ActionBindings;                                          // 0x00A8(0x0010) ZeroConstructor
		TArray<struct FKeyBinding>                                 AxisBindings;                                            // 0x00B8(0x0010) ZeroConstructor
		int32_t                                                    ShowPerformanceCounters;                                 // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfLogins;                                          // 0x00CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OptedInToMarketing;                                      // 0x00D0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KA40[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KeyboardLayout;                                          // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    GameLanguage;                                            // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShowPlayerTalkingIndicator;                              // 0x00DC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       MuteCopyrightedAudio;                                    // 0x00DD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseAltMapMarkTexture;                                    // 0x00DE(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       VariableRefreshRate;                                     // 0x00DF(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      HighDynamicRangeCalib;                                   // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HDR;                                                     // 0x00E4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1AW9[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CVDMode;                                                 // 0x00E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CVDStrength;                                             // 0x00EC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ColorSaturationScale;                                    // 0x00F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NotificationScale;                                       // 0x00F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Joinable;                                                // 0x00F8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOwnCrewNameplates;                                   // 0x00F9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOtherCrewNameplates;                                 // 0x00FA(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowFishNameplates;                                      // 0x00FB(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowOwnCrewStatusTags;                                   // 0x00FC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ScrambleGamertags;                                       // 0x00FD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShowTallTalesOnMapTable;                                 // 0x00FE(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AutoVoteOnProposedVoyage;                                // 0x00FF(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NotificationsInMenus;                                    // 0x0100(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ToggleRadialMenu;                                        // 0x0101(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       StickyRadialItems;                                       // 0x0102(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableMovementDuringRadial;                              // 0x0103(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableLookWhenControllingObject;                         // 0x0104(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableAutoCentreLook;                                    // 0x0105(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HHQD[0x2];                                   // 0x0106(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoCentreLookTimeDelay;                                 // 0x0108(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AutoCentreLookSpeed;                                     // 0x010C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HoldActionsDontRequireHold;                              // 0x0110(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HoldActionsWithHeldItemsDontRequireHold;                 // 0x0111(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_EU66[0x2];                                   // 0x0112(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TTSOverride;                                             // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    STTOverride;                                             // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LGRTMOverride;                                           // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TranslateOtherPlayers;                                   // 0x0120(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ScreenSpaceTooltips;                                     // 0x0121(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateToasts;                                           // 0x0122(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N2KF[0x1];                                   // 0x0123(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ToastHoldDurationMultiplier;                             // 0x0124(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NarrateOnHover;                                          // 0x0128(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateChangeOnly;                                       // 0x0129(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateEmotes;                                           // 0x012A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EscapeAsBackAccessibilityOption;                         // 0x012B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CrossInputPreference;                                    // 0x012C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AdventureCrossInputPreference;                           // 0x012D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UXRC[0x2];                                   // 0x012E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AdventureIslandBanners;                                  // 0x0130(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ArenaIslandBanners;                                      // 0x0134(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OutpostLocationBanners;                                  // 0x0138(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UXB7[0x3];                                   // 0x0139(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UseSingleStick;                                          // 0x013C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    UseSingleStickSettingsApplied;                           // 0x0140(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    UseSingleStickCameraToggle;                              // 0x0144(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SingleStickState;                                        // 0x0148(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableControllerOnPC;                                   // 0x014C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       RecenterMouseInMenus;                                    // 0x014D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AutoFloatInWater;                                        // 0x014E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NHI2[0x1];                                   // 0x014F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PushToTalkMode;                                          // 0x0150(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       CircularUINavigation;                                    // 0x0154(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Enable120Hz;                                             // 0x0155(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AlwaysSkipMapTableAnimation;                             // 0x0156(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AudioMonoMix;                                            // 0x0157(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AudioOutputHeadphones;                                   // 0x0158(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AudioOutputSpatialAudio;                                 // 0x0159(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableSeasonsNotifications;                             // 0x015A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       AllowCrewToCustomiseCaptainedShip;                       // 0x015B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableTutorialAttractAnimation;                          // 0x015C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableInviteNotifications;                              // 0x015D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ControlledTextAlignment;                                 // 0x015E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ControlledLineHeight;                                    // 0x015F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    OtherCrewsMuteState;                                     // 0x0160(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NauticalNarrationEnabled;                                // 0x0164(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NarrateInteractableText;                                 // 0x0168(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateInteractableButtons;                              // 0x0169(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IgnoreDisabledInteractables;                             // 0x016A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FishNameplateNarrationEnabled;                           // 0x016B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      ContinuousNarrationDelay;                                // 0x016C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DisableFlashes;                                          // 0x0170(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableBlur;                                             // 0x0171(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableScreenShake;                                      // 0x0172(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableOnScreenEffects;                                  // 0x0173(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnchantedCompassProximityAnnouncerEnabled;               // 0x0174(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DisableRats;                                             // 0x0175(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       EnableSqueakyWheel;                                      // 0x0176(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TJKN[0x1];                                   // 0x0177(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SqueakyWheelVolume;                                      // 0x0178(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9P2I[0x4];                                   // 0x017C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UserSettingsTelemetryEvent
	 * Size -> 0x0190
	 */
	struct FUserSettingsTelemetryEvent
	{
	public:
		int32_t                                                    AutoDetectedMachineSpec;                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AUVA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPersistentUserGameSettings                         UserSettings;                                            // 0x0008(0x0180)
		bool                                                       RHIThread;                                               // 0x0188(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WR3Q[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTestControlStateEnd
	 * Size -> 0x0001
	 */
	struct FEventTestControlStateEnd
	{
	public:
		unsigned char                                              UnknownData_1R0P[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTestControlStateFullyDocked
	 * Size -> 0x0001
	 */
	struct FEventTestControlStateFullyDocked
	{
	public:
		unsigned char                                              UnknownData_UJQV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTestControlStateStart
	 * Size -> 0x0001
	 */
	struct FEventTestControlStateStart
	{
	public:
		unsigned char                                              UnknownData_2VXR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTestControlStateUpdate
	 * Size -> 0x0001
	 */
	struct FEventTestControlStateUpdate
	{
	public:
		unsigned char                                              UnknownData_HSS2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TestControlObjectActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FTestControlObjectActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		float                                                      DockTime;                                                // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1XOU[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TestNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FTestNetworkEvent : public FNetworkEventStruct
	{
	public:
		int32_t                                                    Data;                                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RB6O[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PrepareInstantFireRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FPrepareInstantFireRpc : public FBoxedRpc
	{
	public:
		class ATestProjectileWeapon*                               Weapon;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RenderToTextureTestReadyEvent
	 * Size -> 0x0001
	 */
	struct FRenderToTextureTestReadyEvent
	{
	public:
		unsigned char                                              UnknownData_VWUD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RenderToTextureTestStringEvent
	 * Size -> 0x0010
	 */
	struct FRenderToTextureTestStringEvent
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RenderToTextureTestChangeEvent
	 * Size -> 0x0008
	 */
	struct FRenderToTextureTestChangeEvent
	{
	public:
		class AActor*                                              Object;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FinishIntroAnimaticTutorialStepRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FFinishIntroAnimaticTutorialStepRpc : public FBoxedRpc
	{
	public:
		class UAthenaTutorialComponent*                            TutorialComponent;                                       // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CinematicEmissaryEvent
	 * Size -> 0x000C
	 */
	struct FCinematicEmissaryEvent
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Tag;                                                     // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CinematicEmissaryNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FCinematicEmissaryNetworkEvent : public FNetworkEventStruct
	{
	public:
		int32_t                                                    Level;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Tag;                                                     // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7P80[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FrontendCrewMember
	 * Size -> 0x0028
	 */
	struct FFrontendCrewMember
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       CurrentPlayer;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Captain;                                                 // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ReservedForPlayerThatDroppedConnection;                  // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3AF8[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FrontendCrewDefinition
	 * Size -> 0x0010
	 */
	struct FFrontendCrewDefinition
	{
	public:
		TArray<struct FFrontendCrewMember>                         CrewMembers;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewUpdateEvent
	 * Size -> 0x0010
	 */
	struct FCrewUpdateEvent
	{
	public:
		struct FFrontendCrewDefinition                             CrewDefinition;                                          // 0x0000(0x0010)
	};

	/**
	 * ScriptStruct Athena.SetContestShipTypes
	 * Size -> 0x0005
	 */
	struct FSetContestShipTypes
	{
	public:
		bool                                                       IsGalleonEnabled;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsBrigantineEnabled;                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsSloopEnabled;                                          // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsSloopDuoEnabled;                                       // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsMixedGalleonBrigantineEnabled;                         // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SetFrontEndSelection
	 * Size -> 0x0005
	 */
	struct FSetFrontEndSelection
	{
	public:
		bool                                                       IsAdventureActive;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsArenaActive;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsTutorialActive;                                        // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsCreativeActive;                                        // 0x0003(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsBeachNPCSpawnActive;                                   // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NotifyFrontendOfCurrentPirateStatus
	 * Size -> 0x0001
	 */
	struct FNotifyFrontendOfCurrentPirateStatus
	{
	public:
		bool                                                       Locked;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NotifyFrontendOfPirateDeletionFailure
	 * Size -> 0x0001
	 */
	struct FNotifyFrontendOfPirateDeletionFailure
	{
	public:
		unsigned char                                              UnknownData_YE8Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FrontendRequestPirateDeletionEvent
	 * Size -> 0x0001
	 */
	struct FFrontendRequestPirateDeletionEvent
	{
	public:
		unsigned char                                              UnknownData_T6LU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PirateSelectedTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FPirateSelectedTelemetryEvent
	{
	public:
		class FString                                              PirateEthnicity;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateGender;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              HighestWeightedBodyShape;                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      PirateAge;                                               // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PirateGenerationRequestCount;                            // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrosshairUI
	 * Size -> 0x0110
	 */
	struct FCrosshairUI
	{
	public:
		class AProjectileWeapon*                                   WieldedWeapon;                                           // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1Q8V[0x108];                                 // 0x0008(0x0108) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementInfosFailedEvent
	 * Size -> 0x0001
	 */
	struct FEntitlementInfosFailedEvent
	{
	public:
		unsigned char                                              UnknownData_KXKY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementInfosResponseUIEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementInfosResponseUIEvent
	{
	public:
		TArray<struct FEntitlementInfo>                            EntitlementInfos;                                        // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EntitlementInfosRequestUIEvent
	 * Size -> 0x0010
	 */
	struct FEntitlementInfosRequestUIEvent
	{
	public:
		TArray<class FString>                                      EntitlementIds;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ItemPreviewItemChanged
	 * Size -> 0x0010
	 */
	struct FItemPreviewItemChanged
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemPreviewLoadingEvent
	 * Size -> 0x0001
	 */
	struct FItemPreviewLoadingEvent
	{
	public:
		unsigned char                                              UnknownData_SKVA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemPreviewCreatedEvent
	 * Size -> 0x0010
	 */
	struct FItemPreviewCreatedEvent
	{
	public:
		class FString                                              PreviewURL;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestDestroyItemPreviewEvent
	 * Size -> 0x0001
	 */
	struct FRequestDestroyItemPreviewEvent
	{
	public:
		unsigned char                                              UnknownData_P9K8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCreateItemPreviewEvent
	 * Size -> 0x0008
	 */
	struct FRequestCreateItemPreviewEvent
	{
	public:
		int32_t                                                    ResolutionX;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ResolutionY;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateProfileRTTGeneratedPNGEvent
	 * Size -> 0x0020
	 */
	struct FPirateProfileRTTGeneratedPNGEvent
	{
	public:
		unsigned char                                              UnknownData_Q5YV[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestPirateProfileRTTDestroyEvent
	 * Size -> 0x0001
	 */
	struct FRequestPirateProfileRTTDestroyEvent
	{
	public:
		unsigned char                                              UnknownData_0ZAE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestPirateProfileRTTEvent
	 * Size -> 0x0018
	 */
	struct FRequestPirateProfileRTTEvent
	{
	public:
		unsigned char                                              UnknownData_CJYT[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericPopupAudioDescriptor
	 * Size -> 0x0040
	 */
	struct FGenericPopupAudioDescriptor
	{
	public:
		class FString                                              SfxEventName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EventName;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              SwitchName;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              SwitchValue;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WorldLocationBannerEvent
	 * Size -> 0x0060
	 */
	struct FWorldLocationBannerEvent
	{
	public:
		struct FGenericPopupAudioDescriptor                        Audio;                                                   // 0x0000(0x0040)
		class FString                                              IconPath;                                                // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmissaryDeactivatedNotificationUIEvent
	 * Size -> 0x0001
	 */
	struct FEmissaryDeactivatedNotificationUIEvent
	{
	public:
		unsigned char                                              UnknownData_DRRQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmissaryProgressUpdatedNotificationUIEvent
	 * Size -> 0x0068
	 */
	struct FEmissaryProgressUpdatedNotificationUIEvent
	{
	public:
		float                                                      Old;                                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      New;                                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankIncreaseAudioCue;                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankIncreaseStopAudioCue;                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankLevelUpAudioCue;                                     // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankTriggerAudioCue;                                     // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankLevelUpMusicCue;                                     // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PopupQueueFinished
	 * Size -> 0x0010
	 */
	struct FPopupQueueFinished
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PopupQueueStarted
	 * Size -> 0x0010
	 */
	struct FPopupQueueStarted
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PopupQueuePlay
	 * Size -> 0x0030
	 */
	struct FPopupQueuePlay
	{
	public:
		class FString                                              Id;                                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EventName;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EventData;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProgressPoint
	 * Size -> 0x0018
	 */
	struct FProgressPoint
	{
	public:
		float                                                      Progress;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ABRK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Image;                                                   // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProgressUpdatedNotificationUIEvent
	 * Size -> 0x0108
	 */
	struct FProgressUpdatedNotificationUIEvent
	{
	public:
		struct FProgressPoint                                      Old;                                                     // 0x0000(0x0018)
		struct FProgressPoint                                      New;                                                     // 0x0018(0x0018)
		class FString                                              RibbonImage;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BackgroundImage;                                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                Title;                                                   // 0x0050(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_DMUM[0x20];                                  // 0x0068(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Body;                                                    // 0x0088(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ZWQ6[0x20];                                  // 0x00A0(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EProgressStyle                                             Style;                                                   // 0x00C0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0RQ0[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RankIncreaseAudioCue;                                    // 0x00C8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankIncreaseStopAudioCue;                                // 0x00D8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankLevelUpAudioCue;                                     // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RankTriggerAudioCue;                                     // 0x00F8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmissaryValueChangeUIEvent
	 * Size -> 0x0020
	 */
	struct FEmissaryValueChangeUIEvent
	{
	public:
		int64_t                                                    From;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    To;                                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              EmissaryId;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CurrencyGrantedNotificationUIEvent
	 * Size -> 0x0038
	 */
	struct FCurrencyGrantedNotificationUIEvent
	{
	public:
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3WAW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              DisplayAmount;                                           // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryAddition;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmissaryId;                                              // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PopUpNotificationUIEvent
	 * Size -> 0x00A8
	 */
	struct FPopUpNotificationUIEvent
	{
	public:
		class FString                                              BackgroundImage;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ForegroundImage;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                Text;                                                    // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_0EDB[0x20];                                  // 0x0038(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              AudioSfxEventName;                                       // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioEventName;                                          // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioSwitchName;                                         // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioSwitchValue;                                        // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              StyleModifier;                                           // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HideTutorialNotificationUIEvent
	 * Size -> 0x0001
	 */
	struct FHideTutorialNotificationUIEvent
	{
	public:
		unsigned char                                              UnknownData_L5AX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericNotificationUIEvent
	 * Size -> 0x00B0
	 */
	struct FGenericNotificationUIEvent
	{
	public:
		TArray<class FText>                                        Text;                                                    // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      Images;                                                  // 0x0010(0x0010) ZeroConstructor
		class FString                                              Background;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      FlagIcons;                                               // 0x0030(0x0010) ZeroConstructor
		class FString                                              StampIcon;                                               // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGenericPopupAudioDescriptor                        Audio;                                                   // 0x0050(0x0040)
		TArray<EStyleModifiers>                                    StyleModifiers;                                          // 0x0090(0x0010) ZeroConstructor
		bool                                                       OnlyPlayAudio;                                           // 0x00A0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       PlayAudio;                                               // 0x00A1(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KDQ1[0x2];                                   // 0x00A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HoldDuration;                                            // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Multiplier;                                              // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       SupportsHotlinkToMenus;                                  // 0x00AC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_G7LJ[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShowTutorialNotificationUIEvent
	 * Size -> 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
	 */
	struct FShowTutorialNotificationUIEvent : public FGenericNotificationUIEvent
	{	};

	/**
	 * ScriptStruct Athena.VoyageCompleteAnimationEvent
	 * Size -> 0x0060
	 */
	struct FVoyageCompleteAnimationEvent
	{
	public:
		class FText                                                VoyageTitle;                                             // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_6XK1[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              AudioSwitchName;                                         // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioSwitchValue;                                        // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageChapterBegunAnimationEvent
	 * Size -> 0x0068
	 */
	struct FVoyageChapterBegunAnimationEvent
	{
	public:
		int32_t                                                    ChapterIndex;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ChapterCount;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                VoyageTitle;                                             // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_1Z9O[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              AudioSwitchName;                                         // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioSwitchValue;                                        // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageBegunAnimationEvent
	 * Size -> 0x00B0
	 */
	struct FVoyageBegunAnimationEvent
	{
	public:
		class FText                                                ShipName;                                                // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_TMEN[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FString>                                      CrewMembers;                                             // 0x0038(0x0010) ZeroConstructor
		int32_t                                                    ChapterIndex;                                            // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ChapterCount;                                            // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                VoyageTitle;                                             // 0x0050(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_O2KK[0x20];                                  // 0x0068(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              AudioSwitchName;                                         // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioSwitchValue;                                        // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerNameplateUIInfo
	 * Size -> 0x0040
	 */
	struct FPlayerNameplateUIInfo
	{
	public:
		class FString                                              GamerTag;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EAttitudeTowardActor                                       Attitude;                                                // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EVoiceChatState                                            ChatState;                                               // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4FZB[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Health;                                                  // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HealthVisible;                                           // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TitleVisible;                                            // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2IVS[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              NameplateIconReference;                                  // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPlayerNameplateUIEventData
	 * Size -> 0x0048
	 */
	struct FRequestPlayerNameplateUIEventData
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Id;                                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FPlayerNameplateUIInfo                              Data;                                                    // 0x0008(0x0040)
	};

	/**
	 * ScriptStruct Athena.UpdateRivalVoteCountUIEvent
	 * Size -> 0x000C
	 */
	struct FUpdateRivalVoteCountUIEvent
	{
	public:
		int32_t                                                    VoteCount;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VoteLimit;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HasPlayerVotedInFavour;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_X1XD[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetRivalVotingUIEvent
	 * Size -> 0x0028
	 */
	struct FSetRivalVotingUIEvent
	{
	public:
		class FString                                              TitleTextAsString;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BodyTextAsString;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UClass*                                              NotificationInputId;                                     // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HideRivalVotingUIEvent
	 * Size -> 0x0001
	 */
	struct FHideRivalVotingUIEvent
	{
	public:
		unsigned char                                              UnknownData_8K2V[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShowRivalVotingUIEvent
	 * Size -> 0x0001
	 */
	struct FShowRivalVotingUIEvent
	{
	public:
		unsigned char                                              UnknownData_S15I[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BoxedRpcShipStockOffersPurchased
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FBoxedRpcShipStockOffersPurchased : public FBoxedRpc
	{
	public:
		TArray<struct FGuid>                                       OfferIds;                                                // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UIWhatsNewAvailableArticlesTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FUIWhatsNewAvailableArticlesTelemetryEvent
	{
	public:
		TArray<class FString>                                      Articles;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UIAdventuresDataErrorTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FUIAdventuresDataErrorTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UILiveCampaignDataErrorTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FUILiveCampaignDataErrorTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UISeasonsDataErrorTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FUISeasonsDataErrorTelemetryEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PopUpQueueServicePausedTelemetryEvent
	 * Size -> 0x0008
	 */
	struct FPopUpQueueServicePausedTelemetryEvent
	{
	public:
		bool                                                       Paused;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q9HR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Reason;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIPremiumStoreItemInteractTelemetryEvent
	 * Size -> 0x0060
	 */
	struct FUIPremiumStoreItemInteractTelemetryEvent
	{
	public:
		class FString                                              CurrencyUsed;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EngagementOutcome;                                       // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemCost;                                                // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemName;                                                // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PageName;                                                // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIPremiumStorePanelHighlightTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FUIPremiumStorePanelHighlightTelemetryEvent
	{
	public:
		class FString                                              CurrentPage;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CurrentPanel;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      TimeOnPanel;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9TBU[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIPremiumStorePageTransitionTelemetryEvent
	 * Size -> 0x0048
	 */
	struct FUIPremiumStorePageTransitionTelemetryEvent
	{
	public:
		class FString                                              CurrentPage;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousHighlight;                                       // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousPage;                                            // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      TimeOnPreviousPage;                                      // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IA7Z[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIPremiumStoreOpenTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FUIPremiumStoreOpenTelemetryEvent
	{
	public:
		bool                                                       IsFrontend;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_F63Q[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SessionId;                                               // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIScreenTransitionTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FUIScreenTransitionTelemetryEvent
	{
	public:
		class FString                                              CurrentScreen;                                           // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousScreen;                                          // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UISetAudioSwitchEvent
	 * Size -> 0x0020
	 */
	struct FUISetAudioSwitchEvent
	{
	public:
		class FString                                              SwitchGroup;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SwitchValue;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIAudioCueEvent
	 * Size -> 0x0010
	 */
	struct FUIAudioCueEvent
	{
	public:
		class FString                                              CueKey;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PurchaseCatalogOfferFailureResponseUIEvent
	 * Size -> 0x0001
	 */
	struct FPurchaseCatalogOfferFailureResponseUIEvent
	{
	public:
		unsigned char                                              UnknownData_HQ2N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchaseCatalogOfferResponseUIEvent
	 * Size -> 0x0001
	 */
	struct FPurchaseCatalogOfferResponseUIEvent
	{
	public:
		unsigned char                                              UnknownData_XRUF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PurchaseCatalogOfferRequestUIEvent
	 * Size -> 0x0020
	 */
	struct FPurchaseCatalogOfferRequestUIEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               CatalogOfferId;                                          // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CatagoriesDataFailureResponseUIEvent
	 * Size -> 0x0001
	 */
	struct FCatagoriesDataFailureResponseUIEvent
	{
	public:
		unsigned char                                              UnknownData_UR69[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CatagoriesDataResponseUIEvent
	 * Size -> 0x0010
	 */
	struct FCatagoriesDataResponseUIEvent
	{
	public:
		TArray<struct FShopOffer>                                  Offers;                                                  // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CatagoriesDataRequestUIEvent
	 * Size -> 0x0010
	 */
	struct FCatagoriesDataRequestUIEvent
	{
	public:
		class FString                                              CatalogName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ChestEntitlementViewModel
	 * Size -> 0x00C0
	 */
	struct FChestEntitlementViewModel
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_K8K4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemDesc;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Name;                                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ThumbnailImageUrl;                                       // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviewImageUrl;                                         // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    SlotId;                                                  // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FAKE[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category;                                                // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmoteBackgroundImageUrl;                                 // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EmoteIconImageUrl;                                       // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       DoesPlayerOwnEntitlement;                                // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RN0B[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Cost;                                                    // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsLocked;                                                // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SFKA[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      PreviewDescriptions;                                     // 0x00B0(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ChestTabViewModel
	 * Size -> 0x0068
	 */
	struct FChestTabViewModel
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CategoryImageUrl;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Name;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FChestEntitlementViewModel>                  EquippedEntitlements;                                    // 0x0030(0x0010) ZeroConstructor
		TArray<struct FChestEntitlementViewModel>                  SavedToLoadoutEntitlements;                              // 0x0040(0x0010) ZeroConstructor
		bool                                                       IsLocked;                                                // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_S84P[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      LockedDescriptions;                                      // 0x0058(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ArmoryItemLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FArmoryItemLoadoutUpdatedEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          ItemLoadout;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ArmoryItemEntitlementsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FArmoryItemEntitlementsUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  ItemEntitlements;                                        // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestArmoryItemLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestArmoryItemLoadoutEvent
	{
	public:
		TArray<class FString>                                      Categories;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestArmoryItemEntitlementsEvent
	 * Size -> 0x0010
	 */
	struct FRequestArmoryItemEntitlementsEvent
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestArmoryEquipSlotEvent
	 * Size -> 0x0018
	 */
	struct FRequestArmoryEquipSlotEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    SlotId;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5YKD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CappedCount
	 * Size -> 0x0008
	 */
	struct FCappedCount
	{
	public:
		uint32_t                                                   Cap;                                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Value;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClothingChestClothingLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FClothingChestClothingLoadoutUpdatedEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          Loadout;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ClothingChestClothingEntitlementsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FClothingChestClothingEntitlementsUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEmoteSelectEquipEvent
	 * Size -> 0x0018
	 */
	struct FRequestEmoteSelectEquipEvent
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6ZFF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemDesc;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestClothingChestClothingLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestClothingChestClothingLoadoutEvent
	{
	public:
		TArray<class FString>                                      Categories;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestClothingChestClothingEntitlementsEvent
	 * Size -> 0x0010
	 */
	struct FRequestClothingChestClothingEntitlementsEvent
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestClothingChestPreviewUpdateEvent
	 * Size -> 0x0018
	 */
	struct FRequestClothingChestPreviewUpdateEvent
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BEFN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Subject;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestClothingChestActionEvent
	 * Size -> 0x0018
	 */
	struct FRequestClothingChestActionEvent
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PK1O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Subject;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UICompanyProgress
	 * Size -> 0x0010
	 */
	struct FUICompanyProgress
	{
	public:
		class FName                                                CompanyId;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Level;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   Rank;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSingleCompanyProgressUpdate
	 * Size -> 0x0010
	 */
	struct FEventSingleCompanyProgressUpdate
	{
	public:
		struct FUICompanyProgress                                  Progress;                                                // 0x0000(0x0010)
	};

	/**
	 * ScriptStruct Athena.EventCompanyProgressRequest
	 * Size -> 0x0001
	 */
	struct FEventCompanyProgressRequest
	{
	public:
		unsigned char                                              UnknownData_373F[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCompanyProgressData
	 * Size -> 0x0010
	 */
	struct FEventCompanyProgressData
	{
	public:
		TArray<struct FUICompanyProgress>                          CompanyProgress;                                         // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UIRankSkin
	 * Size -> 0x0030
	 */
	struct FUIRankSkin
	{
	public:
		class FString                                              DisplayName;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RibbonImageUrl;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UICompanySkin
	 * Size -> 0x0080
	 */
	struct FUICompanySkin
	{
	public:
		EProgressStyle                                             Style;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FESI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BackgroundImageUrl;                                      // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RibbonImageUrl;                                          // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    ProgressStep;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MNZN[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ProgressIconUrls;                                        // 0x0030(0x0010) ZeroConstructor
		class FString                                              ShopTopBannerUrl;                                        // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShopBottomBannerUrl;                                     // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FUIRankSkin>                                 Ranks;                                                   // 0x0060(0x0010) ZeroConstructor
		class FString                                              ShopInfoUrl;                                             // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UICompanyShopInfo
	 * Size -> 0x0050
	 */
	struct FUICompanyShopInfo
	{
	public:
		bool                                                       ShouldShowCompanyInfo;                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VHQZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                InfoTitle;                                               // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_XVSV[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FText>                                        InfoTips;                                                // 0x0040(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UICompanyData
	 * Size -> 0x00F0
	 */
	struct FUICompanyData
	{
	public:
		class FString                                              CompanyId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DisplayName;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FUICompanySkin                                      Skin;                                                    // 0x0020(0x0080)
		struct FUICompanyShopInfo                                  ShopInfo;                                                // 0x00A0(0x0050)
	};

	/**
	 * ScriptStruct Athena.EventCompanyDataResponse
	 * Size -> 0x0010
	 */
	struct FEventCompanyDataResponse
	{
	public:
		TArray<struct FUICompanyData>                              CompanyData;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventCompanyDataRequest
	 * Size -> 0x0001
	 */
	struct FEventCompanyDataRequest
	{
	public:
		unsigned char                                              UnknownData_TBYJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EquipmentChestItemLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FEquipmentChestItemLoadoutUpdatedEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          ItemLoadout;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EquipmentChestItemEntitlementsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FEquipmentChestItemEntitlementsUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  ItemEntitlements;                                        // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEquipmentChestItemLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestEquipmentChestItemLoadoutEvent
	{
	public:
		TArray<class FString>                                      Categories;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestEquipmentChestItemEntitlementsEvent
	 * Size -> 0x0010
	 */
	struct FRequestEquipmentChestItemEntitlementsEvent
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestEquipmentChestEquipItemEvent
	 * Size -> 0x0010
	 */
	struct FRequestEquipmentChestEquipItemEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShowPendingInviteEvent
	 * Size -> 0x0010
	 */
	struct FShowPendingInviteEvent
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PendingInviteViewModel
	 * Size -> 0x0020
	 */
	struct FPendingInviteViewModel
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PendingInvitesListEvent
	 * Size -> 0x0010
	 */
	struct FPendingInvitesListEvent
	{
	public:
		TArray<struct FPendingInviteViewModel>                     Invites;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetPendingInvitesRequest
	 * Size -> 0x0001
	 */
	struct FGetPendingInvitesRequest
	{
	public:
		unsigned char                                              UnknownData_26HI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GetOnlineFriendsSuccessEvent
	 * Size -> 0x0010
	 */
	struct FGetOnlineFriendsSuccessEvent
	{
	public:
		unsigned char                                              UnknownData_VXBK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InviteFriendRequest
	 * Size -> 0x0018
	 */
	struct FInviteFriendRequest
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		EPlatformId                                                Platform;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5IVY[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FriendsListError
	 * Size -> 0x0010
	 */
	struct FFriendsListError
	{
	public:
		class FString                                              Error;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FriendViewModel
	 * Size -> 0x0058
	 */
	struct FFriendViewModel
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerTag;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GamerpicUrl;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RealName;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RichPresence;                                            // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		EFriendStatus                                              Status;                                                  // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlatformId                                                Platform;                                                // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1XAL[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FriendsListResponse
	 * Size -> 0x0010
	 */
	struct FFriendsListResponse
	{
	public:
		TArray<struct FFriendViewModel>                            Friends;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FriendsListInvoked
	 * Size -> 0x0001
	 */
	struct FFriendsListInvoked
	{
	public:
		unsigned char                                              UnknownData_7IN2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetChestPetNameUpdateSucceedEvent
	 * Size -> 0x0001
	 */
	struct FPetChestPetNameUpdateSucceedEvent
	{
	public:
		unsigned char                                              UnknownData_4R62[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetChestPetNameUpdateFailedEvent
	 * Size -> 0x0001
	 */
	struct FPetChestPetNameUpdateFailedEvent
	{
	public:
		unsigned char                                              UnknownData_NONG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetChestPetNameUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FPetChestPetNameUpdatedEvent
	{
	public:
		class FString                                              PetName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PetChestPetLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FPetChestPetLoadoutUpdatedEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          Loadout;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PetChestPetEntitlementsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FPetChestPetEntitlementsUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestPetChestPetLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestPetChestPetLoadoutEvent
	{
	public:
		TArray<class FString>                                      Categories;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestPetChestPetEntitlementsEvent
	 * Size -> 0x0010
	 */
	struct FRequestPetChestPetEntitlementsEvent
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPetChestPreviewUpdateEvent
	 * Size -> 0x0018
	 */
	struct FRequestPetChestPreviewUpdateEvent
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6FZ1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Subject;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPetChestActionEvent
	 * Size -> 0x0018
	 */
	struct FRequestPetChestActionEvent
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EFSA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Subject;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryEquipEvent
	 * Size -> 0x0010
	 */
	struct FInventoryEquipEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IInventoryItem
	 * Size -> 0x0020
	 */
	struct FIInventoryItem
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Count;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsFull;                                                  // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsBlocked;                                               // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EInventoryItemState                                        State;                                                   // 0x0016(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_O0AU[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DescKey;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IInventoryItemDescription
	 * Size -> 0x0058
	 */
	struct FIInventoryItemDescription
	{
	public:
		class FString                                              ThumbnailImageUrl;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviewImageUrl;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DisplayName;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemDesc;                                                // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UClass*                                              DescKey;                                                 // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryResponseEvent
	 * Size -> 0x0030
	 */
	struct FInventoryResponseEvent
	{
	public:
		TArray<struct FIInventoryItem>                             Equipment;                                               // 0x0000(0x0010) ZeroConstructor
		TArray<struct FIInventoryItem>                             Resources;                                               // 0x0010(0x0010) ZeroConstructor
		TArray<struct FIInventoryItemDescription>                  Descriptions;                                            // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.InventoryRequestEvent
	 * Size -> 0x0001
	 */
	struct FInventoryRequestEvent
	{
	public:
		unsigned char                                              UnknownData_0NXN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InventoryCountsResponseEvent
	 * Size -> 0x0040
	 */
	struct FInventoryCountsResponseEvent
	{
	public:
		struct FCappedCount                                        Cannonballs;                                             // 0x0000(0x0008)
		struct FCappedCount                                        CursedCannonballs;                                       // 0x0008(0x0008)
		struct FCappedCount                                        Food;                                                    // 0x0010(0x0008)
		struct FCappedCount                                        Hardware;                                                // 0x0018(0x0008)
		struct FCappedCount                                        Bait;                                                    // 0x0020(0x0008)
		struct FCappedCount                                        Firebombs;                                               // 0x0028(0x0008)
		struct FCappedCount                                        ChainShots;                                              // 0x0030(0x0008)
		struct FCappedCount                                        Fireworks;                                               // 0x0038(0x0008)
	};

	/**
	 * ScriptStruct Athena.RequestInventoryCountsEvent
	 * Size -> 0x0001
	 */
	struct FRequestInventoryCountsEvent
	{
	public:
		unsigned char                                              UnknownData_2X3X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemInformation
	 * Size -> 0x0070
	 */
	struct FEmblemInformation
	{
	public:
		class FString                                              BackgroundImageUrl;                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                Name;                                                    // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ESN8[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<class FText>                                        ProgressDescriptions;                                    // 0x0048(0x0010) ZeroConstructor
		TArray<struct FCappedCount>                                Progressions;                                            // 0x0058(0x0010) ZeroConstructor
		uint32_t                                                   Doubloons;                                               // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HA0Q[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemSetInformation
	 * Size -> 0x0018
	 */
	struct FEmblemSetInformation
	{
	public:
		bool                                                       LockedStatus;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_H8V6[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEmblemInformation>                          Emblems;                                                 // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignDetail
	 * Size -> 0x0050
	 */
	struct FEventCompanyReputationCampaignDetail
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ImageUrl;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FCappedCount                                        CommendationProgress;                                    // 0x0030(0x0008)
		struct FCappedCount                                        TitleProgress;                                           // 0x0038(0x0008)
		TArray<struct FEmblemSetInformation>                       EmblemSets;                                              // 0x0040(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MoreInfoDetails
	 * Size -> 0x0020
	 */
	struct FMoreInfoDetails
	{
	public:
		class FString                                              DescriptionFirst;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DescriptionSecond;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignInformation
	 * Size -> 0x0070
	 */
	struct FEventCompanyReputationCampaignInformation
	{
	public:
		class FString                                              CampaignId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Description;                                             // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FCappedCount                                        Progress;                                                // 0x0030(0x0008)
		class FString                                              ImageUrl;                                                // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       MarkAsNew;                                               // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Locked;                                                  // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UTTQ[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMoreInfoDetails                                    MoreInfo;                                                // 0x0050(0x0020)
	};

	/**
	 * ScriptStruct Athena.EmissaryState
	 * Size -> 0x0008
	 */
	struct FEmissaryState
	{
	public:
		bool                                                       EmissaryActive;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MFNO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Level;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ReputationCompanyDisplayInformation
	 * Size -> 0x00E8
	 */
	struct FReputationCompanyDisplayInformation
	{
	public:
		class FText                                                CompanyName;                                             // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_TLUX[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                Motto;                                                   // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_2ULP[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                CurrentRank;                                             // 0x0070(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_QUP7[0x20];                                  // 0x0088(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              BackgroundImageUrl;                                      // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              RibbonImageUrl;                                          // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EProgressStyle                                             Style;                                                   // 0x00D0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3DP0[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CompanyLevel;                                            // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FEmissaryState                                      EmissaryState;                                           // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Retired;                                                 // 0x00E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ITP4[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CompanyScreenInformation
	 * Size -> 0x0170
	 */
	struct FCompanyScreenInformation
	{
	public:
		struct FReputationCompanyDisplayInformation                CompanySummary;                                          // 0x0000(0x00E8)
		struct FCappedCount                                        CompanyProgression;                                      // 0x00E8(0x0008)
		class FText                                                CompanyFlavourText1;                                     // 0x00F0(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_LPV5[0x20];                                  // 0x0108(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                CompanyFlavourText2;                                     // 0x0128(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_VH77[0x20];                                  // 0x0140(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		TArray<struct FEmblemSetInformation>                       EmblemSets;                                              // 0x0160(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompanyReputationSummary
	 * Size -> 0x0110
	 */
	struct FCompanyReputationSummary
	{
	public:
		struct FReputationCompanyDisplayInformation                CompanyData;                                             // 0x0000(0x00E8)
		struct FCappedCount                                        Commendations;                                           // 0x00E8(0x0008)
		struct FCappedCount                                        Items;                                                   // 0x00F0(0x0008)
		struct FCappedCount                                        Promotions;                                              // 0x00F8(0x0008)
		struct FCappedCount                                        FactionFigureheads;                                      // 0x0100(0x0008)
		struct FCappedCount                                        Titles;                                                  // 0x0108(0x0008)
	};

	/**
	 * ScriptStruct Athena.ReputationDisplayInformation
	 * Size -> 0x0010
	 */
	struct FReputationDisplayInformation
	{
	public:
		TArray<struct FCompanyReputationSummary>                   CompanyReputationSummaries;                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventFriendsListFailed
	 * Size -> 0x0001
	 */
	struct FEventFriendsListFailed
	{
	public:
		unsigned char                                              UnknownData_669A[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFriendsListChanged
	 * Size -> 0x0010
	 */
	struct FEventFriendsListChanged
	{
	public:
		TArray<class FString>                                      FriendsList;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventFriendsListResponse
	 * Size -> 0x0010
	 */
	struct FEventFriendsListResponse
	{
	public:
		TArray<class FString>                                      FriendsList;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventFriendsListRequest
	 * Size -> 0x0001
	 */
	struct FEventFriendsListRequest
	{
	public:
		unsigned char                                              UnknownData_1JY1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignDetailResponse
	 * Size -> 0x0050
	 */
	struct FEventCompanyReputationCampaignDetailResponse
	{
	public:
		struct FEventCompanyReputationCampaignDetail               CampaignDetail;                                          // 0x0000(0x0050)
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignDetailRequest
	 * Size -> 0x0010
	 */
	struct FEventCompanyReputationCampaignDetailRequest
	{
	public:
		class FString                                              CampaignId;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignInformationResponse
	 * Size -> 0x0010
	 */
	struct FEventCompanyReputationCampaignInformationResponse
	{
	public:
		TArray<struct FEventCompanyReputationCampaignInformation>  CampaignInformation;                                     // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventCompanyReputationCampaignInformationRequest
	 * Size -> 0x0010
	 */
	struct FEventCompanyReputationCampaignInformationRequest
	{
	public:
		class FString                                              CompanyId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCompanyScreenDisplayInformationResponse
	 * Size -> 0x0170
	 */
	struct FEventCompanyScreenDisplayInformationResponse
	{
	public:
		struct FCompanyScreenInformation                           CompanyData;                                             // 0x0000(0x0170)
	};

	/**
	 * ScriptStruct Athena.EventCompanyScreenDisplayInformationRequest
	 * Size -> 0x0010
	 */
	struct FEventCompanyScreenDisplayInformationRequest
	{
	public:
		class FString                                              CompanyId;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventReputationDisplayInformationResponse
	 * Size -> 0x0010
	 */
	struct FEventReputationDisplayInformationResponse
	{
	public:
		TArray<struct FCompanyReputationSummary>                   ReputationData;                                          // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventReputationDisplayInformationRequest
	 * Size -> 0x0001
	 */
	struct FEventReputationDisplayInformationRequest
	{
	public:
		unsigned char                                              UnknownData_C2SQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnRestorePurchaseSuccess
	 * Size -> 0x0001
	 */
	struct FOnRestorePurchaseSuccess
	{
	public:
		unsigned char                                              UnknownData_X92B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloseRestoreShopEvent
	 * Size -> 0x0001
	 */
	struct FCloseRestoreShopEvent
	{
	public:
		unsigned char                                              UnknownData_W08S[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnRestoreShopStateChangedEvent
	 * Size -> 0x0001
	 */
	struct FOnRestoreShopStateChangedEvent
	{
	public:
		bool                                                       CanRestore;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.RequestRestoreShopEvent
	 * Size -> 0x0001
	 */
	struct FRequestRestoreShopEvent
	{
	public:
		unsigned char                                              UnknownData_BKZD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationSaveToLoadoutFailedEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationSaveToLoadoutFailedEvent
	{
	public:
		unsigned char                                              UnknownData_8U9Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationSaveToLoadoutSucceededEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationSaveToLoadoutSucceededEvent
	{
	public:
		unsigned char                                              UnknownData_6R54[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestSwapToSavedLoadoutEvent
	 * Size -> 0x0001
	 */
	struct FRequestShipCustomizationChestSwapToSavedLoadoutEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestUpdateSavedLoadoutFailedEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationChestUpdateSavedLoadoutFailedEvent
	{
	public:
		unsigned char                                              UnknownData_73CI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestUpdateSavedLoadoutSucceededEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationChestUpdateSavedLoadoutSucceededEvent
	{
	public:
		unsigned char                                              UnknownData_XARX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestUpdateSavedLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestUpdateSavedLoadoutEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationSelectionScreenClosedEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationSelectionScreenClosedEvent
	{
	public:
		unsigned char                                              UnknownData_RZBX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCloseShipCustomizationSelectionScreenEvent
	 * Size -> 0x0001
	 */
	struct FRequestCloseShipCustomizationSelectionScreenEvent
	{
	public:
		unsigned char                                              UnknownData_4MIW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestOpenShipCustomizationSelectionScreenEvent
	 * Size -> 0x0001
	 */
	struct FRequestOpenShipCustomizationSelectionScreenEvent
	{
	public:
		unsigned char                                              UnknownData_MTQ1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestShipCustomizationLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FShipCustomizationChestShipCustomizationLoadoutUpdatedEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          Loadout;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationChestShipCustomizationEntitlementsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FShipCustomizationChestShipCustomizationEntitlementsUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestShipCustomizationLoadoutEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestShipCustomizationLoadoutEvent
	{
	public:
		TArray<class FString>                                      Categories;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestShipCustomizationEntitlementsEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestShipCustomizationEntitlementsEvent
	{
	public:
		class FString                                              ItemCategory;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestClearShipCustomizationEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestClearShipCustomizationEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestUnequipShipCustomizationEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestUnequipShipCustomizationEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestShipCustomizationChestEquipShipCustomizationEvent
	 * Size -> 0x0010
	 */
	struct FRequestShipCustomizationChestEquipShipCustomizationEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TrinketChestItemInfoUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FTrinketChestItemInfoUpdatedEvent
	{
	public:
		TArray<struct FChestEntitlementTrinketItem>                Items;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TrinketLoadoutUpdatedUIEvent
	 * Size -> 0x0010
	 */
	struct FTrinketLoadoutUpdatedUIEvent
	{
	public:
		TArray<struct FChestTabViewModel>                          Loadout;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TrinketEntitlementsUpdatedUIEvent
	 * Size -> 0x0010
	 */
	struct FTrinketEntitlementsUpdatedUIEvent
	{
	public:
		TArray<struct FChestEntitlementViewModel>                  Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RequestTrinketBoxActionEvent
	 * Size -> 0x0018
	 */
	struct FRequestTrinketBoxActionEvent
	{
	public:
		EChestEntitlementActionType                                Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TV8G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TrinketDesc;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BoxedRpcDiscardTinVoyage
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FBoxedRpcDiscardTinVoyage : public FBoxedRpc
	{
	public:
		int32_t                                                    IndexOfVoyageToDiscard;                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YO9X[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FVoyageProposedTelemetryEvent
	{
	public:
		struct FGuid                                               VoyageProposalSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              VoyageProposalEntitlementId;                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageDiscardedTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FVoyageDiscardedTelemetryEvent
	{
	public:
		class FString                                              VoyageRecipeAsset;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    VoyageRank;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2JA2[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposalLostVotingSessionTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FVoyageProposalLostVotingSessionTelemetryEvent
	{
	public:
		struct FGuid                                               VoyageProposalSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              VoyageProposalEntitlementId;                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumberOfVotes;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YPS2[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposalWonVotingSessionTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FVoyageProposalWonVotingSessionTelemetryEvent
	{
	public:
		struct FGuid                                               VoyageProposalSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              VoyageProposalEntitlementId;                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumberOfVotes;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SessionLength;                                           // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerVoyageProposalVoteTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerVoyageProposalVoteTelemetryEvent
	{
	public:
		struct FGuid                                               VoyageProposalSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    VoyageProposalSlot;                                      // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CEMZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VoyageProposalEntitlementId;                             // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BoxedRpcDiscardVoyage
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FBoxedRpcDiscardVoyage : public FBoxedRpc
	{
	public:
		class UClass*                                              VoyageToDiscard;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageInventoryClosedEvent
	 * Size -> 0x0001
	 */
	struct FVoyageInventoryClosedEvent
	{
	public:
		unsigned char                                              UnknownData_VQUG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageAndTaleAndCaptainsVoyageProposalsUpdatedEvent
	 * Size -> 0x0038
	 */
	struct FVoyageAndTaleAndCaptainsVoyageProposalsUpdatedEvent
	{
	public:
		TArray<struct FVoyageProposalDescViewModel>                VoyageProposalEntitlements;                              // 0x0000(0x0010) ZeroConstructor
		TArray<struct FVoyageProposalDescViewModel>                TaleProposalEntitlements;                                // 0x0010(0x0010) ZeroConstructor
		TArray<struct FVoyageProposalDescViewModel>                CaptainsVoyageProposalEntitlements;                      // 0x0020(0x0010) ZeroConstructor
		bool                                                       VoyageIsActive;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TaleIsActive;                                            // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CaptainsVoyageIsActive;                                  // 0x0032(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MAFE[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageAndTaleProposalsUpdatedEvent
	 * Size -> 0x0028
	 */
	struct FVoyageAndTaleProposalsUpdatedEvent
	{
	public:
		TArray<struct FVoyageProposalDescViewModel>                VoyageProposalEntitlements;                              // 0x0000(0x0010) ZeroConstructor
		TArray<struct FVoyageProposalDescViewModel>                TaleProposalEntitlements;                                // 0x0010(0x0010) ZeroConstructor
		bool                                                       VoyageIsActive;                                          // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       TaleIsActive;                                            // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_E8GS[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposalsUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FVoyageProposalsUpdatedEvent
	{
	public:
		TArray<struct FVoyageProposalDescViewModel>                Entitlements;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ForceCloseVoyageInventoryEvent
	 * Size -> 0x0001
	 */
	struct FForceCloseVoyageInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_3ZNW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenCaptainsVoyageInventoryEvent
	 * Size -> 0x0001
	 */
	struct FOpenCaptainsVoyageInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_MC7J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenVoyageInventoryEvent
	 * Size -> 0x0001
	 */
	struct FOpenVoyageInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_3ZWO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestVoyageProposalsEvent
	 * Size -> 0x0001
	 */
	struct FRequestVoyageProposalsEvent
	{
	public:
		unsigned char                                              UnknownData_KPK8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposalDiscardEvent
	 * Size -> 0x0018
	 */
	struct FVoyageProposalDiscardEvent
	{
	public:
		class FString                                              ProposalDesc;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsTin;                                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WUWM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageProposalSelectedEvent
	 * Size -> 0x0018
	 */
	struct FVoyageProposalSelectedEvent
	{
	public:
		class FString                                              ProposalDesc;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsTin;                                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_72P2[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientBannedHandlerRetrieveDataResponse
	 * Size -> 0x0001
	 */
	struct FClientBannedHandlerRetrieveDataResponse
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientBannedHandlerRetrieveDataRequest
	 * Size -> 0x0001
	 */
	struct FClientBannedHandlerRetrieveDataRequest
	{
	public:
		unsigned char                                              UnknownData_31SM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaPlayerControllerEndingPlayInContestStage
	 * Size -> 0x0008
	 */
	struct FAthenaPlayerControllerEndingPlayInContestStage
	{
	public:
		class AAthenaPlayerController*                             Controller;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ArenaSuspensionState
	 * Size -> 0x0008
	 */
	struct FArenaSuspensionState
	{
	public:
		bool                                                       IsUserSuspended;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_I2XW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SuspensionTimeRemainingInMinutes;                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SuspensionStatusResponse
	 * Size -> 0x0004
	 */
	struct FSuspensionStatusResponse
	{
	public:
		int32_t                                                    StrikeCount;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SuspensionStatusRequest
	 * Size -> 0x0001
	 */
	struct FSuspensionStatusRequest
	{
	public:
		unsigned char                                              UnknownData_TZ4G[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RandomParticleSystemPickerEntry
	 * Size -> 0x0010
	 */
	struct FRandomParticleSystemPickerEntry
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WFCU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Effect;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RandomParticleSystemPicker
	 * Size -> 0x0010
	 */
	struct FRandomParticleSystemPicker
	{
	public:
		TArray<struct FRandomParticleSystemPickerEntry>            Effects;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry
	 * Size -> 0x0018
	 */
	struct FDistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Z31N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRandomParticleSystemPicker                         Effect;                                                  // 0x0008(0x0010) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.DistanceThrottledRandomParticleSystemPickerEntry
	 * Size -> 0x0020
	 */
	struct FDistanceThrottledRandomParticleSystemPickerEntry
	{
	public:
		float                                                      DistanceInMetres;                                        // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3AMQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry> EffectsBySurfaceType;                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
		int32_t                                                    MaxNumber;                                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5VEP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DistanceThrottledRandomParticleSystemPicker
	 * Size -> 0x0010
	 */
	struct FDistanceThrottledRandomParticleSystemPicker
	{
	public:
		TArray<struct FDistanceThrottledRandomParticleSystemPickerEntry> Entries;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BountyQuestDesc
	 * Size -> 0x0198 (FullSize[0x01C0] - InheritedSize[0x0028])
	 */
	struct FBountyQuestDesc : public FQuestDesc
	{
	public:
		class UAIBountySpawner*                                    Spawner;                                                 // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBountyMapLayout*                                    Layout;                                                  // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTreasureMapTextDesc                                Location;                                                // 0x0038(0x0048)
		TArray<struct FTreasureMapTextDesc>                        Descriptions;                                            // 0x0080(0x0010) ZeroConstructor
		TArray<struct FBountyMapTargetDesc>                        Targets;                                                 // 0x0090(0x0010) ZeroConstructor
		TArray<class UClass*>                                      BountyRewards;                                           // 0x00A0(0x0010) ZeroConstructor, UObjectWrapper
		TArray<class UItemSpawnData*>                              BountyRewardsSpawnData;                                  // 0x00B0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference
		class ALandmark*                                           Landmark;                                                // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IslandRotation;                                          // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y0IK[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TAssetPtr<class UTexture>                                  MapInventoryTexture;                                     // 0x00D0(0x001C) ELEMENT_SIZE_MISMATCH UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_1LMB[0x4];                                   // 0x00EC(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FAIBountySpawnerParams                              SpawnerGeneratedData;                                    // 0x00F0(0x00C8)
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x01B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestTargetDefeatedNetworkEvent
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FBountyQuestTargetDefeatedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FText                                                TargetName;                                              // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_3HON[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestApproachesLandmarkTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FBountyQuestApproachesLandmarkTelemetryEvent
	{
	public:
		class FString                                              LandmarkName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BountyQuestTargetKilledTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FBountyQuestTargetKilledTelemetryEvent
	{
	public:
		class FString                                              BountyTargetName;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               BootyId;                                                 // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.BountyQuestWaveCompletedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FBountyQuestWaveCompletedTelemetryEvent
	{
	public:
		class FString                                              LandmarkName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    BountyWaveIndex;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TotalBountyWaves;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestStartBountyTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FQuestStartBountyTelemetryEvent
	{
	public:
		class FString                                              IslandName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LandmarkName;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunQuestDesc
	 * Size -> 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
	 */
	struct FCargoRunQuestDesc : public FQuestDesc
	{
	public:
		unsigned char                                              UnknownData_JTLZ[0x28];                                  // 0x0028(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      CrateItemDesc;                                           // 0x0050(0x0010) ZeroConstructor, UObjectWrapper
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoDeliveredTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FCargoDeliveredTelemetryEvent
	{
	public:
		bool                                                       GoldAwarded;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IQR4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               BootyId;                                                 // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B275[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    MaxQuality;                                              // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DeliveredQuality;                                        // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       DeliveredOnTime;                                         // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_BEAS[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CargoRunCratePickedUpTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FCargoRunCratePickedUpTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Rarity;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CargoRunQuestCrateEntries
	 * Size -> 0x0018
	 */
	struct FCargoRunQuestCrateEntries
	{
	public:
		class FString                                              Rarity;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    CargoCount;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_821P[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestStartCargoRunTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FQuestStartCargoRunTelemetryEvent
	{
	public:
		TArray<struct FCargoRunQuestCrateEntries>                  ContractList;                                            // 0x0000(0x0010) ZeroConstructor
		class FString                                              DeliveryLocationIslandName;                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PickupLocationIslandName;                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    DeliveryTimeLimitInMinutes;                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CBYL[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayNpcAnimationNetworkEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FPlayNpcAnimationNetworkEvent : public FBoxedRpc
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                AnimationNameToPlay;                                     // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              LocalMusicZone;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class APlaceableReaction*                                  PlaceableReaction;                                       // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StopNpcAnimationNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FStopNpcAnimationNetworkEvent : public FBoxedRpc
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class APlaceableReaction*                                  PlaceableReaction;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmergantVoyageQuestDesc
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FEmergantVoyageQuestDesc : public FQuestDesc
	{	};

	/**
	 * ScriptStruct Athena.MatchmakeQuestDesc
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FMatchmakeQuestDesc : public FQuestDesc
	{	};

	/**
	 * ScriptStruct Athena.RewardQuestDesc
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FRewardQuestDesc : public FQuestDesc
	{	};

	/**
	 * ScriptStruct Athena.StagingQuestDesc
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FStagingQuestDesc : public FQuestDesc
	{	};

	/**
	 * ScriptStruct Athena.MerchantItemGroupDesc
	 * Size -> 0x0010
	 */
	struct FMerchantItemGroupDesc
	{
	public:
		TArray<class UMerchantQuestItemData*>                      Items;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.MerchantQuestDesc
	 * Size -> 0x0188 (FullSize[0x01B0] - InheritedSize[0x0028])
	 */
	struct FMerchantQuestDesc : public FQuestDesc
	{
	public:
		class UMerchantMapLayout*                                  Layout;                                                  // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                PickupLocationLocalisedIslandName;                       // 0x0030(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_IQ8O[0x20];                                  // 0x0048(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                DeliveryLocationLocalisedIslandName;                     // 0x0068(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_TVJQ[0x20];                                  // 0x0080(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FTreasureMapTextDesc                                PickupLocation;                                          // 0x00A0(0x0048)
		struct FTreasureMapTextDesc                                DeliveryLocation;                                        // 0x00E8(0x0048)
		struct FTreasureMapTextDesc                                DeliverByTimeText;                                       // 0x0130(0x0048)
		TArray<struct FMerchantMapItemData>                        ItemData;                                                // 0x0178(0x0010) ZeroConstructor
		TArray<struct FMerchantItemGroupDesc>                      ItemGroupDescs;                                          // 0x0188(0x0010) ZeroConstructor
		int32_t                                                    TimeLimitInMinutes;                                      // 0x0198(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VTEV[0x4];                                   // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameTime                                           DeliverByTime;                                           // 0x01A0(0x0008)
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x01A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantCratesReadyForCollectionEvent
	 * Size -> 0x0001
	 */
	struct FMerchantCratesReadyForCollectionEvent
	{
	public:
		unsigned char                                              UnknownData_HOVC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MerchantQuestContractExpiredNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMerchantQuestContractExpiredNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestContractCompleteNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FMerchantQuestContractCompleteNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestCrateFilledNetworkEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FMerchantQuestCrateFilledNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              PlayerName;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       OnlyPlayAudio;                                           // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QHM7[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MerchantCrateAllocatedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FMerchantCrateAllocatedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Rarity;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestMerchantCrateAllocatedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FQuestMerchantCrateAllocatedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Rarity;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestStartTelemetryEventRequiredItemEntry
	 * Size -> 0x0018
	 */
	struct FMerchantQuestStartTelemetryEventRequiredItemEntry
	{
	public:
		int32_t                                                    NumItems;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3OL2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MerchantQuestStartTelemetryEvent
	 * Size -> 0x0048
	 */
	struct FMerchantQuestStartTelemetryEvent
	{
	public:
		class FString                                              PickupLocationIslandName;                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              DeliveryLocationIslandName;                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    RealTimeLimitInMins;                                     // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_28EX[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeliverByTimeText;                                       // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FMerchantQuestStartTelemetryEventRequiredItemEntry> ContractList;                                            // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TallTaleDebugInfo
	 * Size -> 0x0020
	 */
	struct FTallTaleDebugInfo
	{
	public:
		TArray<class FString>                                      StepNames;                                               // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      VariableStringBlobs;                                     // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ClientTallTaleDebugInfoNetworkEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FClientTallTaleDebugInfoNetworkEvent : public FBoxedRpc
	{
	public:
		struct FTallTaleDebugInfo                                  QuestInfo;                                               // 0x0010(0x0020)
	};

	/**
	 * ScriptStruct Athena.QuestWeightedDistance
	 * Size -> 0x0010
	 */
	struct FQuestWeightedDistance
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Max;                                                     // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MinWeight;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxWeight;                                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RiddleQuestGateDesc
	 * Size -> 0x0070
	 */
	struct FRiddleQuestGateDesc
	{
	public:
		ERiddleLocations                                           RiddleLocation;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleActionLocationOffsets                               RiddleActionLocationOffset;                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleActions                                             RiddleAction;                                            // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KFG7[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTreasureMapTextDesc                                Text;                                                    // 0x0008(0x0048)
		class ALandmark*                                           Landmark;                                                // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TargetPositionIfNotLandmark;                             // 0x0058(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                NonVagueNonUniqueLandmarkPhraseId;                       // 0x0064(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AETK[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RiddleQuestDesc
	 * Size -> 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
	 */
	struct FRiddleQuestDesc : public FQuestDesc
	{
	public:
		TArray<struct FRiddleQuestGateDesc>                        Gates;                                                   // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor
		float                                                      IslandRotation;                                          // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XM4T[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TAssetPtr<class UTexture>                                  MapInventoryTexture;                                     // 0x0040(0x001C) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_V5PL[0x4];                                   // 0x005C(0x0004) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FVector                                             TreasureChestWorldSpaceLocation;                         // 0x0060(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4XKP[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TreasureChestDesc;                                       // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class UItemSpawnData*                                      TreasureSpawnData;                                       // 0x0078(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DigRadius;                                               // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9TMQ[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAIBoobyTrapSpawner*                                 BoobyTrapSpawner;                                        // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              OverrideTreasureMapItemDesc;                             // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RiddleQuestGateStartedTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FRiddleQuestGateStartedTelemetryEvent
	{
	public:
		ERiddleLocations                                           RiddleLocation;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleActionLocationOffsets                               RiddleActionLocationOffset;                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ERiddleActions                                             RiddleAction;                                            // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1TEO[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LandmarkName;                                            // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GateDescription;                                         // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestStartRiddleTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FQuestStartRiddleTelemetryEvent
	{
	public:
		class FString                                              IslandName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestStartXMarksTheSpotTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FQuestStartXMarksTheSpotTelemetryEvent
	{
	public:
		class FString                                              IslandName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumTreasures;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_USY4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestPageListPopulator
	 * Size -> 0x0010
	 */
	struct FQuestPageListPopulator
	{
	public:
		TArray<class UQuestBookPageList*>                          PageListsToUpdate;                                       // 0x0000(0x0010) Edit, ZeroConstructor, AdvancedDisplay
	};

	/**
	 * ScriptStruct Athena.ItemBuriedTaleQuestAutomationEvent
	 * Size -> 0x0018
	 */
	struct FItemBuriedTaleQuestAutomationEvent
	{
	public:
		class UClass*                                              ItemBuried;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             Location;                                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_PLOW[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterStartFromTaleTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipEncounterStartFromTaleTelemetryEvent
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SpawnerCreatedAutomationEvent
	 * Size -> 0x0010
	 */
	struct FSpawnerCreatedAutomationEvent
	{
	public:
		class AActor*                                              SpawnerLocation;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAISpawner*                                          Spawner;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TaleQuestStopAISpawningEvent
	 * Size -> 0x0008
	 */
	struct FTaleQuestStopAISpawningEvent
	{
	public:
		unsigned char                                              UnknownData_Q3JB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VaultAssignedAutomationEvent
	 * Size -> 0x0010
	 */
	struct FVaultAssignedAutomationEvent
	{
	public:
		class AActor*                                              Vault;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              Key;                                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageProposalCompletedNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FVoyageProposalCompletedNetworkEvent : public FNetworkEventStruct
	{
	public:
		TArray<class FString>                                      VoyageProposalIds;                                       // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TaleAvailableForCancel
	 * Size -> 0x0008
	 */
	struct FTaleAvailableForCancel
	{
	public:
		class UVoyageDescDataAsset*                                TaleData;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageAvailableForCancel
	 * Size -> 0x0008
	 */
	struct FVoyageAvailableForCancel
	{
	public:
		class UVoyageProposalDesc*                                 ProposalDesc;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageWithdrawnEvent
	 * Size -> 0x0008
	 */
	struct FVoyageWithdrawnEvent
	{
	public:
		class APlayerState*                                        Proposer;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TaleProposalVoteSlotUpdatedEvent
	 * Size -> 0x0030
	 */
	struct FTaleProposalVoteSlotUpdatedEvent
	{
	public:
		struct FProposedTaleEntry                                  TaleProposal;                                            // 0x0000(0x0018)
		class UVoyageDescDataAsset*                                CurrentActiveTale;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.VoyageProposalVoteSlotUpdatedEvent
	 * Size -> 0x0030
	 */
	struct FVoyageProposalVoteSlotUpdatedEvent
	{
	public:
		struct FProposedVoyageEntry                                Proposal;                                                // 0x0000(0x0018)
		int32_t                                                    VoteIndex;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U8F2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShipName;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageProposedEvent
	 * Size -> 0x0018
	 */
	struct FVoyageProposedEvent
	{
	public:
		class UVoyageProposalDesc*                                 ProposalDesc;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class APlayerState*                                        Proposer;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       AutoVoteOnVoyage;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       VoyageIsShipEntitlement;                                 // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_8ZGH[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerWithdrewVoyage
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FEventPlayerWithdrewVoyage : public FNetworkEventStruct
	{
	public:
		class FText                                                Title;                                                   // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly
		unsigned char                                              UnknownData_1WX3[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.EventBroadcastWwiseEventToInstigatorsCrew
	 * Size -> 0x0010
	 */
	struct FEventBroadcastWwiseEventToInstigatorsCrew
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UWwiseEvent*                                         WwiseEvent;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SlidingDoorOpenedEvent
	 * Size -> 0x0001
	 */
	struct FSlidingDoorOpenedEvent
	{
	public:
		unsigned char                                              UnknownData_F9BL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SwingDoorOpenedEvent
	 * Size -> 0x0001
	 */
	struct FSwingDoorOpenedEvent
	{
	public:
		unsigned char                                              UnknownData_MIJG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NarrationRequestedEvent
	 * Size -> 0x0001
	 */
	struct FNarrationRequestedEvent
	{
	public:
		unsigned char                                              UnknownData_J6IU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveOpenableItemComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveOpenableItemComponentState
	{
	public:
		class UOpenableItemComponent*                              Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventOpenableItemAnimationFinished
	 * Size -> 0x0001
	 */
	struct FEventOpenableItemAnimationFinished
	{
	public:
		unsigned char                                              UnknownData_9CXM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventOpenableItemStateChanged
	 * Size -> 0x0002
	 */
	struct FEventOpenableItemStateChanged
	{
	public:
		unsigned char                                              UnknownData_VGLS[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventNotifyOpenableItemState
	 * Size -> 0x0001
	 */
	struct FEventNotifyOpenableItemState
	{
	public:
		unsigned char                                              UnknownData_LQEZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TradeRouteMapData
	 * Size -> 0x0038 (FullSize[0x0080] - InheritedSize[0x0048])
	 */
	struct FTradeRouteMapData : public FRegionMapData
	{
	public:
		struct FInterpCurveVector2D                                TradeRoutePath;                                          // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance
		struct FVector2D                                           TradeRoutePathOffset;                                    // 0x0060(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		float                                                      TradeRoutePathSpacing;                                   // 0x0068(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TradeRoutePathSegmentTextureWidth;                       // 0x006C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TradeRoutePathSegmentTextureLength;                      // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NormalizeSplinePointSpacing;                             // 0x0074(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NSV6[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NormalizeAdjustment;                                     // 0x0078(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IgnoreFirstPoint;                                        // 0x007C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XPL1[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventActorRoleChanged
	 * Size -> 0x0004
	 */
	struct FEventActorRoleChanged
	{
	public:
		unsigned char                                              UnknownData_DJWK[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAIOnDelayedAssignedMeshConsumed
	 * Size -> 0x0010
	 */
	struct FEventAIOnDelayedAssignedMeshConsumed
	{
	public:
		class USkeletalMeshComponent*                              MeshComponent;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class USkeletalMesh*                                       ConsumedMesh;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerPirateIdentityDeemedInactive
	 * Size -> 0x0078
	 */
	struct FEventPlayerPirateIdentityDeemedInactive
	{
	public:
		unsigned char                                              UnknownData_KCN4[0x78];                                  // 0x0000(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerPirateIdentityInvalidated
	 * Size -> 0x0078
	 */
	struct FEventPlayerPirateIdentityInvalidated
	{
	public:
		unsigned char                                              UnknownData_5XC8[0x78];                                  // 0x0000(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerPirateIdentityReady
	 * Size -> 0x0078
	 */
	struct FEventPlayerPirateIdentityReady
	{
	public:
		unsigned char                                              UnknownData_79YM[0x78];                                  // 0x0000(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeveloperTelemetryPayload
	 * Size -> 0x0028
	 */
	struct FDeveloperTelemetryPayload
	{
	public:
		class FString                                              EventTag;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FJsonObjectWrapper                                  Json;                                                    // 0x0010(0x0018)
	};

	/**
	 * ScriptStruct Athena.BaseTelemetryFragment
	 * Size -> 0x0040
	 */
	struct FBaseTelemetryFragment
	{
	public:
		class FString                                              DateLogged;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Sandbox;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FeatureConfigHash;                                       // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              StampId;                                                 // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientTelemetryFragment
	 * Size -> 0x0078
	 */
	struct FClientTelemetryFragment
	{
	public:
		struct FGuid                                               TitleSession;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              UserId;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		unsigned char                                              PlatformId;                                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              DeviceSpecScore;                                         // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_H57F[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeviceID;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               PlayerGameId;                                            // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              BuildId;                                                 // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ClientPlayMode;                                          // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PlayModeState;                                           // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientDeveloperTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FClientDeveloperTelemetryEvent : public FDeveloperTelemetryPayload
	{	};

	/**
	 * ScriptStruct Athena.PlayerBaseTelemetryFragmentInput
	 * Size -> 0x0008
	 */
	struct FPlayerBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class APlayerState>                         PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerBaseTelemetryFragment
	 * Size -> 0x0048
	 */
	struct FPlayerBaseTelemetryFragment
	{
	public:
		struct FGuid                                               PlayerGameId;                                            // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              UserId;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		unsigned char                                              PlatformId;                                              // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_TZYE[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeviceID;                                                // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerPositionTelemetryFragmentInput
	 * Size -> 0x0008
	 */
	struct FPlayerPositionTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class APlayerController>                    PlayerController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerPositionTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FPlayerPositionTelemetryFragment
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_48QG[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WorldLocationName;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerTenancyTelemetryFragment
	 * Size -> 0x0050
	 */
	struct FServerTenancyTelemetryFragment
	{
	public:
		class FString                                              VmId;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstanceId;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ClusterId;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              GsiId;                                                   // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ProcessorType;                                           // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerTelemetryFragment
	 * Size -> 0x0060
	 */
	struct FServerTelemetryFragment
	{
	public:
		uint32_t                                                   ServerSequenceId;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               ServerSessionId;                                         // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LC6C[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerBuildId;                                           // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ServerLocation;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ServerPlayMode;                                          // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PlayModeState;                                           // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ServerIsActive;                                          // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ServerIsXboxPadOnlySession;                              // 0x0059(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9KY4[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerDeveloperTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FPlayerDeveloperTelemetryEvent : public FDeveloperTelemetryPayload
	{	};

	/**
	 * ScriptStruct Athena.ServerDeveloperTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FServerDeveloperTelemetryEvent : public FDeveloperTelemetryPayload
	{	};

	/**
	 * ScriptStruct Athena.PlayerAggregatePositionTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FPlayerAggregatePositionTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TArray<struct FVector>                                     PositionData;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerAggregatePositionTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FPlayerAggregatePositionTelemetryFragment
	{
	public:
		TArray<struct FVector>                                     PositionData;                                            // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RPCTelemetryFragment
	 * Size -> 0x00C0
	 */
	struct FRPCTelemetryFragment
	{
	public:
		struct FRPCStats                                           RPCStats;                                                // 0x0000(0x00C0)
	};

	/**
	 * ScriptStruct Athena.TeamCityBuildFragment
	 * Size -> 0x0040
	 */
	struct FTeamCityBuildFragment
	{
	public:
		int32_t                                                    Id;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Changelist;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              BuildTypeId;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              StartedBy;                                               // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       Personal;                                                // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_90UQ[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StreamName;                                              // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FragmentMarker
	 * Size -> 0x0010
	 */
	struct FFragmentMarker
	{
	public:
		class FString                                              Marker;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerEntitlementUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FPlayerEntitlementUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_TQWM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EntitlementMapRedirectorFailedEvent
	 * Size -> 0x0008
	 */
	struct FEntitlementMapRedirectorFailedEvent
	{
	public:
		class FName                                                DeprecatedEntitlementId;                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EntitlementMapRedirectorUsedEvent
	 * Size -> 0x0014
	 */
	struct FEntitlementMapRedirectorUsedEvent
	{
	public:
		class FName                                                DeprecatedEntitlementId;                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RedirectedToValidEntitlementId;                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FoundIndex;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipMilestoneCompletionEvent
	 * Size -> 0x0110
	 */
	struct FShipMilestoneCompletionEvent
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_DMD6[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Progress;                                                // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Alignment;                                               // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Level;                                                   // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           CompletedAt;                                             // 0x00E8(0x0008) ZeroConstructor
		class FString                                              ShipId;                                                  // 0x00F0(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AlignmentKey;                                            // 0x0100(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateMilestoneCompletionEvent
	 * Size -> 0x0100
	 */
	struct FPirateMilestoneCompletionEvent
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_KGOL[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Progress;                                                // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Alignment;                                               // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Level;                                                   // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           CompletedAt;                                             // 0x00E8(0x0008) ZeroConstructor
		class FString                                              AlignmentKey;                                            // 0x00F0(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipMilestoneProgressionEvent
	 * Size -> 0x00F8
	 */
	struct FShipMilestoneProgressionEvent
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_50OJ[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   ProgressChange;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   CurrentLevel;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           UpdatedAt;                                               // 0x00E0(0x0008) ZeroConstructor
		class FString                                              ShipId;                                                  // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateMilestoneProgressionEvent
	 * Size -> 0x00E8
	 */
	struct FPirateMilestoneProgressionEvent
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_QYW2[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   ProgressChange;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   CurrentLevel;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           UpdatedAt;                                               // 0x00E0(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PinnedAccoladeResultArray
	 * Size -> 0x0010
	 */
	struct FPinnedAccoladeResultArray
	{
	public:
		TArray<class FString>                                      Results;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PinnedShipAccolade
	 * Size -> 0x0044
	 */
	struct FPinnedShipAccolade
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AlignmentId;                                             // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0020(0x0024)
	};

	/**
	 * ScriptStruct Athena.PinnedCaptainsLogAccolade
	 * Size -> 0x0034
	 */
	struct FPinnedCaptainsLogAccolade
	{
	public:
		struct FGuid                                               AlignmentId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0010(0x0024)
	};

	/**
	 * ScriptStruct Athena.AccoladeSubStatsInformationModel
	 * Size -> 0x0020
	 */
	struct FAccoladeSubStatsInformationModel
	{
	public:
		class FString                                              LocalizedTitle;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Key;                                                     // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladeStatsInformationModel
	 * Size -> 0x0048
	 */
	struct FAccoladeStatsInformationModel
	{
	public:
		class FString                                              LocalizedTitle;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0010(0x0024)
		unsigned char                                              UnknownData_K1D8[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAccoladeSubStatsInformationModel>           SubStats;                                                // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AccoladeInformationModel
	 * Size -> 0x0048
	 */
	struct FAccoladeInformationModel
	{
	public:
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0000(0x0024)
		unsigned char                                              UnknownData_NOEV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LocalizedTitle;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FAccoladeStatsInformationModel>              Stats;                                                   // 0x0038(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AlignmentInformationModel
	 * Size -> 0x0050
	 */
	struct FAlignmentInformationModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Key;                                                     // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedTitle;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedCopy;                                           // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FAccoladeInformationModel>                   Accolades;                                               // 0x0040(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AccoladeAndAlignmentInformationModel
	 * Size -> 0x0010
	 */
	struct FAccoladeAndAlignmentInformationModel
	{
	public:
		TArray<struct FAlignmentInformationModel>                  Alignments;                                              // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipMilestoneCompletionMessage
	 * Size -> 0x0110
	 */
	struct FShipMilestoneCompletionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_IZFR[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Progress;                                                // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Alignment;                                               // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Level;                                                   // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           CompletedAt;                                             // 0x00E8(0x0008) ZeroConstructor
		class FString                                              ShipId;                                                  // 0x00F0(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AlignmentKey;                                            // 0x0100(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateMilestoneCompletionMessage
	 * Size -> 0x0100
	 */
	struct FPirateMilestoneCompletionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_AAV7[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Progress;                                                // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Alignment;                                               // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   Level;                                                   // 0x00E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           CompletedAt;                                             // 0x00E8(0x0008) ZeroConstructor
		class FString                                              AlignmentKey;                                            // 0x00F0(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipMilestoneProgressionMessage
	 * Size -> 0x00F8
	 */
	struct FShipMilestoneProgressionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_RQ59[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   ProgressChange;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   CurrentLevel;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           UpdatedAt;                                               // 0x00E0(0x0008) ZeroConstructor
		class FString                                              ShipId;                                                  // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PirateMilestoneProgressionMessage
	 * Size -> 0x00E8
	 */
	struct FPirateMilestoneProgressionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               AlignmentId;                                             // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ScheduleId;                                              // 0x0098(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x00A8(0x0024)
		unsigned char                                              UnknownData_0KL1[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   ProgressChange;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint64_t                                                   CurrentLevel;                                            // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           UpdatedAt;                                               // 0x00E0(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UnlockedShopOffersThroughAccoladesAndMilestonesModel
	 * Size -> 0x0038
	 */
	struct FUnlockedShopOffersThroughAccoladesAndMilestonesModel
	{
	public:
		class FString                                              Type;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              SourceId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               OfferId;                                                 // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           UnlockedAt;                                              // 0x0030(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UnlockedOffersContainerModel
	 * Size -> 0x0010
	 */
	struct FUnlockedOffersContainerModel
	{
	public:
		TArray<struct FUnlockedShopOffersThroughAccoladesAndMilestonesModel> Offers;                                                  // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AccoladeBreakDownTotalModel
	 * Size -> 0x0030
	 */
	struct FAccoladeBreakDownTotalModel
	{
	public:
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0000(0x0024)
		unsigned char                                              UnknownData_BR60[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    ProgressValue;                                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladePirateBreakDownModel
	 * Size -> 0x0040
	 */
	struct FAccoladePirateBreakDownModel
	{
	public:
		struct FGuid                                               PirateId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0010(0x0024)
		unsigned char                                              UnknownData_VIBL[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    ProgressValue;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladeProgressBreakdownShipModel
	 * Size -> 0x0020
	 */
	struct FAccoladeProgressBreakdownShipModel
	{
	public:
		TArray<struct FAccoladeBreakDownTotalModel>                Totals;                                                  // 0x0000(0x0010) ZeroConstructor
		TArray<struct FAccoladePirateBreakDownModel>               Pirates;                                                 // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AccoladeShipBreakDownModel
	 * Size -> 0x0040
	 */
	struct FAccoladeShipBreakDownModel
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FAccoladeProgressId                                 ProgressId;                                              // 0x0010(0x0024)
		unsigned char                                              UnknownData_ZHUK[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    ProgressValue;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AccoladeProgressBreakdownPirateModel
	 * Size -> 0x0020
	 */
	struct FAccoladeProgressBreakdownPirateModel
	{
	public:
		TArray<struct FAccoladeBreakDownTotalModel>                Totals;                                                  // 0x0000(0x0010) ZeroConstructor
		TArray<struct FAccoladeShipBreakDownModel>                 Ships;                                                   // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipAccoladeProgressModel
	 * Size -> 0x0020
	 */
	struct FShipAccoladeProgressModel
	{
	public:
		struct FAccoladeProgressModel                              Ship;                                                    // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.PlayerAccoladeProgressModel
	 * Size -> 0x0020
	 */
	struct FPlayerAccoladeProgressModel
	{
	public:
		struct FAccoladeProgressModel                              Pirate;                                                  // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.PlayerAndShipAccoladeProgressModel
	 * Size -> 0x0040
	 */
	struct FPlayerAndShipAccoladeProgressModel
	{
	public:
		struct FAccoladeProgressModel                              Pirate;                                                  // 0x0000(0x0020)
		struct FAccoladeProgressModel                              Ship;                                                    // 0x0020(0x0020)
	};

	/**
	 * ScriptStruct Athena.CampaignGoalProgressEvent
	 * Size -> 0x00B0
	 */
	struct FCampaignGoalProgressEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		int64_t                                                    PreviousProgress;                                        // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    CurrentProgress;                                         // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    CompletionThreshold;                                     // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               GoalId;                                                  // 0x0090(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           ActiveFrom;                                              // 0x00A0(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveUntil;                                             // 0x00A8(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CampaignGoalModel
	 * Size -> 0x0070
	 */
	struct FCampaignGoalModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           ActiveFrom;                                              // 0x0010(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveUntil;                                             // 0x0018(0x0008) ZeroConstructor
		TMap<class FString, class FString>                         Meta;                                                    // 0x0020(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CampaignGoalProgressMessage
	 * Size -> 0x00B0
	 */
	struct FCampaignGoalProgressMessage
	{
	public:
		int64_t                                                    PreviousProgress;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    CurrentProgress;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    CompletionThreshold;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               GoalId;                                                  // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           ActiveFrom;                                              // 0x0028(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveUtil;                                              // 0x0030(0x0008) ZeroConstructor
		struct FPirateIdentity                                     Pirate;                                                  // 0x0038(0x0078)
	};

	/**
	 * ScriptStruct Athena.ShipCreationRequestModel
	 * Size -> 0x0028
	 */
	struct FShipCreationRequestModel
	{
	public:
		class FString                                              ShipType;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ShipName;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       HintSkipCommerceFlow;                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q0X2[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptaincyRequestIsValidCaptaincySessionModel
	 * Size -> 0x0028
	 */
	struct FCaptaincyRequestIsValidCaptaincySessionModel
	{
	public:
		float                                                      ShipX;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ShipY;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FString>                                      CrewPirateIds;                                           // 0x0008(0x0010) ZeroConstructor
		TArray<class FString>                                      CrewUserIds;                                             // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptaincyRequestStartedSessionModel
	 * Size -> 0x0010
	 */
	struct FCaptaincyRequestStartedSessionModel
	{
	public:
		class FString                                              ShipType;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptaincyReponseStartedSessionModel
	 * Size -> 0x0020
	 */
	struct FCaptaincyReponseStartedSessionModel
	{
	public:
		class FString                                              SessionToken;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    HeartbeatTimeSeconds;                                    // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ShipSaveTimeSeconds;                                     // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ContinuousSaving;                                        // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       FirstTimeSailingShip;                                    // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JSMG[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCDemandMultiplier
	 * Size -> 0x000C
	 */
	struct FNPCDemandMultiplier
	{
	public:
		class FName                                                NPCId;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Multiplier;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CommodityDemandMultipliers
	 * Size -> 0x0018
	 */
	struct FCommodityDemandMultipliers
	{
	public:
		class FName                                                RewardId;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FNPCDemandMultiplier>                        NPCMultipliers;                                          // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PeriodicCommodityMultipliers
	 * Size -> 0x0020
	 */
	struct FPeriodicCommodityMultipliers
	{
	public:
		struct FDateTime                                           DateFrom;                                                // 0x0000(0x0008) ZeroConstructor
		struct FDateTime                                           DateTo;                                                  // 0x0008(0x0008) ZeroConstructor
		TArray<struct FCommodityDemandMultipliers>                 Rewards;                                                 // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RemoteCommodityDemandData
	 * Size -> 0x0038
	 */
	struct FRemoteCommodityDemandData
	{
	public:
		class FName                                                TradeRouteId;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FPeriodicCommodityMultipliers>               TradeRoutes;                                             // 0x0008(0x0010) ZeroConstructor
		struct FDateTime                                           OverrideFromDate;                                        // 0x0018(0x0008) ZeroConstructor
		struct FDateTime                                           OverrideToDate;                                          // 0x0020(0x0008) ZeroConstructor
		TArray<struct FCommodityDemandMultipliers>                 OverrideMultipliers;                                     // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CommodityDemandModel
	 * Size -> 0x0010
	 */
	struct FCommodityDemandModel
	{
	public:
		TArray<struct FRemoteCommodityDemandData>                  NPCTradeRouteMultipliers;                                // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EmissaryLeaderboardScoreUpdatedEvent
	 * Size -> 0x0090
	 */
	struct FEmissaryLeaderboardScoreUpdatedEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		class FName                                                EmissaryAffiliation;                                     // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    From;                                                    // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    To;                                                      // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LeaderboardScoreUpdateMessage
	 * Size -> 0x0090
	 */
	struct FLeaderboardScoreUpdateMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		class FName                                                EmissaryAffiliation;                                     // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    Before;                                                  // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int64_t                                                    After;                                                   // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadoutItemCostResponseModel
	 * Size -> 0x0018
	 */
	struct FLoadoutItemCostResponseModel
	{
	public:
		class FString                                              Currency;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Amount;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6RTE[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LoadoutCostResponseModel
	 * Size -> 0x00A0
	 */
	struct FLoadoutCostResponseModel
	{
	public:
		TMap<class FString, struct FLoadoutItemCostResponseModel>  CategoryCosts;                                           // 0x0000(0x0050) ZeroConstructor
		TMap<class FString, struct FLoadoutItemCostResponseModel>  EntitlementCosts;                                        // 0x0050(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NoteDeletedEvent
	 * Size -> 0x0088
	 */
	struct FNoteDeletedEvent
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FGuid                                               NoteId;                                                  // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NoteDeletedMessage
	 * Size -> 0x0088
	 */
	struct FNoteDeletedMessage
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
		struct FGuid                                               NoteId;                                                  // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NotesManagementAddNoteScheduleResponseModel
	 * Size -> 0x0014
	 */
	struct FNotesManagementAddNoteScheduleResponseModel
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NQOC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               ScheduleId;                                              // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NotesManagementRemoteServiceAddNoteScheduleModel
	 * Size -> 0x0040
	 */
	struct FNotesManagementRemoteServiceAddNoteScheduleModel
	{
	public:
		struct FGuid                                               NoteId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           ActiveFrom;                                              // 0x0010(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveTo;                                                // 0x0018(0x0008) ZeroConstructor
		TArray<class FString>                                      CompletionEventIds;                                      // 0x0020(0x0010) ZeroConstructor
		class FString                                              RewardId;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NotesManagementAddNoteResponseModel
	 * Size -> 0x0014
	 */
	struct FNotesManagementAddNoteResponseModel
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_CYHK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               NoteId;                                                  // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NotesManagementRemoteServiceNoteTextModel
	 * Size -> 0x0030
	 */
	struct FNotesManagementRemoteServiceNoteTextModel
	{
	public:
		class FString                                              Locale;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NotesManagementRemoteServiceAddNoteModel
	 * Size -> 0x0020
	 */
	struct FNotesManagementRemoteServiceAddNoteModel
	{
	public:
		class FString                                              Type;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FNotesManagementRemoteServiceNoteTextModel>  NoteText;                                                // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CompletionEventsRemoteServiceModel
	 * Size -> 0x0010
	 */
	struct FCompletionEventsRemoteServiceModel
	{
	public:
		TArray<class FString>                                      CompletionEvents;                                        // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NotesRemoteServiceModel
	 * Size -> 0x0010
	 */
	struct FNotesRemoteServiceModel
	{
	public:
		TArray<struct FGuid>                                       Notes;                                                   // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.NotesRemoteServiceNoteDetailModel
	 * Size -> 0x0040
	 */
	struct FNotesRemoteServiceNoteDetailModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              NoteType;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Title;                                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Note;                                                    // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NotesRemoteServiceNoteModel
	 * Size -> 0x0088
	 */
	struct FNotesRemoteServiceNoteModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           ActiveFromUtc;                                           // 0x0010(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveToUtc;                                             // 0x0018(0x0008) ZeroConstructor
		bool                                                       IsRead;                                                  // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_JM01[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      CompletionEventIds;                                      // 0x0028(0x0010) ZeroConstructor
		TMap<class FString, class FString>                         MetaData;                                                // 0x0038(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PromptsCounterModel
	 * Size -> 0x0058
	 */
	struct FPromptsCounterModel
	{
	public:
		TMap<class FString, int32_t>                               PromptCounters;                                          // 0x0000(0x0050) ZeroConstructor
		struct FDateTime                                           NowUtc;                                                  // 0x0050(0x0008) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DefinitionUpdatedMessage
	 * Size -> 0x0010
	 */
	struct FDefinitionUpdatedMessage
	{
	public:
		class FString                                              ContentHash;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeasonRewardEarnedMessage
	 * Size -> 0x00A0
	 */
	struct FSeasonRewardEarnedMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               SeasonId;                                                // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       MultipleRewards;                                         // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FPS2[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSeasonReward>                               Rewards;                                                 // 0x0090(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.LevelCompletionMessage
	 * Size -> 0x00A0
	 */
	struct FLevelCompletionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               SeasonId;                                                // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    Level;                                                   // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TimeSpentInLevel;                                        // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Tier;                                                    // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TimeSpentInTier;                                         // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       TierCompleted;                                           // 0x0098(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SeasonCompleted;                                         // 0x0099(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_L1OC[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeasonGoalCompletionMessage
	 * Size -> 0x00B0
	 */
	struct FSeasonGoalCompletionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		struct FGuid                                               SeasonId;                                                // 0x0078(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		ESeasonGoalType                                            GoalType;                                                // 0x0098(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WFB5[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               GoalGroupId;                                             // 0x009C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5QPX[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SeasonGoalProgressionMessage
	 * Size -> 0x00B8
	 */
	struct FSeasonGoalProgressionMessage
	{
	public:
		struct FPirateIdentity                                     Pirate;                                                  // 0x0000(0x0078)
		int32_t                                                    PreviousProgress;                                        // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CurrentProgress;                                         // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CompletionThreshold;                                     // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               SeasonId;                                                // 0x0084(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               GoalId;                                                  // 0x0094(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		ESeasonGoalType                                            GoalType;                                                // 0x00A4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_16R7[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               GoalGroupId;                                             // 0x00A8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SeasonTierInfo
	 * Size -> 0x0018
	 */
	struct FSeasonTierInfo
	{
	public:
		int32_t                                                    Number;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_J2OC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LocalizedTitle;                                          // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeasonGoalInfo
	 * Size -> 0x0038
	 */
	struct FSeasonGoalInfo
	{
	public:
		struct FGuid                                               GoalId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int64_t                                                    Threshold;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              XPGain;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedTitle;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeasonChallengeInfo
	 * Size -> 0x0068
	 */
	struct FSeasonChallengeInfo
	{
	public:
		struct FGuid                                               GoalId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int64_t                                                    Threshold;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              XPGain;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Category;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedTitle;                                          // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedCopy;                                           // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSeasonGoalInfo>                             Goals;                                                   // 0x0058(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SeasonChallengeGroupInfo
	 * Size -> 0x0040
	 */
	struct FSeasonChallengeGroupInfo
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              LocalizedTitle;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocalizedCopy;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSeasonChallengeInfo>                        Challenges;                                              // 0x0030(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SeasonInfoModel
	 * Size -> 0x0070
	 */
	struct FSeasonInfoModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ThemeId;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FDateTime                                           ActiveFrom;                                              // 0x0020(0x0008) ZeroConstructor
		struct FDateTime                                           ActiveUntil;                                             // 0x0028(0x0008) ZeroConstructor
		class FString                                              LocalizedTitle;                                          // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FSeasonTierInfo>                             Tiers;                                                   // 0x0040(0x0010) ZeroConstructor
		TArray<struct FSeasonChallengeGroupInfo>                   ChallengeGroups;                                         // 0x0050(0x0010) ZeroConstructor
		TArray<struct FSeasonGoalInfo>                             IndividualGoals;                                         // 0x0060(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.SeasonInfoModelContainer
	 * Size -> 0x0010
	 */
	struct FSeasonInfoModelContainer
	{
	public:
		TArray<struct FSeasonInfoModel>                            Seasons;                                                 // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ShipStockIntentModel
	 * Size -> 0x0010
	 */
	struct FShipStockIntentModel
	{
	public:
		TArray<class FString>                                      IntentItems;                                             // 0x0000(0x0010) ZeroConstructor, Transient
	};

	/**
	 * ScriptStruct Athena.ForceStoryServiceRefreshEvent
	 * Size -> 0x0001
	 */
	struct FForceStoryServiceRefreshEvent
	{
	public:
		unsigned char                                              UnknownData_79DJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ForceStoryServiceRefreshMessage
	 * Size -> 0x0001
	 */
	struct FForceStoryServiceRefreshMessage
	{
	public:
		unsigned char                                              UnknownData_0Q0E[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StoryInfoModel
	 * Size -> 0x0018
	 */
	struct FStoryInfoModel
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDateTime                                           StartTime;                                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance
		struct FDateTime                                           EndTime;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerPirateIdentitySet
	 * Size -> 0x0078
	 */
	struct FEventAthenaLocalPlayerPirateIdentitySet
	{
	public:
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0000(0x0078)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerRequestRequiredControllersConnectedResponse
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerRequestRequiredControllersConnectedResponse
	{
	public:
		bool                                                       ControllerConnected;                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerRequestRequiredControllersConnected
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerRequestRequiredControllersConnected
	{
	public:
		unsigned char                                              UnknownData_L1XQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLocalPrimaryPlayerReset
	 * Size -> 0x0001
	 */
	struct FEventLocalPrimaryPlayerReset
	{
	public:
		unsigned char                                              UnknownData_2KR7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerFocalUserSet
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerFocalUserSet
	{
	public:
		bool                                                       FocalUserSet;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPrimaryPlayerProfileDisconnected
	 * Size -> 0x0001
	 */
	struct FEventPrimaryPlayerProfileDisconnected
	{
	public:
		unsigned char                                              UnknownData_6F7V[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPrimaryPlayerProfileConnected
	 * Size -> 0x0001
	 */
	struct FEventPrimaryPlayerProfileConnected
	{
	public:
		unsigned char                                              UnknownData_ZCDZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerPairingChanged
	 * Size -> 0x0004
	 */
	struct FEventAthenaLocalPlayerControllerPairingChanged
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHideControllerDisconnectedUI
	 * Size -> 0x0001
	 */
	struct FEventHideControllerDisconnectedUI
	{
	public:
		unsigned char                                              UnknownData_FSSH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShowControllerDisconnectedUI
	 * Size -> 0x0001
	 */
	struct FEventShowControllerDisconnectedUI
	{
	public:
		unsigned char                                              UnknownData_89Z1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerDisconnected
	 * Size -> 0x0004
	 */
	struct FEventAthenaLocalPlayerControllerDisconnected
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerConnected
	 * Size -> 0x0004
	 */
	struct FEventAthenaLocalPlayerControllerConnected
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerClearControllerId
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerClearControllerId
	{
	public:
		unsigned char                                              UnknownData_OBD8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerTypeOverride
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerControllerTypeOverride
	{
	public:
		EInputControllerType                                       ControllerType;                                          // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerTypeRequest
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerControllerTypeRequest
	{
	public:
		unsigned char                                              UnknownData_7BMA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerControllerTypeChange
	 * Size -> 0x0001
	 */
	struct FEventAthenaLocalPlayerControllerTypeChange
	{
	public:
		EInputControllerType                                       ControllerType;                                          // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaLocalPlayerSetControllerId
	 * Size -> 0x0004
	 */
	struct FEventAthenaLocalPlayerSetControllerId
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LocalisationChangedEvent
	 * Size -> 0x0001
	 */
	struct FLocalisationChangedEvent
	{
	public:
		unsigned char                                              UnknownData_AY1C[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsRadialMappings
	 * Size -> 0x0050
	 */
	struct FEventUserGameSettingsRadialMappings
	{
	public:
		class FName                                                RadialSlotIndex0SelectedKeyboard;                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex1SelectedKeyboard;                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex2SelectedKeyboard;                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex3SelectedKeyboard;                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex4SelectedKeyboard;                        // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex5SelectedKeyboard;                        // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex6SelectedKeyboard;                        // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotIndex7SelectedKeyboard;                        // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotClockwise;                                     // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RadialSlotCounterClockwise;                              // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsRadialMappingsRequest
	 * Size -> 0x0001
	 */
	struct FEventUserGameSettingsRadialMappingsRequest
	{
	public:
		unsigned char                                              UnknownData_LCL5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsFloatChanged
	 * Size -> 0x000C
	 */
	struct FEventUserGameSettingsFloatChanged
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Value;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsIntegerChanged
	 * Size -> 0x000C
	 */
	struct FEventUserGameSettingsIntegerChanged
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Value;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsBooleanChanged
	 * Size -> 0x000C
	 */
	struct FEventUserGameSettingsBooleanChanged
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Value;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QZUP[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventResetSettingsGroup
	 * Size -> 0x0008
	 */
	struct FEventResetSettingsGroup
	{
	public:
		class FName                                                SettingsGroupNameToReset;                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRegisterSettingsGroup
	 * Size -> 0x0018
	 */
	struct FEventRegisterSettingsGroup
	{
	public:
		class FName                                                SettingsGroupName;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FName>                                        SettingsGroupSettings;                                   // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsResetToDefaultBindings
	 * Size -> 0x0003
	 */
	struct FEventUserGameSettingsResetToDefaultBindings
	{
	public:
		EInputControllerType                                       ControllerTypeToReset;                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ResetActions;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ResetAxes;                                               // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSetKeyBindingToInvalid
	 * Size -> 0x0020
	 */
	struct FEventUserGameSettingsSetKeyBindingToInvalid
	{
	public:
		EBindingSet                                                BindingSet;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B5TX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BindingName;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		EInputControllerType                                       ControllerType;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESettingsChangeInstigator                                  Instigator;                                              // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G1M1[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSetKeyBinding
	 * Size -> 0x0030
	 */
	struct FEventUserGameSettingsSetKeyBinding
	{
	public:
		EBindingSet                                                BindingSet;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U4WM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BindingName;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              KeyName;                                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		ESettingsChangeInstigator                                  Instigator;                                              // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GHE8[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSetInteger
	 * Size -> 0x0010
	 */
	struct FEventUserGameSettingsSetInteger
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Value;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESettingsChangeInstigator                                  Instigator;                                              // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZHND[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSetFloat
	 * Size -> 0x000C
	 */
	struct FEventUserGameSettingsSetFloat
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Value;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSetBoolean
	 * Size -> 0x000C
	 */
	struct FEventUserGameSettingsSetBoolean
	{
	public:
		class FName                                                KeyName;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Value;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_A3QR[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventGetAllKeybindingsResponse
	 * Size -> 0x0028
	 */
	struct FEventGetAllKeybindingsResponse
	{
	public:
		TArray<struct FKeyBinding>                                 ActionBindings;                                          // 0x0000(0x0010) ZeroConstructor
		TArray<struct FKeyBinding>                                 AxisBindings;                                            // 0x0010(0x0010) ZeroConstructor
		int32_t                                                    DefaultKeyboardLayout;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KZON[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventGetAllKeybindingsRequest
	 * Size -> 0x0001
	 */
	struct FEventGetAllKeybindingsRequest
	{
	public:
		unsigned char                                              UnknownData_4F1O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHdrSettingsVisible
	 * Size -> 0x0001
	 */
	struct FEventHdrSettingsVisible
	{
	public:
		bool                                                       Visible;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventsRequestAccessibilitySettingsReset
	 * Size -> 0x0001
	 */
	struct FEventsRequestAccessibilitySettingsReset
	{
	public:
		unsigned char                                              UnknownData_N0SY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSaveUserGameSettingsCompleted
	 * Size -> 0x0001
	 */
	struct FEventSaveUserGameSettingsCompleted
	{
	public:
		unsigned char                                              UnknownData_GPPB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSaveUserGameSettingsRequest
	 * Size -> 0x0001
	 */
	struct FEventSaveUserGameSettingsRequest
	{
	public:
		unsigned char                                              UnknownData_WM9N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsResponse
	 * Size -> 0x0180
	 */
	struct FEventUserGameSettingsResponse
	{
	public:
		struct FPersistentUserGameSettings                         CurrentSettings;                                         // 0x0000(0x0180)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsRequest
	 * Size -> 0x0001
	 */
	struct FEventUserGameSettingsRequest
	{
	public:
		unsigned char                                              UnknownData_P5LN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsSingleChange
	 * Size -> 0x0008
	 */
	struct FEventUserGameSettingsSingleChange
	{
	public:
		class FName                                                SettingName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUserGameSettingsAllChanged
	 * Size -> 0x0001
	 */
	struct FEventUserGameSettingsAllChanged
	{
	public:
		unsigned char                                              UnknownData_UUV9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ResettableSettingsGroup
	 * Size -> 0x0018
	 */
	struct FResettableSettingsGroup
	{
	public:
		class FName                                                SettingsGroupName;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FName>                                        SettingsNames;                                           // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ResettableUserSettingData
	 * Size -> 0x0010
	 */
	struct FResettableUserSettingData
	{
	public:
		unsigned char                                              UnknownData_11X0[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIKeyBindingOptionSelectedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FUIKeyBindingOptionSelectedTelemetryEvent
	{
	public:
		class FString                                              BindingSet;                                              // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FKeyBinding                                         Value;                                                   // 0x0010(0x0020) BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.UIIntegerOptionSelectedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FUIIntegerOptionSelectedTelemetryEvent
	{
	public:
		class FString                                              Option;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Value;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HZPM[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIFloatOptionSelectedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FUIFloatOptionSelectedTelemetryEvent
	{
	public:
		class FString                                              Option;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      Value;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FJEZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIBooleanOptionSelectedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FUIBooleanOptionSelectedTelemetryEvent
	{
	public:
		class FString                                              Option;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       Value;                                                   // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_M895[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ScrambleGamertagsSettingsChanged
	 * Size -> 0x0001
	 */
	struct FScrambleGamertagsSettingsChanged
	{
	public:
		bool                                                       ShouldScrambleGamertags;                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.IndividualMeshScoringToRemove
	 * Size -> 0x0018
	 */
	struct FIndividualMeshScoringToRemove
	{
	public:
		class FName                                                MeshName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               RegistrationToken;                                       // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintTelemetryBudgetFragment
	 * Size -> 0x0050
	 */
	struct FMeshMemoryConstraintTelemetryBudgetFragment
	{
	public:
		class FString                                              Budget;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    MemoryUsedInBytes;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaximumMemoryUsedInBytes;                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumUniqueMeshes;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumUniqueMeshesUsingFallback;                            // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumTotalMeshesUsingFallback;                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MemoryUsedOfNoFallbackMeshesInBytes;                     // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumUniqueNoFallbackMeshes;                               // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumTotalNoFallbackMeshes;                                // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ThresholdScale;                                          // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_BDP4[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FJsonObjectWrapper                                  RegisteredMeshes;                                        // 0x0038(0x0018)
	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FMeshMemoryConstraintTelemetryFragment
	{
	public:
		TArray<struct FMeshMemoryConstraintTelemetryBudgetFragment> BudgetData;                                              // 0x0000(0x0010) ZeroConstructor
		int32_t                                                    MemoryUsedInBytes;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MemoryUsedOfNoFallbackMeshesInBytes;                     // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    MaximumMemoryUsedInBytes;                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ThresholdScale;                                          // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintServiceRequestScoringEvent
	 * Size -> 0x0008
	 */
	struct FMeshMemoryConstraintServiceRequestScoringEvent
	{
	public:
		class UClass*                                              ConstraintBudget;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintRegistrationBaseTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FMeshMemoryConstraintRegistrationBaseTelemetryEvent
	{
	public:
		bool                                                       HasWorldContext;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VX2M[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              BudgetNoFallback;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              MeshReference;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintUnregistrationFailedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	struct FMeshMemoryConstraintUnregistrationFailedTelemetryEvent : public FMeshMemoryConstraintRegistrationBaseTelemetryEvent
	{	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintRegistrationFailedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	struct FMeshMemoryConstraintRegistrationFailedTelemetryEvent : public FMeshMemoryConstraintRegistrationBaseTelemetryEvent
	{	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintRegistrationDelayedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	struct FMeshMemoryConstraintRegistrationDelayedTelemetryEvent : public FMeshMemoryConstraintRegistrationBaseTelemetryEvent
	{	};

	/**
	 * ScriptStruct Athena.MeshMemoryConstraintComponentMissingHandlerEvent
	 * Size -> 0x0020
	 */
	struct FMeshMemoryConstraintComponentMissingHandlerEvent
	{
	public:
		unsigned char                                              UnknownData_QGIS[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DitherComponentFinishedApplyingMaterialsEvent
	 * Size -> 0x0001
	 */
	struct FDitherComponentFinishedApplyingMaterialsEvent
	{
	public:
		unsigned char                                              UnknownData_DVAX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DitherFadeOutEvent
	 * Size -> 0x0001
	 */
	struct FDitherFadeOutEvent
	{
	public:
		unsigned char                                              UnknownData_WX25[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DitherFadeInEvent
	 * Size -> 0x0001
	 */
	struct FDitherFadeInEvent
	{
	public:
		unsigned char                                              UnknownData_B3AZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventDynamicMaterialMeshLoaded
	 * Size -> 0x0001
	 */
	struct FEventDynamicMaterialMeshLoaded
	{
	public:
		unsigned char                                              UnknownData_13W9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BaseLightData
	 * Size -> 0x0080
	 */
	struct FBaseLightData
	{
	public:
		float                                                      Intensity;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash
		struct FColor                                              LightColor;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor
		unsigned char                                              bAffectsWorld : 1;                                       // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              CastShadows : 1;                                         // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              CastStaticShadows : 1;                                   // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              CastDynamicShadows : 1;                                  // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              bAffectTranslucentLighting : 1;                          // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              bPrecomputedLightingIsValid : 1;                         // 0x0008(0x0001) BIT_FIELD NoDestructor
		unsigned char                                              RainOcclusion : 1;                                       // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              UnknownData_65NF[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IndirectLightingIntensity;                               // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash
		float                                                      ScaleForTranslucency;                                    // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      CapForTranslucency;                                      // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      Temperature;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash
		unsigned char                                              bUseTemperature : 1;                                     // 0x001C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_VM1E[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRoughness;                                            // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      ShadowBias;                                              // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      ShadowSharpen;                                           // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      ShadowResMaxDynamicDegradation;                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              CastTranslucentShadows : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              bCastShadowsFromCinematicObjectsOnly : 1;                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              bAffectDynamicIndirectLighting : 1;                      // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              UnknownData_FE23[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  LightFunctionMaterial;                                   // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             LightFunctionScale;                                      // 0x0040(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0Y4J[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextureLightProfile*                                IESTexture;                                              // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              bUseIESBrightness : 1;                                   // 0x0058(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_AF2T[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IESBrightnessScale;                                      // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash
		float                                                      LightFunctionFadeDistance;                               // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DisabledBrightness;                                      // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              bEnableLightShaftBloom : 1;                              // 0x0068(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor
		unsigned char                                              UnknownData_2IF0[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BloomScale;                                              // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      BloomThreshold;                                          // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FColor                                              BloomTint;                                               // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       bUseRayTracedDistanceFieldShadows;                       // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UXV0[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RayStartOffsetDepthScale;                                // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BaseLightTemplate
	 * Size -> 0x0080
	 */
	struct FBaseLightTemplate
	{
	public:
		struct FBaseLightData                                      BaseLightData;                                           // 0x0000(0x0080) Edit
	};

	/**
	 * ScriptStruct Athena.PointLightData
	 * Size -> 0x003C
	 */
	struct FPointLightData
	{
	public:
		float                                                      AttenuationRadius;                                       // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash
		unsigned char                                              bUseInverseSquaredFalloff : 1;                           // 0x0004(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay
		unsigned char                                              UnknownData_TP4W[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LightFalloffExponent;                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      IntensityScaleForWater;                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      MinDistanceToLightAssumed;                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		float                                                      SourceRadius;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SourceLength;                                            // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESimpleLightFunctionType                                   SimpleFunctionType;                                      // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FGLN[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScaleOffset;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PulsePhase;                                              // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FlickerFrequency;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    FlickerPerlinRow;                                        // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash
		struct FLightmassPointLightSettings                        LightmassSettings;                                       // 0x0030(0x000C) Edit, BlueprintVisible, BlueprintReadOnly
	};

	/**
	 * ScriptStruct Athena.PointLightTemplate
	 * Size -> 0x0040 (FullSize[0x00C0] - InheritedSize[0x0080])
	 */
	struct FPointLightTemplate : public FBaseLightTemplate
	{
	public:
		struct FPointLightData                                     PointLightData;                                          // 0x0080(0x003C) Edit
		unsigned char                                              UnknownData_USRJ[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpotLightData
	 * Size -> 0x000C
	 */
	struct FSpotLightData
	{
	public:
		float                                                      InnerConeAngle;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      OuterConeAngle;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      KickBackRatio;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SpotLightTemplate
	 * Size -> 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
	 */
	struct FSpotLightTemplate : public FPointLightTemplate
	{
	public:
		struct FSpotLightData                                      SpotLightData;                                           // 0x00C0(0x000C) Edit
		unsigned char                                              UnknownData_CM47[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GenericLightTemplate
	 * Size -> 0x00D0
	 */
	struct FGenericLightTemplate
	{
	public:
		ELightTemplateType                                         LightType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZBVV[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBaseLightData                                      BaseLightData;                                           // 0x0008(0x0080) Edit
		struct FPointLightData                                     PointLightData;                                          // 0x0088(0x003C) Edit
		struct FSpotLightData                                      SpotLightData;                                           // 0x00C4(0x000C) Edit
	};

	/**
	 * ScriptStruct Athena.ClientRequestAsyncLoadingCompleteAckNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FClientRequestAsyncLoadingCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		int32_t                                                    StreamOutLevelId;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    StreamInLevelId;                                         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerAsyncLoadingCompleteAckNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FServerAsyncLoadingCompleteAckNetworkEvent : public FNetworkEventStruct
	{
	public:
		EServerAsyncLoadingAckReason                               Reason;                                                  // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CQYV[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MaterialInformationTranslationData
	 * Size -> 0x0010
	 */
	struct FMaterialInformationTranslationData : public FTableRowBase
	{
	public:
		class FName                                                AudioSurfaceType;                                        // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                VFXSurfaceType;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ConditionalStatContext
	 * Size -> 0x0020
	 */
	struct FConditionalStatContext
	{
	public:
		class UObject*                                             ObjectOfInterest1;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             ObjectOfInterest2;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PATQ[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllianceStatEvent
	 * Size -> 0x0028
	 */
	struct FAllianceStatEvent
	{
	public:
		unsigned char                                              UnknownData_FNZS[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ObjectOfInterest;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IF28[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HeroStatEvent
	 * Size -> 0x0010
	 */
	struct FHeroStatEvent
	{
	public:
		unsigned char                                              UnknownData_8IEP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CursedCrewStatEvent
	 * Size -> 0x0028
	 */
	struct FCursedCrewStatEvent
	{
	public:
		unsigned char                                              UnknownData_501N[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ObjectOfInterest;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FTIJ[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllPlayersInRangeStatEvent
	 * Size -> 0x0028
	 */
	struct FAllPlayersInRangeStatEvent
	{
	public:
		unsigned char                                              UnknownData_FY2R[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ObjectOfInterest;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VV5W[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewStatEvent
	 * Size -> 0x0028
	 */
	struct FCrewStatEvent
	{
	public:
		unsigned char                                              UnknownData_SN90[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ObjectOfInterest;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_H9Z9[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActorDeactivationCompleted
	 * Size -> 0x0001
	 */
	struct FActorDeactivationCompleted
	{
	public:
		unsigned char                                              UnknownData_EHZZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActorDeactivationRequested
	 * Size -> 0x0004
	 */
	struct FActorDeactivationRequested
	{
	public:
		float                                                      DeactivationDuration;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ActorActivationCompleted
	 * Size -> 0x0001
	 */
	struct FActorActivationCompleted
	{
	public:
		unsigned char                                              UnknownData_XH55[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActorActivationRequested
	 * Size -> 0x0008
	 */
	struct FActorActivationRequested
	{
	public:
		bool                                                       Reset;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IZ69[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActivationDuration;                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClassFunctionSelectionType
	 * Size -> 0x0010
	 */
	struct FClassFunctionSelectionType
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                Function;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LocomotionActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FLocomotionActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.SqueakyWheelEnabledEvent
	 * Size -> 0x0001
	 */
	struct FSqueakyWheelEnabledEvent
	{
	public:
		bool                                                       SqueakyWheelEnabled;                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.UseSingleStickCameraToggleModeChangedEvent
	 * Size -> 0x0001
	 */
	struct FUseSingleStickCameraToggleModeChangedEvent
	{
	public:
		EToggleOrHoldMode                                          UseSingleStickCameraToggleMode;                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UseSingleStickChangedEvent
	 * Size -> 0x0001
	 */
	struct FUseSingleStickChangedEvent
	{
	public:
		EUseSingleStick                                            UseSingleStick;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PushToTalkModeChangedEvent
	 * Size -> 0x0001
	 */
	struct FPushToTalkModeChangedEvent
	{
	public:
		EToggleOrHoldMode                                          PushToTalkMode;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ResetAutoCentreLookEvent
	 * Size -> 0x0001
	 */
	struct FResetAutoCentreLookEvent
	{
	public:
		unsigned char                                              UnknownData_VJ3D[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StartCameraFadeRpc
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FStartCameraFadeRpc : public FBoxedRpc
	{
	public:
		float                                                      FromAlpha;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ToAlpha;                                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      FadeTimeInSeconds;                                       // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FLinearColor                                        FadeColour;                                              // 0x001C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShouldFadeAudio;                                         // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       HoldFadeWhenFinished;                                    // 0x002D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6BMG[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WalletTransactionRequestRemoteServiceResult
	 * Size -> 0x0030
	 */
	struct FWalletTransactionRequestRemoteServiceResult
	{
	public:
		unsigned char                                              UnknownData_469I[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CinematicQuestNetworkEvent
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FCinematicQuestNetworkEvent : public FNetworkEventStruct
	{
	public:
		struct FCinematicQuestEvent                                BannerData;                                              // 0x0010(0x0080)
	};

	/**
	 * ScriptStruct Athena.PossessionsChestTypeSelectedEvent
	 * Size -> 0x0001
	 */
	struct FPossessionsChestTypeSelectedEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PossessionsChestClosedEvent
	 * Size -> 0x0001
	 */
	struct FPossessionsChestClosedEvent
	{
	public:
		EPossessionsChestType                                      PossessionsChestType;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayModeVariantResponse
	 * Size -> 0x0004
	 */
	struct FPlayModeVariantResponse
	{
	public:
		int32_t                                                    Variant;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestPlayModeVariant
	 * Size -> 0x0001
	 */
	struct FRequestPlayModeVariant
	{
	public:
		unsigned char                                              UnknownData_ZLHZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPopUpQueueServicePaused
	 * Size -> 0x0008
	 */
	struct FEventPopUpQueueServicePaused
	{
	public:
		bool                                                       Paused;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6VRW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Reason;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetArenaIslandBanners
	 * Size -> 0x0004
	 */
	struct FSetArenaIslandBanners
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetAdventureIslandBanners
	 * Size -> 0x0004
	 */
	struct FSetAdventureIslandBanners
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NarrationStateRequestEvent
	 * Size -> 0x0001
	 */
	struct FNarrationStateRequestEvent
	{
	public:
		unsigned char                                              UnknownData_7LEP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NarrationStateEvent
	 * Size -> 0x0001
	 */
	struct FNarrationStateEvent
	{
	public:
		bool                                                       IsEnabled;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.NarrationRequestEvent
	 * Size -> 0x0010
	 */
	struct FNarrationRequestEvent
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetToastHoldDurationMultiplier
	 * Size -> 0x0004
	 */
	struct FSetToastHoldDurationMultiplier
	{
	public:
		float                                                      Multiplier;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SetNarrateToasts
	 * Size -> 0x0001
	 */
	struct FSetNarrateToasts
	{
	public:
		bool                                                       IsEnabled;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SetScreenSpaceTooltips
	 * Size -> 0x0001
	 */
	struct FSetScreenSpaceTooltips
	{
	public:
		bool                                                       IsEnabled;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SetNotificationScale
	 * Size -> 0x0004
	 */
	struct FSetNotificationScale
	{
	public:
		float                                                      ScaleValue;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SendMarketingOptInResponse
	 * Size -> 0x0001
	 */
	struct FSendMarketingOptInResponse
	{
	public:
		bool                                                       OptedIn;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AccessibiltySettingsModalEvent
	 * Size -> 0x0001
	 */
	struct FAccessibiltySettingsModalEvent
	{
	public:
		unsigned char                                              UnknownData_W8Y1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestShowMarketingOptInPopUp
	 * Size -> 0x0001
	 */
	struct FRequestShowMarketingOptInPopUp
	{
	public:
		unsigned char                                              UnknownData_KUNE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestShowGamerCard
	 * Size -> 0x0010
	 */
	struct FRequestShowGamerCard
	{
	public:
		class FString                                              XUID;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSendCapturedKeybind
	 * Size -> 0x0010
	 */
	struct FEventSendCapturedKeybind
	{
	public:
		class FString                                              CapturedKey;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventKeybindCaptureCancelRequest
	 * Size -> 0x0001
	 */
	struct FEventKeybindCaptureCancelRequest
	{
	public:
		unsigned char                                              UnknownData_P8IT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventKeybindCaptureRequest
	 * Size -> 0x0001
	 */
	struct FEventKeybindCaptureRequest
	{
	public:
		EInputControllerType                                       ControllerTypeKeyToExpect;                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFrontendSetSceneVisibility
	 * Size -> 0x0001
	 */
	struct FEventFrontendSetSceneVisibility
	{
	public:
		bool                                                       Visible;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventInGameUISetMigrationMode
	 * Size -> 0x0001
	 */
	struct FEventInGameUISetMigrationMode
	{
	public:
		bool                                                       MigrationModeEnabled;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventToggleNonCrewVoiceMuteState
	 * Size -> 0x0001
	 */
	struct FEventToggleNonCrewVoiceMuteState
	{
	public:
		unsigned char                                              UnknownData_AOSE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventToggleScrambleGamertags
	 * Size -> 0x0001
	 */
	struct FEventToggleScrambleGamertags
	{
	public:
		unsigned char                                              UnknownData_Q54Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventToggleCrewNameplates
	 * Size -> 0x0001
	 */
	struct FEventToggleCrewNameplates
	{
	public:
		unsigned char                                              UnknownData_VMX0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventToggleOtherCrewNameplates
	 * Size -> 0x0001
	 */
	struct FEventToggleOtherCrewNameplates
	{
	public:
		unsigned char                                              UnknownData_VQOS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTogglePhotoMode
	 * Size -> 0x0001
	 */
	struct FEventTogglePhotoMode
	{
	public:
		unsigned char                                              UnknownData_571W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventInGameUISetPhotoMode
	 * Size -> 0x0001
	 */
	struct FEventInGameUISetPhotoMode
	{
	public:
		bool                                                       PhotoModeEnabled;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventHUDSetMousePosition
	 * Size -> 0x0008
	 */
	struct FEventHUDSetMousePosition
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventHUDMouseCursorCentre
	 * Size -> 0x0001
	 */
	struct FEventHUDMouseCursorCentre
	{
	public:
		unsigned char                                              UnknownData_GTZ1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHUDMouseFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventHUDMouseFocusRequest
	{
	public:
		bool                                                       RequestFocus;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventHUDScriptingReady
	 * Size -> 0x0001
	 */
	struct FEventHUDScriptingReady
	{
	public:
		unsigned char                                              UnknownData_ADW1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipNameTextboxTextFromVirtualKeyboard
	 * Size -> 0x0010
	 */
	struct FEventShipNameTextboxTextFromVirtualKeyboard
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TextboxTextFromVirtualKeyboard
	 * Size -> 0x0010
	 */
	struct FTextboxTextFromVirtualKeyboard
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPetNameTextboxTextFromVirtualKeyboard
	 * Size -> 0x0010
	 */
	struct FEventPetNameTextboxTextFromVirtualKeyboard
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventChatboxTextFromVirtualKeyboard
	 * Size -> 0x0010
	 */
	struct FEventChatboxTextFromVirtualKeyboard
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerOpenChatbox
	 * Size -> 0x0001
	 */
	struct FEventPlayerOpenChatbox
	{
	public:
		unsigned char                                              UnknownData_HDHA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerOpenQuickMenu
	 * Size -> 0x0001
	 */
	struct FEventPlayerOpenQuickMenu
	{
	public:
		unsigned char                                              UnknownData_STZG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NavigateToMenuEvent
	 * Size -> 0x0001
	 */
	struct FNavigateToMenuEvent
	{
	public:
		EMenuNavigationAction                                      Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerOpenEscapeMenu
	 * Size -> 0x0001
	 */
	struct FEventPlayerOpenEscapeMenu
	{
	public:
		unsigned char                                              UnknownData_YDIX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventInGameBlurRequest
	 * Size -> 0x0001
	 */
	struct FEventInGameBlurRequest
	{
	public:
		bool                                                       ShouldBlurGame;                                          // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventShipNameTextboxFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventShipNameTextboxFocusRequest
	{
	public:
		bool                                                       ShouldFocusShipNameTextbox;                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TextboxFocusRequest
	 * Size -> 0x0001
	 */
	struct FTextboxFocusRequest
	{
	public:
		bool                                                       ShouldFocusTextbox;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPetNameTextboxFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventPetNameTextboxFocusRequest
	{
	public:
		bool                                                       ShouldFocusPetNameTextbox;                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventChatboxFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventChatboxFocusRequest
	{
	public:
		bool                                                       ShouldFocusChatbox;                                      // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventInGameUIFocusRequest
	 * Size -> 0x0001
	 */
	struct FEventInGameUIFocusRequest
	{
	public:
		bool                                                       ShouldFocusUI;                                           // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.UIWhatsNewAvailableArticlesEvent
	 * Size -> 0x0010
	 */
	struct FUIWhatsNewAvailableArticlesEvent
	{
	public:
		TArray<class FString>                                      Articles;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UIAdventuresDataErrorEvent
	 * Size -> 0x0020
	 */
	struct FUIAdventuresDataErrorEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UILiveCampaignDataErrorEvent
	 * Size -> 0x0020
	 */
	struct FUILiveCampaignDataErrorEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UISeasonsDataErrorEvent
	 * Size -> 0x0020
	 */
	struct FUISeasonsDataErrorEvent
	{
	public:
		class FString                                              ErrorMessage;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ErrorStack;                                              // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIPremiumStoreItemInteractEvent
	 * Size -> 0x0060
	 */
	struct FUIPremiumStoreItemInteractEvent
	{
	public:
		class FString                                              CurrencyUsed;                                            // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              EngagementOutcome;                                       // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemCost;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemName;                                                // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PageName;                                                // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIPremiumStorePanelHighlightEvent
	 * Size -> 0x0038
	 */
	struct FUIPremiumStorePanelHighlightEvent
	{
	public:
		class FString                                              CurrentPage;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CurrentPanel;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		float                                                      TimeOnPanel;                                             // 0x0030(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S6CN[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIPremiumStorePageTransitionEvent
	 * Size -> 0x0048
	 */
	struct FUIPremiumStorePageTransitionEvent
	{
	public:
		class FString                                              CurrentPage;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousHighlight;                                       // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousPage;                                            // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              SessionId;                                               // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		float                                                      TimeOnPreviousPage;                                      // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FMTV[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UIPremiumStoreOpenEvent
	 * Size -> 0x0018
	 */
	struct FUIPremiumStoreOpenEvent
	{
	public:
		bool                                                       IsFrontend;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3PWS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SessionId;                                               // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UIScreenTransitionEvent
	 * Size -> 0x0020
	 */
	struct FUIScreenTransitionEvent
	{
	public:
		class FString                                              CurrentScreen;                                           // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
		class FString                                              PreviousScreen;                                          // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OnHUDDestruction
	 * Size -> 0x0001
	 */
	struct FOnHUDDestruction
	{
	public:
		unsigned char                                              UnknownData_WV8Q[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OfferPurchasedEvent
	 * Size -> 0x01E8
	 */
	struct FOfferPurchasedEvent
	{
	public:
		struct FShopOffer                                          Purchase;                                                // 0x0000(0x01E0) Edit, BlueprintVisible
		class FName                                                NPCName;                                                 // 0x01E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LaunchableProjectileDamageEvent
	 * Size -> 0x0018
	 */
	struct FLaunchableProjectileDamageEvent
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              ProjectileActor;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              ActorHit;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHealthStageChanged
	 * Size -> 0x0004
	 */
	struct FEventHealthStageChanged
	{
	public:
		int32_t                                                    CurrentHealthStage;                                      // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRecoveredMaxHealth
	 * Size -> 0x0001
	 */
	struct FEventRecoveredMaxHealth
	{
	public:
		unsigned char                                              UnknownData_0SO5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHealthChangeContinuousEnd
	 * Size -> 0x0001
	 */
	struct FEventHealthChangeContinuousEnd
	{
	public:
		unsigned char                                              UnknownData_018Z[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHealthChangeContinuousStart
	 * Size -> 0x0008
	 */
	struct FEventHealthChangeContinuousStart
	{
	public:
		float                                                      CurrentHealth;                                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      ChangeRate;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHealthChangeAllContinuousChangesRemoved
	 * Size -> 0x0001
	 */
	struct FEventHealthChangeAllContinuousChangesRemoved
	{
	public:
		unsigned char                                              UnknownData_6X8G[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHealthChangeContinuousRemoved
	 * Size -> 0x0001
	 */
	struct FEventHealthChangeContinuousRemoved
	{
	public:
		EHealthChangedReason                                       Reason;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventHealthChangeContinuousApplied
	 * Size -> 0x0008
	 */
	struct FEventHealthChangeContinuousApplied
	{
	public:
		float                                                      ChangeDelta;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CHLC[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HealthChange
	 * Size -> 0x0040
	 */
	struct FHealthChange
	{
	public:
		float                                                      From;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      To;                                                      // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHealthChangedReason                                       Reason;                                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_G6JX[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              DirectInstigator;                                        // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              RootInstigator;                                          // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               IncidentId;                                              // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector_NetQuantize10                               DirectInstigatorLocation;                                // 0x0030(0x000C)
		unsigned char                                              UnknownData_P1IK[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHealthChanged
	 * Size -> 0x0048
	 */
	struct FEventHealthChanged
	{
	public:
		struct FHealthChange                                       ChangePayload;                                           // 0x0000(0x0040) BlueprintVisible, BlueprintReadOnly, Protected
		bool                                                       IsLocalPrediction;                                       // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected
		bool                                                       IsRepetitionOfPrediction;                                // 0x0041(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected
		unsigned char                                              UnknownData_VIUB[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TeleportActionStateConstructionInfo
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	struct FTeleportActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FTeleportLocation                                   TeleportLocationOverride;                                // 0x0030(0x0030) ContainsInstancedReference
		ETeleportActionStateFadeType                               TeleportFadeType;                                        // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3HW0[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StreamInLevelId;                                         // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    StreamOutLevelId;                                        // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETeleportActionStateConditions                             TeleportConditions;                                      // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldPlayTeleportSFX;                                   // 0x006D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_Q4VE[0x1];                                   // 0x006E(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ShouldWaitForLoadout;                                    // 0x006F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       ShouldWaitForEntitlements;                               // 0x0070(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CallFinishSpawningOnEnd;                                 // 0x0071(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		ETeleportActionStateReason                                 Reason;                                                  // 0x0072(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETeleportTransformSpace                                    TeleportSpace;                                           // 0x0073(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T24M[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTeleportLocationDestroyed
	 * Size -> 0x0030
	 */
	struct FEventTeleportLocationDestroyed
	{
	public:
		struct FTeleportLocation                                   TeleportLocation;                                        // 0x0000(0x0030) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.EventTeleportLocationCreated
	 * Size -> 0x0030
	 */
	struct FEventTeleportLocationCreated
	{
	public:
		struct FTeleportLocation                                   TeleportLocation;                                        // 0x0000(0x0030) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.EventFinishedSpawning
	 * Size -> 0x0018
	 */
	struct FEventFinishedSpawning
	{
	public:
		unsigned char                                              UnknownData_0JWG[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECharacterType                                             SpawnType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0SLP[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFiredFromActorEnd
	 * Size -> 0x0008
	 */
	struct FEventFiredFromActorEnd
	{
	public:
		unsigned char                                              UnknownData_LW8A[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFiredFromActorStart
	 * Size -> 0x0008
	 */
	struct FEventFiredFromActorStart
	{
	public:
		unsigned char                                              UnknownData_Q4H9[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRequestRespawn
	 * Size -> 0x0048
	 */
	struct FEventRequestRespawn
	{
	public:
		class APawn*                                               Character;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterType                                             RespawnType;                                             // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HQAD[0x3F];                                  // 0x0009(0x003F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SetFirstPersonMeshVisibleEvent
	 * Size -> 0x0001
	 */
	struct FSetFirstPersonMeshVisibleEvent
	{
	public:
		bool                                                       IsVisible;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventCharacterKnockedBack
	 * Size -> 0x0008
	 */
	struct FEventCharacterKnockedBack
	{
	public:
		class FName                                                RumbleTag;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterDespawned
	 * Size -> 0x0008
	 */
	struct FEventCharacterDespawned
	{
	public:
		class ACharacter*                                          Character;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterSpawned
	 * Size -> 0x0008
	 */
	struct FEventCharacterSpawned
	{
	public:
		class ACharacter*                                          Character;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterEndTeleport
	 * Size -> 0x0010
	 */
	struct FEventCharacterEndTeleport
	{
	public:
		class AActor*                                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayOnTeleportEndSounds;                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		ETeleportNotificationSource                                TeleportNotificationSource;                              // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IGAR[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterBeginTeleport
	 * Size -> 0x0010
	 */
	struct FEventCharacterBeginTeleport
	{
	public:
		class AActor*                                              Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayOnTeleportBeginSounds;                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		ETeleportNotificationSource                                TeleportNotificationSource;                              // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WTXR[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterMovementModeChanged
	 * Size -> 0x0004
	 */
	struct FEventCharacterMovementModeChanged
	{
	public:
		EMovementMode                                              PreviousMovementMode;                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EMovementMode                                              NewMovementMode;                                         // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              PreviousCustomMovementMode;                              // 0x0002(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              NewCustomMovementMode;                                   // 0x0003(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterInert
	 * Size -> 0x0001
	 */
	struct FEventCharacterInert
	{
	public:
		bool                                                       bIsInert;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerInteractedWithObject
	 * Size -> 0x0018
	 */
	struct FEventPlayerInteractedWithObject
	{
	public:
		unsigned char                                              UnknownData_DEIP[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerStatePawnUnPossessed
	 * Size -> 0x0010
	 */
	struct FEventPlayerStatePawnUnPossessed
	{
	public:
		class APlayerState*                                        PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class APawn*                                               UnPossessedPawn;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerStatePawnPossessed
	 * Size -> 0x0018
	 */
	struct FEventPlayerStatePawnPossessed
	{
	public:
		class APlayerState*                                        PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class APawn*                                               PossessedPawn;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsLocalPlayer;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_5LZU[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRemovePlayerOnLogOut
	 * Size -> 0x0008
	 */
	struct FEventRemovePlayerOnLogOut
	{
	public:
		class AController*                                         Controller;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OtherPartyTelemetryFragmentInput
	 * Size -> 0x0008
	 */
	struct FOtherPartyTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class AActor>                               OtherParty;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.OtherPartyTelemetryFragment
	 * Size -> 0x0030
	 */
	struct FOtherPartyTelemetryFragment
	{
	public:
		class FString                                              OtherPartyType;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              OtherPartyId;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   OtherPartyPossessCount;                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_70HW[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     OtherPartySecondsSinceSpawned;                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerLeftProximity
	 * Size -> 0x0008
	 */
	struct FEventPlayerLeftProximity
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredProximity
	 * Size -> 0x0008
	 */
	struct FEventPlayerEnteredProximity
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TrackedActorEntry
	 * Size -> 0x0030
	 */
	struct FTrackedActorEntry
	{
	public:
		unsigned char                                              UnknownData_AJNQ[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TrackedActorTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FTrackedActorTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_8ZPU[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_J60G[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TrackedActorTelemetryFragment
	 * Size -> 0x0018
	 */
	struct FTrackedActorTelemetryFragment
	{
	public:
		struct FJsonObjectWrapper                                  Json;                                                    // 0x0000(0x0018)
	};

	/**
	 * ScriptStruct Athena.EventCustomizableActorChanged
	 * Size -> 0x0010
	 */
	struct FEventCustomizableActorChanged
	{
	public:
		class AActor*                                              CustomizableActor;                                       // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       StripOverrideMaterials;                                  // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FF4U[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementUpdatedEvent
	 * Size -> 0x0008
	 */
	struct FShipAnnouncementUpdatedEvent
	{
	public:
		class AActor*                                              ShipActor;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationSavedLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FShipCustomizationSavedLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_BU2P[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationLoadoutUpdatedEvent
	 * Size -> 0x0010
	 */
	struct FShipCustomizationLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_1T6G[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipMilestoneEntitlementsUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FShipMilestoneEntitlementsUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_XDRS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCapstanDamageLevelChanged
	 * Size -> 0x0010
	 */
	struct FEventCapstanDamageLevelChanged
	{
	public:
		class AActor*                                              Capstan;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_6BGH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCapstanUsageEnd
	 * Size -> 0x0008
	 */
	struct FEventPlayerCapstanUsageEnd
	{
	public:
		class AActor*                                              ObjectBeingUsed;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerCapstanUsageStart
	 * Size -> 0x0008
	 */
	struct FEventPlayerCapstanUsageStart
	{
	public:
		class AActor*                                              ObjectBeingUsed;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCapstanObjectDestroyed
	 * Size -> 0x0001
	 */
	struct FEventCapstanObjectDestroyed
	{
	public:
		unsigned char                                              UnknownData_GZDU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCrewReleasedCapstan
	 * Size -> 0x0010
	 */
	struct FEventCrewReleasedCapstan
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventCapstanReleased
	 * Size -> 0x0001
	 */
	struct FEventCapstanReleased
	{
	public:
		unsigned char                                              UnknownData_44EA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCapstanFullyLowered
	 * Size -> 0x0001
	 */
	struct FEventCapstanFullyLowered
	{
	public:
		unsigned char                                              UnknownData_20K2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCapstanFullyRaised
	 * Size -> 0x0001
	 */
	struct FEventCapstanFullyRaised
	{
	public:
		unsigned char                                              UnknownData_RDNB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCapstanStoppedMoving
	 * Size -> 0x0001
	 */
	struct FEventCapstanStoppedMoving
	{
	public:
		unsigned char                                              UnknownData_92OO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCapstanStartedMoving
	 * Size -> 0x0001
	 */
	struct FEventCapstanStartedMoving
	{
	public:
		unsigned char                                              UnknownData_7KR5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipExitedSafeZone
	 * Size -> 0x0008
	 */
	struct FEventShipExitedSafeZone
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipEnteredSafeZone
	 * Size -> 0x0010
	 */
	struct FEventShipEnteredSafeZone
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FP8N[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipExitedWater
	 * Size -> 0x0001
	 */
	struct FEventShipExitedWater
	{
	public:
		unsigned char                                              UnknownData_RTA4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipEnteredWater
	 * Size -> 0x0001
	 */
	struct FEventShipEnteredWater
	{
	public:
		unsigned char                                              UnknownData_BE28[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipSailedDistance
	 * Size -> 0x0010
	 */
	struct FEventShipSailedDistance
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceSailedMetres;                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_7PP2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipWaterAddedOnOffEvent
	 * Size -> 0x0010
	 */
	struct FEventShipWaterAddedOnOffEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      WaterAdded;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      PrevWaterAdded;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipSetSail
	 * Size -> 0x0008
	 */
	struct FEventShipSetSail
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipBecameUseless
	 * Size -> 0x0008
	 */
	struct FEventShipBecameUseless
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipDestroyed
	 * Size -> 0x0008
	 */
	struct FEventShipDestroyed
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipBuilt
	 * Size -> 0x0008
	 */
	struct FEventShipBuilt
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipCreated
	 * Size -> 0x0008
	 */
	struct FEventShipCreated
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipRegionChanged
	 * Size -> 0x0018
	 */
	struct FEventShipRegionChanged
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShipRegion                                                ShipRegion;                                              // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EShipRegion                                                PreviousShipRegion;                                      // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GT6H[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCurrentShipChanged
	 * Size -> 0x0008
	 */
	struct FEventCurrentShipChanged
	{
	public:
		class AActor*                                              CurrentShip;                                             // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipTopDeckUnblocked
	 * Size -> 0x0010
	 */
	struct FEventShipTopDeckUnblocked
	{
	public:
		struct FGuid                                               BlockerId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventShipTopDeckBlocked
	 * Size -> 0x0010
	 */
	struct FEventShipTopDeckBlocked
	{
	public:
		struct FGuid                                               BlockerId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventShipHasBeenSpotted
	 * Size -> 0x0018
	 */
	struct FEventShipHasBeenSpotted
	{
	public:
		class AActor*                                              SpottingPlayer;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               SpottedShipId;                                           // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipPartChangedEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FShipPartChangedEvent : public FNetworkEventStruct
	{
	public:
		class FString                                              PartId;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EntitlementId;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipIsSafeForMeshMemoryConstrainedSystemsToStart
	 * Size -> 0x0001
	 */
	struct FEventShipIsSafeForMeshMemoryConstrainedSystemsToStart
	{
	public:
		unsigned char                                              UnknownData_8SE5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventShipStoppedBurning
	 * Size -> 0x0008
	 */
	struct FEventShipStoppedBurning
	{
	public:
		uint64_t                                                   TimeSpentOnFire;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipLightStateChange
	 * Size -> 0x0010
	 */
	struct FEventShipLightStateChange
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Light;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCrewShipManifestChanged
	 * Size -> 0x0010
	 */
	struct FEventCrewShipManifestChanged
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Manifest;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSinkingShipTeleportTime
	 * Size -> 0x0008
	 */
	struct FEventSinkingShipTeleportTime
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFinishedSinking
	 * Size -> 0x0008
	 */
	struct FEventFinishedSinking
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventBeginningToSink
	 * Size -> 0x0008
	 */
	struct FEventBeginningToSink
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPreShipSink
	 * Size -> 0x0001
	 */
	struct FEventPreShipSink
	{
	public:
		unsigned char                                              UnknownData_LTNK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventExitedShip
	 * Size -> 0x0010
	 */
	struct FEventExitedShip
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventEnteredShip
	 * Size -> 0x0010
	 */
	struct FEventEnteredShip
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventWheelDamageLevelChanged
	 * Size -> 0x0010
	 */
	struct FEventWheelDamageLevelChanged
	{
	public:
		class AActor*                                              Wheel;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_S044[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWheelTurningThresholdExceeded
	 * Size -> 0x0001
	 */
	struct FEventWheelTurningThresholdExceeded
	{
	public:
		unsigned char                                              UnknownData_VDVL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFightingWheelAgainstTurbulenceStop
	 * Size -> 0x0001
	 */
	struct FEventFightingWheelAgainstTurbulenceStop
	{
	public:
		unsigned char                                              UnknownData_9B57[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFightingWheelAgainstTurbulenceStart
	 * Size -> 0x0001
	 */
	struct FEventFightingWheelAgainstTurbulenceStart
	{
	public:
		unsigned char                                              UnknownData_L0EP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWheelCentered
	 * Size -> 0x0001
	 */
	struct FEventWheelCentered
	{
	public:
		unsigned char                                              UnknownData_CMAS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWheelStoppedMoving
	 * Size -> 0x0001
	 */
	struct FEventWheelStoppedMoving
	{
	public:
		bool                                                       IsAtEnd;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventWheelStartedMoving
	 * Size -> 0x0001
	 */
	struct FEventWheelStartedMoving
	{
	public:
		unsigned char                                              UnknownData_MHH4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipBaseTelemetryFragmentInput
	 * Size -> 0x0008
	 */
	struct FShipBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		TWeakObjectPtr<class AActor>                               ShipActor;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ShipBaseTelemetryFragment
	 * Size -> 0x0080
	 */
	struct FShipBaseTelemetryFragment
	{
	public:
		class FString                                              ShipObjectId;                                            // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             Position;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x001C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewSessionId;                                           // 0x002C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ShipId;                                                  // 0x003C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TOIK[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShipSize;                                                // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               CaptainedShipId;                                         // 0x0060(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              CaptainUserId;                                           // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AllianceJoinStatusChangedEvent
	 * Size -> 0x0001
	 */
	struct FAllianceJoinStatusChangedEvent
	{
	public:
		unsigned char                                              UnknownData_SXC4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllianceStatusChangedNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FAllianceStatusChangedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterConcealedInLoadableEnd
	 * Size -> 0x0001
	 */
	struct FEventCharacterConcealedInLoadableEnd
	{
	public:
		unsigned char                                              UnknownData_V7E3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterConcealedInLoadableBegin
	 * Size -> 0x0010
	 */
	struct FEventCharacterConcealedInLoadableBegin
	{
	public:
		unsigned char                                              UnknownData_4GL7[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableItemUnloadingEnd
	 * Size -> 0x0001
	 */
	struct FEventLoadableItemUnloadingEnd
	{
	public:
		unsigned char                                              UnknownData_Q34T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableItemUnloadingBegin
	 * Size -> 0x0001
	 */
	struct FEventLoadableItemUnloadingBegin
	{
	public:
		unsigned char                                              UnknownData_XL3L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableItemLoadingEnd
	 * Size -> 0x0001
	 */
	struct FEventLoadableItemLoadingEnd
	{
	public:
		unsigned char                                              UnknownData_JSCA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableItemLoadingBegin
	 * Size -> 0x0001
	 */
	struct FEventLoadableItemLoadingBegin
	{
	public:
		unsigned char                                              UnknownData_XLK9[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableObjectUnloaded
	 * Size -> 0x0001
	 */
	struct FEventLoadableObjectUnloaded
	{
	public:
		unsigned char                                              UnknownData_H4RJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableObjectLoaded
	 * Size -> 0x0001
	 */
	struct FEventLoadableObjectLoaded
	{
	public:
		unsigned char                                              UnknownData_VAT4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLoadableObjectDestroyed
	 * Size -> 0x0001
	 */
	struct FEventLoadableObjectDestroyed
	{
	public:
		unsigned char                                              UnknownData_LVYW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerCharacterDeath
	 * Size -> 0x0038
	 */
	struct FEventPlayerCharacterDeath
	{
	public:
		class ACharacter*                                          PirateKilled;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FDamageInstance                                     FinalBlowInformation;                                    // 0x0008(0x0030)
	};

	/**
	 * ScriptStruct Athena.EventCharacterDead
	 * Size -> 0x0038
	 */
	struct FEventCharacterDead
	{
	public:
		struct FDamageInstance                                     FinalBlow;                                               // 0x0000(0x0030) BlueprintVisible, BlueprintReadOnly
		ECharacterDeathType                                        DeathType;                                               // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_17SZ[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventKilledCharacter
	 * Size -> 0x0008
	 */
	struct FEventKilledCharacter
	{
	public:
		class AActor*                                              KilledCharacter;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterDeath
	 * Size -> 0x0080
	 */
	struct FEventCharacterDeath
	{
	public:
		struct FDamageInstance                                     DamageInstance;                                          // 0x0000(0x0030)
		unsigned char                                              UnknownData_X6JN[0x50];                                  // 0x0030(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeadActionStateConstructionInfo
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	struct FDeadActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FDamageInstance                                     FinalBlow;                                               // 0x0030(0x0030)
		ECharacterDeathType                                        DeathType;                                               // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ECharacterType                                             RespawnCharacterType;                                    // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5MKH[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActivePlayerActivity
	 * Size -> 0x0010
	 */
	struct FActivePlayerActivity
	{
	public:
		unsigned char                                              UnknownData_MZMT[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRequestSayPhraseWithNonLocalisedArgument
	 * Size -> 0x0020
	 */
	struct FEventRequestSayPhraseWithNonLocalisedArgument
	{
	public:
		class FString                                              PhraseKey;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Argument;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRequestSayPhraseWithArgument
	 * Size -> 0x0020
	 */
	struct FEventRequestSayPhraseWithArgument
	{
	public:
		class FString                                              PhraseKey;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ArgumentKey;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRequestSayPhrase
	 * Size -> 0x0010
	 */
	struct FEventRequestSayPhrase
	{
	public:
		class FString                                              PhraseKey;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RadialActionGroup
	 * Size -> 0x0020
	 */
	struct FRadialActionGroup
	{
	public:
		class URadialAction*                                       PrimaryAction;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class URadialAction*                                       SecondaryAction;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class URadialAction*                                       TertiaryAction;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class URadialAction*                                       QuaternaryAction;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RadialContext
	 * Size -> 0x0018
	 */
	struct FRadialContext
	{
	public:
		unsigned char                                              UnknownData_FIFR[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PushCachedSlotActionEvent
	 * Size -> 0x0040
	 */
	struct FPushCachedSlotActionEvent
	{
	public:
		TArray<class UClass*>                                      NotificationIDs;                                         // 0x0000(0x0010) ZeroConstructor, UObjectWrapper
		unsigned char                                              UnknownData_CFQY[0x30];                                  // 0x0010(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RadialContextChanged
	 * Size -> 0x0002
	 */
	struct FRadialContextChanged
	{
	public:
		unsigned char                                              UnknownData_Z30O[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RadialActionBindings
	 * Size -> 0x0020
	 */
	struct FRadialActionBindings
	{
	public:
		class FName                                                PrimaryActionKeyBinding;                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                SecondaryActionKeyBinding;                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                TertiaryActionKeyBinding;                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                QuaternaryActionKeyBinding;                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.UpdateRadialIconUrls
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FUpdateRadialIconUrls : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_FOYZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ItemUrlCacheList;                                        // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RadialPageChanged
	 * Size -> 0x0000 (FullSize[0x0004] - InheritedSize[0x0004])
	 */
	struct FRadialPageChanged : public FRadialInventoryEvent
	{	};

	/**
	 * ScriptStruct Athena.RadialInventoryCenterUpdated
	 * Size -> 0x0008 (FullSize[0x000C] - InheritedSize[0x0004])
	 */
	struct FRadialInventoryCenterUpdated : public FRadialInventoryEvent
	{
	public:
		float                                                      X;                                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      Y;                                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RadialInventoryClearHighlight
	 * Size -> 0x0000 (FullSize[0x0004] - InheritedSize[0x0004])
	 */
	struct FRadialInventoryClearHighlight : public FRadialInventoryEvent
	{	};

	/**
	 * ScriptStruct Athena.RadialInventorySlotHighlighted
	 * Size -> 0x0004 (FullSize[0x0008] - InheritedSize[0x0004])
	 */
	struct FRadialInventorySlotHighlighted : public FRadialInventoryEvent
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FocusRadialInventorySlot
	 * Size -> 0x0004 (FullSize[0x0008] - InheritedSize[0x0004])
	 */
	struct FFocusRadialInventorySlot : public FRadialInventoryEvent
	{
	public:
		int32_t                                                    SlotIndex;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CanShowQuaternaryActionButton
	 * Size -> 0x003C (FullSize[0x0040] - InheritedSize[0x0004])
	 */
	struct FCanShowQuaternaryActionButton : public FRadialInventoryEvent
	{
	public:
		bool                                                       CanShow;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_MCJT[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Text;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_A47A[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.CanShowTertiaryActionButton
	 * Size -> 0x003C (FullSize[0x0040] - InheritedSize[0x0004])
	 */
	struct FCanShowTertiaryActionButton : public FRadialInventoryEvent
	{
	public:
		bool                                                       CanShow;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ZTDD[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Text;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_CT3B[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.CanShowSecondaryActionButton
	 * Size -> 0x003C (FullSize[0x0040] - InheritedSize[0x0004])
	 */
	struct FCanShowSecondaryActionButton : public FRadialInventoryEvent
	{
	public:
		bool                                                       CanShow;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_7HMN[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Text;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_GR86[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.CanShowPrimaryActionButton
	 * Size -> 0x0004 (FullSize[0x0008] - InheritedSize[0x0004])
	 */
	struct FCanShowPrimaryActionButton : public FRadialInventoryEvent
	{
	public:
		bool                                                       CanShow;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RNPA[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HideRadialInventory
	 * Size -> 0x0004 (FullSize[0x0008] - InheritedSize[0x0004])
	 */
	struct FHideRadialInventory : public FRadialInventoryEvent
	{
	public:
		bool                                                       IsSwitchingToLinkedRadial;                               // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_16Q2[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EnableRadialInventoryMouseControl
	 * Size -> 0x0000 (FullSize[0x0004] - InheritedSize[0x0004])
	 */
	struct FEnableRadialInventoryMouseControl : public FRadialInventoryEvent
	{	};

	/**
	 * ScriptStruct Athena.ClearRadialInventory
	 * Size -> 0x0000 (FullSize[0x0004] - InheritedSize[0x0004])
	 */
	struct FClearRadialInventory : public FRadialInventoryEvent
	{	};

	/**
	 * ScriptStruct Athena.SetRadialTitleText
	 * Size -> 0x003C (FullSize[0x0040] - InheritedSize[0x0004])
	 */
	struct FSetRadialTitleText : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_GY7M[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Text;                                                    // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_N910[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ShowRadialInventory
	 * Size -> 0x0064 (FullSize[0x0068] - InheritedSize[0x0004])
	 */
	struct FShowRadialInventory : public FRadialInventoryEvent
	{
	public:
		unsigned char                                              UnknownData_RV5X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ActionText;                                              // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ABRG[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FRadialActionBindings                               ActionBindings;                                          // 0x0040(0x0020)
		bool                                                       AsLinkedRadial;                                          // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_UR9G[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AttachedToObjectActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	struct FAttachedToObjectActionStateConstructionInfo : public FDockToObjectActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.EventDockableObjectDestroyed
	 * Size -> 0x0001
	 */
	struct FEventDockableObjectDestroyed
	{
	public:
		unsigned char                                              UnknownData_PS7R[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventDockingStateChanged
	 * Size -> 0x0001
	 */
	struct FEventDockingStateChanged
	{
	public:
		unsigned char                                              UnknownData_RY5K[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerDockToObjectEnd
	 * Size -> 0x0018
	 */
	struct FEventPlayerDockToObjectEnd
	{
	public:
		unsigned char                                              ObjectBeingUsed[0x10];                                   // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventPlayerDockToObjectEnd.ObjectBeingUsed
		bool                                                       CanLookAtBeDisabledWhenDockedToObject;                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QA7Q[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerDockToObjectStart
	 * Size -> 0x0018
	 */
	struct FEventPlayerDockToObjectStart
	{
	public:
		unsigned char                                              ObjectBeingUsed[0x10];                                   // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventPlayerDockToObjectStart.ObjectBeingUsed
		bool                                                       CanLookAtBeDisabledWhenDockedToObject;                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_K5L1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUndockedFromObject
	 * Size -> 0x0001
	 */
	struct FEventUndockedFromObject
	{
	public:
		unsigned char                                              UnknownData_WFNY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SecondaryInteractableNoLongerAvailableEvent
	 * Size -> 0x0001
	 */
	struct FSecondaryInteractableNoLongerAvailableEvent
	{
	public:
		unsigned char                                              UnknownData_WRFU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SecondaryInteractableAvailableEvent
	 * Size -> 0x0001
	 */
	struct FSecondaryInteractableAvailableEvent
	{
	public:
		unsigned char                                              UnknownData_YPT1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PrimaryInteractableNoLongerAvailableEvent
	 * Size -> 0x0001
	 */
	struct FPrimaryInteractableNoLongerAvailableEvent
	{
	public:
		unsigned char                                              UnknownData_LXOQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PrimaryInteractableAvailableEvent
	 * Size -> 0x0001
	 */
	struct FPrimaryInteractableAvailableEvent
	{
	public:
		unsigned char                                              UnknownData_H9DN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NarrateInteractablesSettingsEvent
	 * Size -> 0x0003
	 */
	struct FNarrateInteractablesSettingsEvent
	{
	public:
		bool                                                       NarrateInteractableText;                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NarrateInteractableButtons;                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IgnoreDisabledInteractables;                             // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.InteractOnServerRpc
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FInteractOnServerRpc : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Interactable;                                            // 0x0010(0x0014)
		unsigned char                                              UnknownData_VR7R[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              NotificationInputId;                                     // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InteractObjectActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FInteractObjectActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetSubObjectPtr                                    InteractObject;                                          // 0x0030(0x0014)
		unsigned char                                              UnknownData_NUKM[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerFinishedInteractingWithNPCDialog
	 * Size -> 0x0008
	 */
	struct FPlayerFinishedInteractingWithNPCDialog
	{
	public:
		class AActor*                                              Interactee;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStartedInteractingWithNPCDialog
	 * Size -> 0x0001
	 */
	struct FPlayerStartedInteractingWithNPCDialog
	{
	public:
		unsigned char                                              UnknownData_5YTX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStartDialogueOnServer
	 * Size -> 0x0008
	 */
	struct FEventStartDialogueOnServer
	{
	public:
		class AActor*                                              Interactor;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InteractionClosedEvent
	 * Size -> 0x0001
	 */
	struct FInteractionClosedEvent
	{
	public:
		unsigned char                                              UnknownData_W9DE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractionOptionSelectedNonUI
	 * Size -> 0x0028
	 */
	struct FInteractionOptionSelectedNonUI
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              InteractingPlayer;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               InstagatorCrewID;                                        // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    Index;                                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JRRJ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractionOptionSelected
	 * Size -> 0x000C
	 */
	struct FInteractionOptionSelected
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Index;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RequestCloseInteractionEvent
	 * Size -> 0x0001
	 */
	struct FRequestCloseInteractionEvent
	{
	public:
		unsigned char                                              UnknownData_UNC6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractionOption
	 * Size -> 0x0040
	 */
	struct FInteractionOption
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Index;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_46IB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Icon;                                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              IconNarrationText;                                       // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsEnabled;                                               // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2CD5[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractionDefinition
	 * Size -> 0x0020
	 */
	struct FInteractionDefinition
	{
	public:
		class FString                                              Header;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FInteractionOption>                          Options;                                                 // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.UpdateInteractionEvent
	 * Size -> 0x0020
	 */
	struct FUpdateInteractionEvent
	{
	public:
		struct FInteractionDefinition                              Definition;                                              // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.StartInteractionEvent
	 * Size -> 0x0020
	 */
	struct FStartInteractionEvent
	{
	public:
		struct FInteractionDefinition                              Definition;                                              // 0x0000(0x0020)
	};

	/**
	 * ScriptStruct Athena.ItemActionEffectHandle
	 * Size -> 0x0010
	 */
	struct FItemActionEffectHandle
	{
	public:
		unsigned char                                              UnknownData_9FVP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemIsAboutToBeStowed
	 * Size -> 0x0001
	 */
	struct FEventWieldableItemIsAboutToBeStowed
	{
	public:
		unsigned char                                              UnknownData_Y4M3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventItemDroppedOnActor
	 * Size -> 0x0008
	 */
	struct FEventItemDroppedOnActor
	{
	public:
		class AActor*                                              DroppedActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemDropped
	 * Size -> 0x0018
	 */
	struct FEventWieldableItemDropped
	{
	public:
		class UClass*                                              DroppedItemCategory;                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              ContactActor;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DropDistance;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InDeepWater;                                             // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P75K[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventExplosionDidDestroyWieldedItem
	 * Size -> 0x0008
	 */
	struct FEventExplosionDidDestroyWieldedItem
	{
	public:
		class AWieldableItem*                                      DestroyedItem;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LockedWieldableItemCategoriesUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FLockedWieldableItemCategoriesUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_HJ67[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableItemsUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FWieldableItemsUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_88MY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUseAlternateIdle
	 * Size -> 0x0001
	 */
	struct FEventUseAlternateIdle
	{
	public:
		bool                                                       UseAlternateIdle;                                        // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventClientItemUseSpeedScaled
	 * Size -> 0x0008
	 */
	struct FEventClientItemUseSpeedScaled
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       bItemUseSlowed;                                          // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_THBB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemSetIsWielded
	 * Size -> 0x0010
	 */
	struct FEventWieldableItemSetIsWielded
	{
	public:
		class AActor*                                              Wielder;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       bIsWielded;                                              // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       bGettingDropped;                                         // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       bIsUnstashing;                                           // 0x000A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V3QE[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemUseStoppedAndFullyHidden
	 * Size -> 0x0010
	 */
	struct FEventWieldableItemUseStoppedAndFullyHidden
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPerspectiveTypes                                          PerspectiveType;                                         // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_13N6[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemUseStopped
	 * Size -> 0x0018
	 */
	struct FEventWieldableItemUseStopped
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              InputID;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EItemUseStoppedReason                                      ItemUseStoppedReason;                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EActionStateMachineTrackId                                 TrackId;                                                 // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9L52[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemUseStarted
	 * Size -> 0x0030
	 */
	struct FEventWieldableItemUseStarted
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              InputID;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWieldableItemActionVisuals                         Visuals;                                                 // 0x0010(0x0018) BlueprintVisible
		EActionStateMachineTrackId                                 TrackId;                                                 // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4N7W[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableItemUseStartingAndJustMadeVisible
	 * Size -> 0x0010
	 */
	struct FEventWieldableItemUseStartingAndJustMadeVisible
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPerspectiveTypes                                          PerspectiveType;                                         // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_H7JG[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventOneShotUseTriggered
	 * Size -> 0x0028
	 */
	struct FEventOneShotUseTriggered
	{
	public:
		class AActor*                                              Item;                                                    // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              InputID;                                                 // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FWieldableItemActionVisuals                         Visuals;                                                 // 0x0010(0x0018) BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.WieldingParamsAssetLookup
	 * Size -> 0x0018
	 */
	struct FWieldingParamsAssetLookup : public FTableRowBase
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FStringAssetReference                               Params;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PickupObjectActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FPickupObjectActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        PickupableObject;                                        // 0x0030(0x0014)
		unsigned char                                              UnknownData_FX79[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseItemActionStateConstructionInfo
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FUseItemActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        UsableObject;                                            // 0x0030(0x0014)
		unsigned char                                              UnknownData_PL3F[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InputID;                                                 // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventItemConsumed
	 * Size -> 0x0008
	 */
	struct FEventItemConsumed
	{
	public:
		class AActor*                                              Consumer;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ContestBootyItemReleasedEvent
	 * Size -> 0x0001
	 */
	struct FContestBootyItemReleasedEvent
	{
	public:
		unsigned char                                              UnknownData_HQH1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventItemWielded
	 * Size -> 0x0010
	 */
	struct FEventItemWielded
	{
	public:
		class AWieldableItem*                                      WieldedItem;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Wielder;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRemoveItemFromSpawner
	 * Size -> 0x0008
	 */
	struct FEventRemoveItemFromSpawner
	{
	public:
		unsigned char                                              UnknownData_260V[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTransferObjectState
	 * Size -> 0x0018
	 */
	struct FEventTransferObjectState
	{
	public:
		unsigned char                                              Target[0x10];                                            // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventTransferObjectState.Target
		class AActor*                                              TargetActor;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUnhideItem
	 * Size -> 0x0001
	 */
	struct FEventUnhideItem
	{
	public:
		unsigned char                                              UnknownData_9EC5[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventHideItem
	 * Size -> 0x0001
	 */
	struct FEventHideItem
	{
	public:
		unsigned char                                              UnknownData_5XBY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStowComplete
	 * Size -> 0x0001
	 */
	struct FEventStowComplete
	{
	public:
		unsigned char                                              UnknownData_302L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStartStow
	 * Size -> 0x0018
	 */
	struct FEventStartStow
	{
	public:
		unsigned char                                              Object[0x10];                                            // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventStartStow.Object
		bool                                                       FastStow;                                                // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EStowMethod                                                StowMethod;                                              // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LOL4[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPreStartStow
	 * Size -> 0x0001
	 */
	struct FEventPreStartStow
	{
	public:
		EStowMethod                                                StowMethod;                                              // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventVisibleWield
	 * Size -> 0x0001
	 */
	struct FEventVisibleWield
	{
	public:
		unsigned char                                              UnknownData_4VBL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStartWield
	 * Size -> 0x0010
	 */
	struct FEventStartWield
	{
	public:
		unsigned char                                              Object[0x10];                                            // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventStartWield.Object
	};

	/**
	 * ScriptStruct Athena.EventObjectWielded
	 * Size -> 0x0010
	 */
	struct FEventObjectWielded
	{
	public:
		unsigned char                                              Object[0x10];                                            // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventObjectWielded.Object
	};

	/**
	 * ScriptStruct Athena.EventObjectStowed
	 * Size -> 0x0018
	 */
	struct FEventObjectStowed
	{
	public:
		unsigned char                                              Object[0x10];                                            // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventObjectStowed.Object
		bool                                                       FastStow;                                                // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		EStowMethod                                                StowMethod;                                              // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_T3EE[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPickupableObjectPickedUp
	 * Size -> 0x0010
	 */
	struct FEventPickupableObjectPickedUp
	{
	public:
		class APickupableObject*                                   PickupableObject;                                        // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              InteractingPlayer;                                       // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPickupableObjectDropped
	 * Size -> 0x0001
	 */
	struct FEventPickupableObjectDropped
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPickupableObjectDestroyed
	 * Size -> 0x0001
	 */
	struct FEventPickupableObjectDestroyed
	{
	public:
		unsigned char                                              UnknownData_J1GJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseItemNoParamsOnServerRpc
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FUseItemNoParamsOnServerRpc : public FUseItemOnServerRpc
	{	};

	/**
	 * ScriptStruct Athena.EventItemTransmuted
	 * Size -> 0x0008
	 */
	struct FEventItemTransmuted
	{
	public:
		class AItemInfo*                                           NewItem;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventUseItemStopped
	 * Size -> 0x0020
	 */
	struct FEventUseItemStopped
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              ActionSource;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Usable;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EActionStateMachineTrackId                                 TrackToUse;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MWA7[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventUseItemForceStop
	 * Size -> 0x0020
	 */
	struct FEventUseItemForceStop
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              ActionSource;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Usable;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EActionStateMachineTrackId                                 TrackToUse;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4ZM1[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TriggerStopUseEvent
	 * Size -> 0x0020
	 */
	struct FTriggerStopUseEvent
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              ActionSource;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Usable;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EActionStateMachineTrackId                                 TrackToUse;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5G0K[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TriggerStartUseEvent
	 * Size -> 0x0020
	 */
	struct FTriggerStartUseEvent
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		class AActor*                                              ActionSource;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Usable;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EActionStateMachineTrackId                                 TrackToUse;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VV0A[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterStoppedContinuousUse
	 * Size -> 0x0008
	 */
	struct FEventCharacterStoppedContinuousUse
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterStartedContinuousUse
	 * Size -> 0x0008
	 */
	struct FEventCharacterStartedContinuousUse
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterStartedOneShotUse
	 * Size -> 0x0008
	 */
	struct FEventCharacterStartedOneShotUse
	{
	public:
		class UClass*                                              InputID;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAthenaAnimationCurrentAnimationCanBeInterrupted
	 * Size -> 0x0001
	 */
	struct FEventAthenaAnimationCurrentAnimationCanBeInterrupted
	{
	public:
		unsigned char                                              UnknownData_7ULK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemEquipStarted
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemEquipStarted
	{
	public:
		unsigned char                                              UnknownData_JLGQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemEquipBlendFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemEquipBlendFinished
	{
	public:
		unsigned char                                              UnknownData_ZB4H[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemUnequipFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemUnequipFinished
	{
	public:
		unsigned char                                              UnknownData_4XSX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldedItemOutOfContinuousUseStateEntered
	 * Size -> 0x0001
	 */
	struct FEventWieldedItemOutOfContinuousUseStateEntered
	{
	public:
		unsigned char                                              UnknownData_0ZPM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemOutOfUseFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemOutOfUseFinished
	{
	public:
		unsigned char                                              UnknownData_8PPT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemIntoContinuousUseFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemIntoContinuousUseFinished
	{
	public:
		unsigned char                                              UnknownData_O44B[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemContinuousUseStateEntered
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemContinuousUseStateEntered
	{
	public:
		unsigned char                                              UnknownData_H3O8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemOneShotInitialised
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemOneShotInitialised
	{
	public:
		unsigned char                                              UnknownData_LIZ2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemOneShotEntered
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemOneShotEntered
	{
	public:
		unsigned char                                              UnknownData_IUQL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemOneShotFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemOneShotFinished
	{
	public:
		unsigned char                                              UnknownData_TO6N[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemEquipFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemEquipFinished
	{
	public:
		unsigned char                                              UnknownData_DIZD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemStateChanged
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemStateChanged
	{
	public:
		unsigned char                                              UnknownData_QWLA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemComplexOneShotFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemComplexOneShotFinished
	{
	public:
		unsigned char                                              UnknownData_AFS3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemBlockingFeedbackFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemBlockingFeedbackFinished
	{
	public:
		unsigned char                                              UnknownData_WSGX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationWieldedItemBlockingFinished
	 * Size -> 0x0001
	 */
	struct FEventAnimationWieldedItemBlockingFinished
	{
	public:
		unsigned char                                              UnknownData_JO2V[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWieldableStashedToStashPoint
	 * Size -> 0x0010
	 */
	struct FEventWieldableStashedToStashPoint
	{
	public:
		class UPrimitiveComponent*                                 StashPointAttachParent;                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Visible;                                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_S4ES[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WieldableItemFirstTimeEquipRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FWieldableItemFirstTimeEquipRpc : public FBoxedRpc
	{
	public:
		class UWwiseEvent*                                         FirstTimeEquipSfx;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventExposedToRainChanged
	 * Size -> 0x0001
	 */
	struct FEventExposedToRainChanged
	{
	public:
		bool                                                       IsExposedToRain;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventWithinRainZoneChanged
	 * Size -> 0x0001
	 */
	struct FEventWithinRainZoneChanged
	{
	public:
		bool                                                       IsWithinRainZone;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.WaterModifierDrowningParams
	 * Size -> 0x0030
	 */
	struct FWaterModifierDrowningParams
	{
	public:
		struct FBlendableDrowningParams                            BlendableDrowningParams;                                 // 0x0000(0x0028)
		unsigned char                                              UnknownData_VA87[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWaterAmountChanged
	 * Size -> 0x0008
	 */
	struct FEventWaterAmountChanged
	{
	public:
		float                                                      NewWaterAmount;                                          // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      NewRelativeWaterHeight;                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSubmergedStateChanged
	 * Size -> 0x0001
	 */
	struct FEventSubmergedStateChanged
	{
	public:
		ESubmergedState                                            SubmergedState;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerSuperheatedWaterZoneChanged
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerSuperheatedWaterZoneChanged
	{
	public:
		bool                                                       IsInSuperheatedWaterZone;                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerViewUnderWaterStateChanged
	 * Size -> 0x0001
	 */
	struct FEventPlayerViewUnderWaterStateChanged
	{
	public:
		bool                                                       NewUnderWaterState;                                      // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.IntentSignChangedEvent
	 * Size -> 0x0004
	 */
	struct FIntentSignChangedEvent
	{
	public:
		int32_t                                                    NewIntentSign;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IntentChangedEvent
	 * Size -> 0x0004
	 */
	struct FIntentChangedEvent
	{
	public:
		float                                                      NewIntent;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClamberActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
	 */
	struct FClamberActionStateConstructionInfo : public FDockToObjectActionStateConstructionInfo
	{
	public:
		float                                                      NormalisedInteractionWidth;                              // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              ClimbId;                                                 // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8PPO[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderBlendParams                                  ClamberBlendParams;                                      // 0x0050(0x000C)
		unsigned char                                              UnknownData_OCGB[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClamberEndEvent
	 * Size -> 0x0001
	 */
	struct FClamberEndEvent
	{
	public:
		unsigned char                                              UnknownData_UWGL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClamberBeginEvent
	 * Size -> 0x000C
	 */
	struct FClamberBeginEvent
	{
	public:
		struct FLadderBlendParams                                  ClamberBlendParams;                                      // 0x0000(0x000C)
	};

	/**
	 * ScriptStruct Athena.EventPlayerReliquishedControlOfControllable
	 * Size -> 0x0008
	 */
	struct FEventPlayerReliquishedControlOfControllable
	{
	public:
		class AActor*                                              ControllableObject;                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerTakenControlOfControllable
	 * Size -> 0x0008
	 */
	struct FEventPlayerTakenControlOfControllable
	{
	public:
		class AActor*                                              ControllableObject;                                      // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StartedUndockingFromControllableObjectEvent
	 * Size -> 0x0001
	 */
	struct FStartedUndockingFromControllableObjectEvent
	{
	public:
		unsigned char                                              UnknownData_M7JY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientRequestExitControlObjectActionStateNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FClientRequestExitControlObjectActionStateNetworkEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.TakeControlActionStateConstructionInfo
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FTakeControlActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		unsigned char                                              ControlledObject[0x10];                                  // 0x0030(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.TakeControlActionStateConstructionInfo.ControlledObject
	};

	/**
	 * ScriptStruct Athena.EventDockedToObject
	 * Size -> 0x0001
	 */
	struct FEventDockedToObject
	{
	public:
		EControllableObjectType                                    ObjectType;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventRelinquishedControlOfObject
	 * Size -> 0x0008
	 */
	struct FEventRelinquishedControlOfObject
	{
	public:
		class UObject*                                             RelinquishedObject;                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventTakenControlOfObject
	 * Size -> 0x0018
	 */
	struct FEventTakenControlOfObject
	{
	public:
		unsigned char                                              ControlledObject[0x10];                                  // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventTakenControlOfObject.ControlledObject
		EControllableObjectType                                    ControllableType;                                        // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RNVG[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveMountpointComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveMountpointComponentState
	{
	public:
		class UMountpointComponent*                                Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MountpointParamsDataAssetByFeature
	 * Size -> 0x0010
	 */
	struct FMountpointParamsDataAssetByFeature
	{
	public:
		class FName                                                FeatureName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UMountpointParamsDataAsset*                          MountpointParamsDataAsset;                               // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EquipTrinketOnServerLoadoutRpc
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FEquipTrinketOnServerLoadoutRpc : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    TrinketLoadoutComponent;                                 // 0x0010(0x0014)
		unsigned char                                              UnknownData_FDEP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TrinketToEquip;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		int32_t                                                    LocationIndex;                                           // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       ShouldVerifyCaptainsPermissions;                         // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AS11[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMountedItemFullyInterpolatedToMountpoint
	 * Size -> 0x0001
	 */
	struct FEventMountedItemFullyInterpolatedToMountpoint
	{
	public:
		unsigned char                                              UnknownData_N4H1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UnmountedFromMountpointEvent
	 * Size -> 0x0020
	 */
	struct FUnmountedFromMountpointEvent
	{
	public:
		unsigned char                                              UnknownData_MSI3[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MountCompleteEvent
	 * Size -> 0x0018
	 */
	struct FMountCompleteEvent
	{
	public:
		class AActor*                                              MountedToActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              MountedActor;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              MountedByActor;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MountedOnMountpointEvent
	 * Size -> 0x0020
	 */
	struct FMountedOnMountpointEvent
	{
	public:
		unsigned char                                              UnknownData_WTN3[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSetMountpointLocationInUseForUI
	 * Size -> 0x0038
	 */
	struct FEventSetMountpointLocationInUseForUI
	{
	public:
		unsigned char                                              UnknownData_FH33[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UnequipAllTrinketsOfClassOnServerLoadoutRpc
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FUnequipAllTrinketsOfClassOnServerLoadoutRpc : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    TrinketLoadoutComponent;                                 // 0x0010(0x0014)
		unsigned char                                              UnknownData_D30O[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TrinketToUnequip;                                        // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       ShouldVerifyCaptainsPermissions;                         // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_444E[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TransitionLadderEndEvent
	 * Size -> 0x0001
	 */
	struct FTransitionLadderEndEvent
	{
	public:
		ELadderTransitionMode                                      LadderTransitionMode;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TransitionLadderBeginEvent
	 * Size -> 0x0020
	 */
	struct FTransitionLadderBeginEvent
	{
	public:
		ELadderTransitionMode                                      LadderTransitionMode;                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_CFCB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLadderDefinition                                   LadderDefinition;                                        // 0x0004(0x001C)
	};

	/**
	 * ScriptStruct Athena.UseLadderUpdateIntentEvent
	 * Size -> 0x0004
	 */
	struct FUseLadderUpdateIntentEvent
	{
	public:
		unsigned char                                              UnknownData_7U24[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseLadderUpdateHeightEvent
	 * Size -> 0x0008
	 */
	struct FUseLadderUpdateHeightEvent
	{
	public:
		unsigned char                                              UnknownData_RM2B[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseLadderEndEvent
	 * Size -> 0x0001
	 */
	struct FUseLadderEndEvent
	{
	public:
		unsigned char                                              UnknownData_97JR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.UseLadderBeginEvent
	 * Size -> 0x001C
	 */
	struct FUseLadderBeginEvent
	{
	public:
		struct FLadderDefinition                                   LadderDefinition;                                        // 0x0000(0x001C)
	};

	/**
	 * ScriptStruct Athena.InvalidFireRequestDetected
	 * Size -> 0x0010
	 */
	struct FInvalidFireRequestDetected
	{
	public:
		class UObject*                                             RequestingObject;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_SQ7K[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestAuthoritativeFire
	 * Size -> 0x0020
	 */
	struct FRequestAuthoritativeFire
	{
	public:
		class UObject*                                             RequestingObject;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_B0ZX[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackProcessorInterrupted
	 * Size -> 0x0001
	 */
	struct FEventMeleeAttackProcessorInterrupted
	{
	public:
		unsigned char                                              UnknownData_Q6MZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMeleeAttackStarted
	 * Size -> 0x0008
	 */
	struct FEventMeleeAttackStarted
	{
	public:
		class UMeleeAttackDataAsset*                               AttackData;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerNameOverridesLoaded
	 * Size -> 0x0001
	 */
	struct FEventPlayerNameOverridesLoaded
	{
	public:
		unsigned char                                              UnknownData_3UM6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventImpactVfxSpawned
	 * Size -> 0x0001
	 */
	struct FEventImpactVfxSpawned
	{
	public:
		unsigned char                                              UnknownData_FED1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnExitedDeepSeaRegion
	 * Size -> 0x0001
	 */
	struct FOnExitedDeepSeaRegion
	{
	public:
		unsigned char                                              UnknownData_MJGB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OnEnteredDeepSeaRegion
	 * Size -> 0x0010
	 */
	struct FOnEnteredDeepSeaRegion
	{
	public:
		unsigned char                                              UnknownData_GPSY[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WeightedItemDescSpawnDataWithRandomQuantityResult
	 * Size -> 0x0010
	 */
	struct FWeightedItemDescSpawnDataWithRandomQuantityResult
	{
	public:
		class UItemSpawnData*                                      ItemSpawnData;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KUW0[0x4];                                   // 0x0008(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       CustomLifetimeManagement;                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V0T9[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventItemSpawnedFromSpawner
	 * Size -> 0x0001
	 */
	struct FEventItemSpawnedFromSpawner
	{
	public:
		unsigned char                                              UnknownData_JTF4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemSpawnerFinishedSpawningEvent
	 * Size -> 0x0001
	 */
	struct FItemSpawnerFinishedSpawningEvent
	{
	public:
		unsigned char                                              UnknownData_QTWN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventItemSpawnerOwnershipChanged
	 * Size -> 0x0001
	 */
	struct FEventItemSpawnerOwnershipChanged
	{
	public:
		unsigned char                                              UnknownData_DPYD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAreaNowVoidOfPlayers
	 * Size -> 0x0008
	 */
	struct FEventAreaNowVoidOfPlayers
	{
	public:
		class FName                                                AreaName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventAreaNowHasPlayers
	 * Size -> 0x0008
	 */
	struct FEventAreaNowHasPlayers
	{
	public:
		class FName                                                AreaName;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectSpawnDesc
	 * Size -> 0x0018
	 */
	struct FBuoyantObjectSpawnDesc
	{
	public:
		float                                                      LifeTime;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SpawnDepth;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector2D                                           Location;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              Type;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BuoyantObjectSpawnGroup
	 * Size -> 0x0010
	 */
	struct FBuoyantObjectSpawnGroup
	{
	public:
		TArray<struct FBuoyantObjectSpawnDesc>                     Objects;                                                 // 0x0000(0x0010) Edit, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.StreamingTelemetryConfigurationSettings
	 * Size -> 0x0010
	 */
	struct FStreamingTelemetryConfigurationSettings
	{
	public:
		int32_t                                                    PercentageOfPlayersToSendTelemetryFromForHighLOD;        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PercentageOfPlayersToSendTelemetryFromForLowLOD;         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PercentageOfPlayersToSendVerboseTelemetryFromForHighLOD; // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PercentageOfPlayersToSendVerboseTelemetryFromForLowLOD;  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StreamingTelemetryBaseEvent
	 * Size -> 0x0030
	 */
	struct FStreamingTelemetryBaseEvent
	{
	public:
		class FString                                              LevelName;                                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    LodLevel;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             PlayerPosition;                                          // 0x0014(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      DistanceFromPlayer;                                      // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DistanceFromBoundsToPlayer;                              // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PlayerIsWaitingToSpawn;                                  // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       PlayerIsTeleporting;                                     // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsLevelAssetCachingEnabled;                              // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_N6Z0[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LevelCancelCompletedTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FLevelCancelCompletedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{
	public:
		float                                                      TimeSinceCancelRequested;                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_9BN1[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LevelCancelRequestedTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FLevelCancelRequestedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{
	public:
		float                                                      TimeCancelRequested;                                     // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JSGY[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LevelUnloadCompletedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FLevelUnloadCompletedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{	};

	/**
	 * ScriptStruct Athena.LevelUnloadRequestedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FLevelUnloadRequestedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{	};

	/**
	 * ScriptStruct Athena.LevelMadeHiddenTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FLevelMadeHiddenTelemetryEvent : public FStreamingTelemetryBaseEvent
	{	};

	/**
	 * ScriptStruct Athena.LevelLoadCompletedTelemetryEvent
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FLevelLoadCompletedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{
	public:
		bool                                                       WasCancelRequested;                                      // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WasCancelActioned;                                       // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9RYT[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistancePlayerTravelledSinceLoadRequest;                 // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeSinceLoadRequested;                                  // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ERD9[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LevelMadeVisibleTelemetryEvent
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	struct FLevelMadeVisibleTelemetryEvent : public FLevelLoadCompletedTelemetryEvent
	{
	public:
		float                                                      DistancePlayerTravelledSinceLoadCompleted;               // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      TimeSinceLoadCompleted;                                  // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LevelLoadRequestedTelemetryEvent
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FLevelLoadRequestedTelemetryEvent : public FStreamingTelemetryBaseEvent
	{	};

	/**
	 * ScriptStruct Athena.EventReceiveAmmoEffectsComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveAmmoEffectsComponentState
	{
	public:
		unsigned char                                              UnknownData_8440[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveAmmoStoreComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveAmmoStoreComponentState
	{
	public:
		class UAmmoStoreComponent*                                 Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventReceiveAmmoTransferComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveAmmoTransferComponentState
	{
	public:
		class UAmmoTransferComponent*                              Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureMapWidgetStreamedTexture
	 * Size -> 0x0018 (FullSize[0x0030] - InheritedSize[0x0018])
	 */
	struct FTreasureMapWidgetStreamedTexture : public FTreasureMapWidget
	{
	public:
		struct FStringAssetReference                               TexturePath;                                             // 0x0018(0x0010) Edit, ZeroConstructor
		float                                                      RelativeHeightModifier;                                  // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FlipX;                                                   // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XJ4W[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RequestCaptainedSessionCrewDataEvent
	 * Size -> 0x0001
	 */
	struct FRequestCaptainedSessionCrewDataEvent
	{
	public:
		unsigned char                                              UnknownData_V5PF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipNameChangedOnServerEvent
	 * Size -> 0x0048
	 */
	struct FShipNameChangedOnServerEvent
	{
	public:
		class FString                                              ShipName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                ScrambledShipName;                                       // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_70IA[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ShipNameChangedEvent
	 * Size -> 0x0010
	 */
	struct FShipNameChangedEvent
	{
	public:
		class FString                                              ShipName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PersistenceSettingChangedEvent
	 * Size -> 0x0008
	 */
	struct FPersistenceSettingChangedEvent
	{
	public:
		unsigned char                                              UnknownData_DPQS[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StartedCaptainedSessionEvent
	 * Size -> 0x0058
	 */
	struct FStartedCaptainedSessionEvent
	{
	public:
		unsigned char                                              UnknownData_VTRM[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StartedCaptainedSessionFailedEvent
	 * Size -> 0x0010
	 */
	struct FStartedCaptainedSessionFailedEvent
	{
	public:
		unsigned char                                              UnknownData_GTDK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewAbandonedCaptainedSessionEvent
	 * Size -> 0x0010
	 */
	struct FCrewAbandonedCaptainedSessionEvent
	{
	public:
		unsigned char                                              UnknownData_825E[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DefenderLootLevelThreshold
	 * Size -> 0x0008
	 */
	struct FDefenderLootLevelThreshold
	{
	public:
		EDefenderLootLevel                                         LootLevel;                                               // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2A26[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Threshold;                                               // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestCrewGame
	 * Size -> 0x00C8
	 */
	struct FRewardRequestCrewGame
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ShipId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FPirateIdentity>                             Pirates;                                                 // 0x0020(0x0010) ZeroConstructor
		class FName                                                EmissaryAffiliation;                                     // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FactionAffiliation;                                      // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   FactionStreakLevel;                                      // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   OpponentStreakLevel;                                     // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EDefenderLootLevel                                         FactionDefenderLootLevel;                                // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_UHN2[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPirateIdentity                                     Captain;                                                 // 0x0050(0x0078)
	};

	/**
	 * ScriptStruct Athena.RewardGrantedEvent
	 * Size -> 0x0068
	 */
	struct FRewardGrantedEvent
	{
	public:
		class FString                                              RewardId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		EWalletCurrencyId                                          CurrencyId;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2WTX[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   CurrencyAmount;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              CompanyId;                                               // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		uint32_t                                                   Xp;                                                      // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   NumLevels;                                               // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class FString>                                      Entitlements;                                            // 0x0030(0x0010) ZeroConstructor
		struct FGuid                                               RequestID;                                               // 0x0040(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              DeferralReason;                                          // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       ShouldBePropagatedToOtherCrewMembers;                    // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_I0AE[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.XPGrantedEvent
	 * Size -> 0x0038
	 */
	struct FXPGrantedEvent
	{
	public:
		uint32_t                                                   XPGranted;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyId;                                               // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               RequestID;                                               // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               BootyId;                                                 // 0x001C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                EmissaryAffiliation;                                     // 0x002C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CurrencyGrantedEvent
	 * Size -> 0x0030
	 */
	struct FCurrencyGrantedEvent
	{
	public:
		uint32_t                                                   Amount;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWalletCurrencyId                                          Currency;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2407[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               TransactionId;                                           // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                EmissaryAffiliation;                                     // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   EmissaryLevel;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PWF1[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     EmissaryMultiplier;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PenaltyRequestEvent
	 * Size -> 0x0090
	 */
	struct FPenaltyRequestEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0010(0x0078)
		class FName                                                PenaltyId;                                               // 0x0088(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardRequestForPirateEvent
	 * Size -> 0x00B8
	 */
	struct FRewardRequestForPirateEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPirateIdentity                                     PirateIdentity;                                          // 0x0010(0x0078)
		struct FGuid                                               CrewId;                                                  // 0x0088(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                EmissaryAffiliation;                                     // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    EmissaryLevel;                                           // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FromInsecureSource;                                      // 0x00B4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NotifyPlayer;                                            // 0x00B5(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YE3J[0x2];                                   // 0x00B6(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DeferredRewardRequestEvent
	 * Size -> 0x0060
	 */
	struct FDeferredRewardRequestEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CompanyAffiliation;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RewardId;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       RewardAccount;                                           // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NotifyPlayer;                                            // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardCurrency;                                      // 0x0042(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardXp;                                            // 0x0043(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardSeasonXp;                                      // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SH9U[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeferralReason;                                          // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		double                                                     RewardMultiplier;                                        // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FactionLeaveFightRewardEvent
	 * Size -> 0x00E0
	 */
	struct FFactionLeaveFightRewardEvent
	{
	public:
		struct FRewardRequestCrewGame                              Recipient;                                               // 0x0000(0x00C8)
		struct FGuid                                               RequestID;                                               // 0x00C8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    SandOfFateGoldLevel;                                     // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayMode                                                  PlayMode;                                                // 0x00DC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EPlayModeVariant                                           PlayModeVariant;                                         // 0x00DD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_01O3[0x2];                                   // 0x00DE(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AllianceRewardRequestEvent
	 * Size -> 0x0128
	 */
	struct FAllianceRewardRequestEvent
	{
	public:
		struct FGuid                                               AllianceId;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               RequestID;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRewardRequestCrewGame                              PrimaryRecipient;                                        // 0x0020(0x00C8)
		TArray<struct FRewardRequestCrewGame>                      SecondaryRecipients;                                     // 0x00E8(0x0010) ZeroConstructor
		class FName                                                RewardId;                                                // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x0100(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               BootyId;                                                 // 0x0108(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                NPCName;                                                 // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x0120(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardCurrency;                                      // 0x0121(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardXp;                                            // 0x0122(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardSeasonXp;                                      // 0x0123(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardAllegiance;                                    // 0x0124(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       SkipXpToAllegianceMultiplier;                            // 0x0125(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FUBW[0x2];                                   // 0x0126(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardRequestEvent
	 * Size -> 0x0050
	 */
	struct FRewardRequestEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FPirateIdentity>                             PirateIdentities;                                        // 0x0010(0x0010) ZeroConstructor
		struct FGuid                                               CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                CompanyAffiliation;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                EmissaryAffiliation;                                     // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    EmissaryLevel;                                           // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NotifyPlayer;                                            // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_2UWB[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RewardRuntimeDefinition
	 * Size -> 0x0038
	 */
	struct FRewardRuntimeDefinition
	{
	public:
		unsigned char                                              UnknownData_FOAX[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   PopUp;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5NNH[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      PrerequisiteEntitlements;                                // 0x0020(0x0010) ZeroConstructor, UObjectWrapper
		unsigned char                                              UnknownData_UNHN[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewCompletedEmergentVoyageEvent
	 * Size -> 0x0014
	 */
	struct FCrewCompletedEmergentVoyageEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VCNE[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewCancelledTaleEvent
	 * Size -> 0x0010
	 */
	struct FCrewCancelledTaleEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewCancelledPrimaryVoyageEvent
	 * Size -> 0x0010
	 */
	struct FCrewCancelledPrimaryVoyageEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewCompletedTaleEvent
	 * Size -> 0x0014
	 */
	struct FCrewCompletedTaleEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontNotifyParticipants;                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WVDC[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewCompletedPrimaryVoyageEvent
	 * Size -> 0x0014
	 */
	struct FCrewCompletedPrimaryVoyageEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_XEVN[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewBeganTaleEvent
	 * Size -> 0x0010
	 */
	struct FCrewBeganTaleEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CrewBeganPrimaryVoyageEvent
	 * Size -> 0x0010
	 */
	struct FCrewBeganPrimaryVoyageEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.DiscoveryNotificationEvent
	 * Size -> 0x0060
	 */
	struct FDiscoveryNotificationEvent
	{
	public:
		int32_t                                                    Count;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_5WAI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Images;                                                  // 0x0008(0x0010) ZeroConstructor
		class FString                                              Background;                                              // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FText                                                Text;                                                    // 0x0028(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ATMX[0x20];                                  // 0x0040(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.QuestInfo
	 * Size -> 0x0028
	 */
	struct FQuestInfo
	{
	public:
		struct FGuid                                               QuestId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Name;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		EQuestStatus                                               Status;                                                  // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EQuestType                                                 Type;                                                    // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_AUOB[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageMembershipInfo
	 * Size -> 0x0090
	 */
	struct FVoyageMembershipInfo
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_ECKK[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FGuid                                               Id;                                                      // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FQuestInfo>                                  QuestStatus;                                             // 0x0048(0x0010) ZeroConstructor
		class UClass*                                              Company;                                                 // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       IsEmergent;                                              // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsTale;                                                  // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EEmergentVoyageSource                                      EmergentSource;                                          // 0x0062(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FViewVoyageBanners                                  ViewVoyageBanners;                                       // 0x0063(0x0002)
		bool                                                       DoNotNotifyParticipantsOnVoyageComplete;                 // 0x0065(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_3XXA[0x2];                                   // 0x0066(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8X0G[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStat>                                 VoyageCompletionStats;                                   // 0x0070(0x0010) ZeroConstructor
		TArray<struct FPlayerStat>                                 ReapersMarkCompletionStats;                              // 0x0080(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.QuestCompleteTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FQuestCompleteTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_4VUY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestAbortedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FQuestAbortedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_JTU6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestStopTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FQuestStopTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_3CUJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestStartTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FQuestStartTelemetryEvent
	{
	public:
		EQuestType                                                 QuestType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestBaseTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FQuestBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		struct FGuid                                               QuestId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.QuestBaseTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FQuestBaseTelemetryFragment
	{
	public:
		struct FGuid                                               QuestId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               VoyageId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerGameLeftVoyageTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerGameLeftVoyageTelemetryEvent
	{
	public:
		class FString                                              VoyageTitle;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               VoyageId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EVoyageLeaveStatus                                         LeaveStatus;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsTale;                                                  // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsStarlightTale;                                         // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_EFEO[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerGameStartVoyageTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerGameStartVoyageTelemetryEvent
	{
	public:
		class FString                                              VoyageTitle;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               VoyageId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EVoyageJoinStatus                                          JoinStatus;                                              // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       IsTale;                                                  // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsStarlightTale;                                         // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VS0W[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageCompleteTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FVoyageCompleteTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_BM1Q[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageAbortedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FVoyageAbortedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_4MAP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageEndTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FVoyageEndTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_MN8E[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.VoyageStartTelemetryEventPerQuest
	 * Size -> 0x0020
	 */
	struct FVoyageStartTelemetryEventPerQuest
	{
	public:
		struct FGuid                                               QuestId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              QuestType;                                               // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageStartTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FVoyageStartTelemetryEvent
	{
	public:
		bool                                                       IsEmergent;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FQU1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVoyageStartTelemetryEventPerQuest>          Quests;                                                  // 0x0008(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.RewardIdCount
	 * Size -> 0x000C
	 */
	struct FRewardIdCount
	{
	public:
		class FName                                                RewardId;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    Count;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.VoyageCreatedTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FVoyageCreatedTelemetryEvent
	{
	public:
		class FString                                              VoyageRecipeAsset;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              VoyageGenerationLocation;                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    VoyageRank;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumIslandsToAvoid;                                       // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   VoyageGenerationSeed;                                    // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PJIP[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRewardIdCount>                              GeneratedRewards;                                        // 0x0030(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoyageBaseTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FVoyageBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		struct FGuid                                               VoyageId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.VoyageBaseTelemetryFragment
	 * Size -> 0x0010
	 */
	struct FVoyageBaseTelemetryFragment
	{
	public:
		struct FGuid                                               VoyageId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.VoyageInfo
	 * Size -> 0x0080
	 */
	struct FVoyageInfo
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_TLEN[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FGuid                                               Id;                                                      // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class UClass*                                              Company;                                                 // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		bool                                                       IsEmergent;                                              // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsTale;                                                  // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		EEmergentVoyageSource                                      EmergentSource;                                          // 0x0052(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FViewVoyageBanners                                  ViewVoyageBanners;                                       // 0x0053(0x0002)
		unsigned char                                              UnknownData_V4QI[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Rank;                                                    // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MVD7[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerStat>                                 VoyageCompletionStats;                                   // 0x0060(0x0010) ZeroConstructor
		TArray<struct FPlayerStat>                                 ReapersMarkCompletionStats;                              // 0x0070(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.VoyageInventoryUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FVoyageInventoryUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_1I0W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LandmarkSoundPlayedEvent
	 * Size -> 0x0030
	 */
	struct FLandmarkSoundPlayedEvent
	{
	public:
		int32_t                                                    PlayingId;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0KVR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         AudioEvent;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FWwiseEmitter                                       Emitter;                                                 // 0x0010(0x0020)
	};

	/**
	 * ScriptStruct Athena.PlayLandmarkReactionRPC
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FPlayLandmarkReactionRPC : public FBoxedRpc
	{
	public:
		class ALandmark*                                           Landmark;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LandmarkReactionIndex;                                   // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ACWH[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutSetEvent
	 * Size -> 0x0001
	 */
	struct FItemLoadoutSetEvent
	{
	public:
		unsigned char                                              UnknownData_2UVS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutSlotsUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FItemLoadoutSlotsUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_F3JM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutItemCategoryRemovedEvent
	 * Size -> 0x0008
	 */
	struct FItemLoadoutItemCategoryRemovedEvent
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutItemRemovedEvent
	 * Size -> 0x0008
	 */
	struct FItemLoadoutItemRemovedEvent
	{
	public:
		class AItemInfo*                                           Item;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutItemCategoryAddedEvent
	 * Size -> 0x0008
	 */
	struct FItemLoadoutItemCategoryAddedEvent
	{
	public:
		class UClass*                                              ItemCategory;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemLoadoutItemAddedEvent
	 * Size -> 0x0008
	 */
	struct FItemLoadoutItemAddedEvent
	{
	public:
		class AItemInfo*                                           Item;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadoutCategory
	 * Size -> 0x0020
	 */
	struct FLoadoutCategory
	{
	public:
		class FString                                              CategoryName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              EntitlementId;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LoadoutPetCategory
	 * Size -> 0x0030
	 */
	struct FLoadoutPetCategory
	{
	public:
		class FString                                              PetEntitlementId;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PetCustomizationEntitlementId;                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PetName;                                                 // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CategorisedLoadout
	 * Size -> 0x0048
	 */
	struct FCategorisedLoadout
	{
	public:
		TArray<struct FLoadoutCategory>                            ItemLoadout;                                             // 0x0000(0x0010) ZeroConstructor
		TArray<struct FLoadoutCategory>                            ClothingLoadout;                                         // 0x0010(0x0010) ZeroConstructor
		TArray<struct FLoadoutPetCategory>                         PetLoadout;                                              // 0x0020(0x0010) ZeroConstructor
		bool                                                       PetNamingDisallowed;                                     // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InitialLoadout;                                          // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_WJI3[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Hash;                                                    // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TitleLoadoutUpdatedEvent
	 * Size -> 0x0001
	 */
	struct FTitleLoadoutUpdatedEvent
	{
	public:
		unsigned char                                              UnknownData_VN7C[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EncounterHandle
	 * Size -> 0x0014
	 */
	struct FEncounterHandle
	{
	public:
		unsigned char                                              UnknownData_FUHZ[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EncounterListener
	 * Size -> 0x0018
	 */
	struct FEncounterListener
	{
	public:
		class AActor*                                              EncounterListenerActor;                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             EncounterListenerLocation;                               // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		EEncounterListenerType                                     EncounterListenerType;                                   // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_C7S5[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventEncounterBase
	 * Size -> 0x0020
	 */
	struct FEventEncounterBase
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              EncounterActor;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EEncounterType                                             EncounterType;                                           // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QPPJ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EncounterRadiusSquared;                                  // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventEncounterEnd
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FEventEncounterEnd : public FEventEncounterBase
	{	};

	/**
	 * ScriptStruct Athena.EventEncounterStart
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FEventEncounterStart : public FEventEncounterBase
	{	};

	/**
	 * ScriptStruct Athena.EventClearCrewProgressOverride
	 * Size -> 0x0010
	 */
	struct FEventClearCrewProgressOverride
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetCrewProgressOverride
	 * Size -> 0x0018
	 */
	struct FEventSetCrewProgressOverride
	{
	public:
		class UClass*                                              ProgressId;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventNamedProgressLocationDestroyed
	 * Size -> 0x0008
	 */
	struct FEventNamedProgressLocationDestroyed
	{
	public:
		class AProgressSpawnLocation*                              SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventNamedProgressLocationCreated
	 * Size -> 0x0008
	 */
	struct FEventNamedProgressLocationCreated
	{
	public:
		class AProgressSpawnLocation*                              SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipSpawnLocationDestroyed
	 * Size -> 0x0008
	 */
	struct FEventShipSpawnLocationDestroyed
	{
	public:
		class AShipSpawnLocation*                                  SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipSpawnLocationCreated
	 * Size -> 0x0008
	 */
	struct FEventShipSpawnLocationCreated
	{
	public:
		class AShipSpawnLocation*                                  SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventGhostShipPlayerSpawnLocationDestroyed
	 * Size -> 0x0008
	 */
	struct FEventGhostShipPlayerSpawnLocationDestroyed
	{
	public:
		class AGhostShipPlayerSpawnLocation*                       SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventGhostShipPlayerSpawnLocationCreated
	 * Size -> 0x0008
	 */
	struct FEventGhostShipPlayerSpawnLocationCreated
	{
	public:
		class AGhostShipPlayerSpawnLocation*                       SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSpawnLocationDestroyed
	 * Size -> 0x0008
	 */
	struct FEventSpawnLocationDestroyed
	{
	public:
		class ASpawnLocation*                                      SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSpawnLocationCreated
	 * Size -> 0x0008
	 */
	struct FEventSpawnLocationCreated
	{
	public:
		class ASpawnLocation*                                      SpawnLocation;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientNPCDialogOptionSelectedTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FClientNPCDialogOptionSelectedTelemetryEvent
	{
	public:
		struct FGuid                                               NPCInteractionSessionId;                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              NPCDialogOverrideType;                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              NPCDialogTreeDataAsset;                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    DialogIndex;                                             // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    OptionChosenIndex;                                       // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.NPCSubtitleEnd
	 * Size -> 0x0001
	 */
	struct FNPCSubtitleEnd
	{
	public:
		unsigned char                                              UnknownData_NXT6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NPCSubtitleBegin
	 * Size -> 0x0001
	 */
	struct FNPCSubtitleBegin
	{
	public:
		unsigned char                                              UnknownData_ES90[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSceneDialogueFinished
	 * Size -> 0x0008
	 */
	struct FEventSceneDialogueFinished
	{
	public:
		class ASceneDialogueCoordinator*                           Sender;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SceneDialogueBaseNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FSceneDialogueBaseNetworkEvent : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.SceneDialogueEndNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FSceneDialogueEndNetworkEvent : public FSceneDialogueBaseNetworkEvent
	{	};

	/**
	 * ScriptStruct Athena.SceneDialogueStartNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FSceneDialogueStartNetworkEvent : public FSceneDialogueBaseNetworkEvent
	{	};

	/**
	 * ScriptStruct Athena.EventAIBountySpawnerAllTargetsKilled
	 * Size -> 0x0020
	 */
	struct FEventAIBountySpawnerAllTargetsKilled
	{
	public:
		class FName                                                IslandName;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              InstigatorOfFinalAIPawnDeath;                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMapTablePinsChanged
	 * Size -> 0x0001
	 */
	struct FEventMapTablePinsChanged
	{
	public:
		unsigned char                                              UnknownData_6QL7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RiddleQuestGateCompletedEvent
	 * Size -> 0x0001
	 */
	struct FRiddleQuestGateCompletedEvent
	{
	public:
		unsigned char                                              UnknownData_3EHT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStarved
	 * Size -> 0x0001
	 */
	struct FEventStarved
	{
	public:
		unsigned char                                              UnknownData_C8TP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStarvingAmountChanged
	 * Size -> 0x0004
	 */
	struct FEventStarvingAmountChanged
	{
	public:
		float                                                      PercentageStarved;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventJustBeenFed
	 * Size -> 0x0008
	 */
	struct FEventJustBeenFed
	{
	public:
		class AActor*                                              FedBy;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventStartedBeingFed
	 * Size -> 0x0008
	 */
	struct FEventStartedBeingFed
	{
	public:
		class AActor*                                              FedBy;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FaunaAnimationIndexStruct
	 * Size -> 0x0054
	 */
	struct FFaunaAnimationIndexStruct
	{
	public:
		unsigned char                                              UnknownData_04ZF[0x54];                                  // 0x0000(0x0054) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationStartSnakeStrike
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationStartSnakeStrike
	{
	public:
		unsigned char                                              UnknownData_JP5M[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationSnakeInCharmStance
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationSnakeInCharmStance
	{
	public:
		bool                                                       SnakeInCharmStance;                                      // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationSnakeInAttackStance
	 * Size -> 0x0002
	 */
	struct FEventFaunaAnimationSnakeInAttackStance
	{
	public:
		bool                                                       SnakeInAttackStance;                                     // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		EFaunaAnimationSnakeAttackDirection                        SnakeAttackDirection;                                    // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationAgitated
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationAgitated
	{
	public:
		bool                                                       Agitated;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationStartEating
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationStartEating
	{
	public:
		unsigned char                                              UnknownData_1GVS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationStarving
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationStarving
	{
	public:
		bool                                                       PigIsStarving;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationSpecial
	 * Size -> 0x0008
	 */
	struct FEventFaunaAnimationSpecial
	{
	public:
		bool                                                       LoopAnimation;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_NBTO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationImpact
	 * Size -> 0x0004
	 */
	struct FEventFaunaAnimationImpact
	{
	public:
		float                                                      ImpactStrength;                                          // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationLocationChanged
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationLocationChanged
	{
	public:
		EFaunaAnimationLocation                                    Location;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationIsCaged
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationIsCaged
	{
	public:
		bool                                                       IsCaged;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventFaunaAnimationTransition
	 * Size -> 0x0001
	 */
	struct FEventFaunaAnimationTransition
	{
	public:
		EFaunaAnimationState                                       AnimationState;                                          // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFaunaAddedToEmptyCrate
	 * Size -> 0x0001
	 */
	struct FEventFaunaAddedToEmptyCrate
	{
	public:
		unsigned char                                              UnknownData_CQCY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionUpdateEvent
	 * Size -> 0x0030
	 */
	struct FInventoryInteractionUpdateEvent
	{
	public:
		TArray<struct FIInventoryItem>                             Current;                                                 // 0x0000(0x0010) ZeroConstructor
		TArray<struct FIInventoryItem>                             Available;                                               // 0x0010(0x0010) ZeroConstructor
		TArray<struct FIInventoryItemDescription>                  Descriptions;                                            // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionTakeAllRequestEvent
	 * Size -> 0x0004
	 */
	struct FInventoryInteractionTakeAllRequestEvent
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionTakeRequestEvent
	 * Size -> 0x0004
	 */
	struct FInventoryInteractionTakeRequestEvent
	{
	public:
		int32_t                                                    Index;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionStowAllRequestEvent
	 * Size -> 0x0010
	 */
	struct FInventoryInteractionStowAllRequestEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionStowRequestEvent
	 * Size -> 0x0010
	 */
	struct FInventoryInteractionStowRequestEvent
	{
	public:
		class FString                                              ItemDesc;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.InventoryInteractionClosedEvent
	 * Size -> 0x0001
	 */
	struct FInventoryInteractionClosedEvent
	{
	public:
		unsigned char                                              UnknownData_CSQU[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CloseInventoryInteractionEvent
	 * Size -> 0x0001
	 */
	struct FCloseInventoryInteractionEvent
	{
	public:
		unsigned char                                              UnknownData_PJQD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.OpenInventoryInteractionEvent
	 * Size -> 0x0048
	 */
	struct FOpenInventoryInteractionEvent
	{
	public:
		class FString                                              InventoryName;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<struct FIInventoryItem>                             Current;                                                 // 0x0010(0x0010) ZeroConstructor
		TArray<struct FIInventoryItem>                             Available;                                               // 0x0020(0x0010) ZeroConstructor
		TArray<struct FIInventoryItemDescription>                  Descriptions;                                            // 0x0030(0x0010) ZeroConstructor
		bool                                                       CanPlayerStoreItems;                                     // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_B46X[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStorageContainerContentsChanged
	 * Size -> 0x0008
	 */
	struct FEventStorageContainerContentsChanged
	{
	public:
		class UStorageContainerComponent*                          Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventReceiveStorageContainerComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveStorageContainerComponentState
	{
	public:
		class UStorageContainerComponent*                          Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorageContainerContentSpawnerOutput
	 * Size -> 0x0010
	 */
	struct FStorageContainerContentSpawnerOutput
	{
	public:
		class UClass*                                              ItemDesc;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		unsigned char                                              UnknownData_3BNF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StorageContainerHealthChangedCloseInventoryRpc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FStorageContainerHealthChangedCloseInventoryRpc : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.StorageContainerUnregisterServerEventsRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FStorageContainerUnregisterServerEventsRpc : public FBoxedRpc
	{
	public:
		class UObject*                                             InStorageContainerOwnerObject;                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StowAllItemsToContainerRPC
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FStowAllItemsToContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		unsigned char                                              UnknownData_P8NF[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemDescToStow;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StowItemToContainerRPC
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FStowItemToContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		unsigned char                                              UnknownData_TP2J[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemDescToStow;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TakeAllItemsFromContainerRPC
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FTakeAllItemsFromContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		int32_t                                                    IndexToTake;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TakeItemFromContainerRPC
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FTakeItemFromContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		int32_t                                                    IndexToTake;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsShopInventoryCountsResponseEvent
	 * Size -> 0x0050
	 */
	struct FCaptainsShopInventoryCountsResponseEvent
	{
	public:
		TMap<class FString, uint32_t>                              StockCount;                                              // 0x0000(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainsShopInventoryCountsRequestEvent
	 * Size -> 0x0010
	 */
	struct FCaptainsShopInventoryCountsRequestEvent
	{
	public:
		TArray<class FString>                                      Requests;                                                // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventObtainedFromContainer
	 * Size -> 0x0008
	 */
	struct FEventObtainedFromContainer
	{
	public:
		unsigned char                                              UnknownData_MJNO[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventStorageContainerDestroyed
	 * Size -> 0x0008
	 */
	struct FEventStorageContainerDestroyed
	{
	public:
		class UObject*                                             Replenishable;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventStorageContainerCreated
	 * Size -> 0x0008
	 */
	struct FEventStorageContainerCreated
	{
	public:
		class UObject*                                             Replenishable;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuickTransferTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FQuickTransferTelemetryEvent
	{
	public:
		class FString                                              SrcClass;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              DestClass;                                               // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		float                                                      TransferTime;                                            // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumTransferred;                                          // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Giving;                                                  // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RVJ6[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerItemAddToContainerTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerItemAddToContainerTelemetryEvent
	{
	public:
		class FString                                              ContainerId;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemType;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumberOfItemsInContainer;                                // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_87OP[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerItemRetrievalFromContainerTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FPlayerItemRetrievalFromContainerTelemetryEvent
	{
	public:
		class FString                                              ContainerId;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemType;                                                // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumberOfItemsRemainingInContainer;                       // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_LIB9[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PuzzleVaultRewardItemSpawnedEvent
	 * Size -> 0x0001
	 */
	struct FPuzzleVaultRewardItemSpawnedEvent
	{
	public:
		unsigned char                                              UnknownData_O2Y7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.KeyTakenEvent
	 * Size -> 0x0008
	 */
	struct FKeyTakenEvent
	{
	public:
		class AItemInfo*                                           KeyTaken;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.StorableLockState
	 * Size -> 0x0020
	 */
	struct FStorableLockState
	{
	public:
		bool                                                       Locked;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IM4M[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStringAssetReference                               RequiredKey;                                             // 0x0008(0x0010) ZeroConstructor
		bool                                                       IsInUnlockingSequence;                                   // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_62PC[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AmmoStoreMetaWrapper
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FAmmoStoreMetaWrapper : public FItemMetaBase
	{
	public:
		int32_t                                                    AmmoCount;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VC7J[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AmmoTransferMetaWrapper
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FAmmoTransferMetaWrapper : public FItemMetaBase
	{
	public:
		int32_t                                                    AmmoCount;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MJZ2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootyItemInfoMetaWrapper
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FBootyItemInfoMetaWrapper : public FItemMetaBase
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CargoRunCrateMetaWrapper
	 * Size -> 0x0028 (FullSize[0x0040] - InheritedSize[0x0018])
	 */
	struct FCargoRunCrateMetaWrapper : public FItemMetaBase
	{
	public:
		struct FCargoRunItemDropOffData                            DropOffData;                                             // 0x0018(0x0028)
	};

	/**
	 * ScriptStruct Athena.CommoditySourceMetaWrapper
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FCommoditySourceMetaWrapper : public FItemMetaBase
	{
	public:
		class FName                                                NPCIdentifier;                                           // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                IslandIdentifier;                                        // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewOwnershipTrackingComponentMetaWrapper
	 * Size -> 0x0080 (FullSize[0x0098] - InheritedSize[0x0018])
	 */
	struct FCrewOwnershipTrackingComponentMetaWrapper : public FItemMetaBase
	{
	public:
		struct FGuid                                               SpawningCrewId;                                          // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CurrentOwnedByCrewId;                                    // 0x0028(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FOwnerListEntry                                     PreviousOwnedByCrewIdList;                               // 0x0038(0x0010)
		TMap<class FName, struct FOwnerListEntry>                  CustomTrackingMap;                                       // 0x0048(0x0050) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ItemHealthMetaWrapper
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FItemHealthMetaWrapper : public FItemMetaBase
	{
	public:
		float                                                      MaxHealth;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      CurrentHealth;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemInfoHealthMetaWrapper
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FItemInfoHealthMetaWrapper : public FItemMetaBase
	{
	public:
		float                                                      CurrentHealth;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MaxHealth;                                               // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LockMetaWrapper
	 * Size -> 0x0030 (FullSize[0x0048] - InheritedSize[0x0018])
	 */
	struct FLockMetaWrapper : public FItemMetaBase
	{
	public:
		TArray<struct FStorableLockState>                          LockStates;                                              // 0x0018(0x0010) ZeroConstructor
		class FScriptMulticastDelegate                             LockOpenDelegate;                                        // 0x0028(0x0010) ZeroConstructor, InstancedReference
		class FScriptMulticastDelegate                             LockOpened;                                              // 0x0038(0x0010) ZeroConstructor, InstancedReference
	};

	/**
	 * ScriptStruct Athena.OpenableItemMetaWrapper
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FOpenableItemMetaWrapper : public FItemMetaBase
	{
	public:
		EOpenableItemState                                         OpenState;                                               // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       HasEverClosed;                                           // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_ETPJ[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.StorageContainerMetaWrapper
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FStorageContainerMetaWrapper : public FItemMetaBase
	{
	public:
		unsigned char                                              UnknownData_1BVR[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ItemSnapshotOwnerDestroyed
	 * Size -> 0x0020
	 */
	struct FItemSnapshotOwnerDestroyed
	{
	public:
		struct FGuid                                               SnapshotID;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              CurrentInstigator[0x10];                                 // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ItemSnapshotOwnerDestroyed.CurrentInstigator
	};

	/**
	 * ScriptStruct Athena.ItemSnapshotSwapInstigatedEvent
	 * Size -> 0x0028
	 */
	struct FItemSnapshotSwapInstigatedEvent
	{
	public:
		struct FGuid                                               SnapshotID;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              NewInstagator[0x10];                                     // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ItemSnapshotSwapInstigatedEvent.NewInstagator
		class AActor*                                              WorldContextObject;                                      // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemSnapshotExpandedEvent
	 * Size -> 0x0018
	 */
	struct FItemSnapshotExpandedEvent
	{
	public:
		struct FGuid                                               SnapshotID;                                              // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class UObject*                                             CreatedObject;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemSnapshotTakenEvent
	 * Size -> 0x0028
	 */
	struct FItemSnapshotTakenEvent
	{
	public:
		unsigned char                                              Instagator[0x10];                                        // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.ItemSnapshotTakenEvent.Instagator
		struct FGuid                                               SnapshotID;                                              // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class UObject*                                             SnapshotObject;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventReceiveCollectorsChestItemSlotsState
	 * Size -> 0x0008
	 */
	struct FEventReceiveCollectorsChestItemSlotsState
	{
	public:
		class UCollectorsChestItemSlotInteractable*                Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CollectorsChestMetaWrapper
	 * Size -> 0x0018 (FullSize[0x0030] - InheritedSize[0x0018])
	 */
	struct FCollectorsChestMetaWrapper : public FItemMetaBase
	{
	public:
		TArray<struct FItemSnapshot>                               StoredItemSnapshots;                                     // 0x0018(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_U0L5[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventReceiveQuestBookPagesInContainerComponentState
	 * Size -> 0x0008
	 */
	struct FEventReceiveQuestBookPagesInContainerComponentState
	{
	public:
		class UQuestBookPagesInContainerComponent*                 Source;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemStoredInChestEvent
	 * Size -> 0x0008
	 */
	struct FItemStoredInChestEvent
	{
	public:
		class AItemInfo*                                           StoredItem;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PickedUpItemFromChestEvent
	 * Size -> 0x0008
	 */
	struct FPickedUpItemFromChestEvent
	{
	public:
		class AActor*                                              PickupActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPagesInContainerTaken
	 * Size -> 0x0001
	 */
	struct FEventPagesInContainerTaken
	{
	public:
		unsigned char                                              UnknownData_VTO0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventGoldInContainerTaken
	 * Size -> 0x0001
	 */
	struct FEventGoldInContainerTaken
	{
	public:
		unsigned char                                              UnknownData_NPXP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WorldMarkerDesc
	 * Size -> 0x0020
	 */
	struct FWorldMarkerDesc
	{
	public:
		class UBaseWorldMarker*                                    Marker;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_O20Y[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Variant;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CachedIslandStore
	 * Size -> 0x0030
	 */
	struct FCachedIslandStore
	{
	public:
		unsigned char                                              UnknownData_EI9W[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventItemsRetrieved
	 * Size -> 0x0014
	 */
	struct FEventItemsRetrieved
	{
	public:
		struct FGuid                                               CrewRetrieving;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int16_t                                                    IslandHash;                                              // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PAN9[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventOnCrewStorageUpdate
	 * Size -> 0x0014
	 */
	struct FEventOnCrewStorageUpdate
	{
	public:
		struct FGuid                                               CrewStoring;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int16_t                                                    IslandHash;                                              // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_WBSS[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventOnCrewStorageFull
	 * Size -> 0x0014
	 */
	struct FEventOnCrewStorageFull
	{
	public:
		struct FGuid                                               CrewStoring;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int16_t                                                    IslandHash;                                              // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_YU1U[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RetrieveBootyActorDespawnedEvent
	 * Size -> 0x0001
	 */
	struct FRetrieveBootyActorDespawnedEvent
	{
	public:
		unsigned char                                              UnknownData_3ACP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RetrieveBootyActorSpawnedEvent
	 * Size -> 0x0001
	 */
	struct FRetrieveBootyActorSpawnedEvent
	{
	public:
		unsigned char                                              UnknownData_M90U[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InitRetrieveBootyActorEvent
	 * Size -> 0x0008
	 */
	struct FInitRetrieveBootyActorEvent
	{
	public:
		unsigned char                                              UnknownData_5Q28[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.DismissRetrieveBootyActorEvent
	 * Size -> 0x0001
	 */
	struct FDismissRetrieveBootyActorEvent
	{
	public:
		unsigned char                                              UnknownData_TLRI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationAccountLinkingEventRequest
	 * Size -> 0x0001
	 */
	struct FEventApplicationAccountLinkingEventRequest
	{
	public:
		unsigned char                                              UnknownData_K9A3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationSignOutRequest
	 * Size -> 0x0001
	 */
	struct FEventApplicationSignOutRequest
	{
	public:
		unsigned char                                              UnknownData_61MQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationStartRequest
	 * Size -> 0x0001
	 */
	struct FEventApplicationStartRequest
	{
	public:
		unsigned char                                              UnknownData_Y43Y[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationExitRequest
	 * Size -> 0x0001
	 */
	struct FEventApplicationExitRequest
	{
	public:
		unsigned char                                              UnknownData_01MI[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationResumed
	 * Size -> 0x0001
	 */
	struct FEventApplicationResumed
	{
	public:
		unsigned char                                              UnknownData_XDW4[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationSuspended
	 * Size -> 0x0001
	 */
	struct FEventApplicationSuspended
	{
	public:
		unsigned char                                              UnknownData_UWO3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationReactivated
	 * Size -> 0x0001
	 */
	struct FEventApplicationReactivated
	{
	public:
		unsigned char                                              UnknownData_K0K7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventApplicationDeactivated
	 * Size -> 0x0001
	 */
	struct FEventApplicationDeactivated
	{
	public:
		unsigned char                                              UnknownData_UKO6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameSessionIdTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FGameSessionIdTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		unsigned char                                              UnknownData_2KLP[0x1];                                   // 0x0000(0x0001) Fix Super Size
		unsigned char                                              UnknownData_JGUE[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.GameSessionIdTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FGameSessionIdTelemetryFragment
	{
	public:
		class FString                                              SessionHostId;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               SessionId;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventGameNarrationClientNotificationMessage
	 * Size -> 0x0028
	 */
	struct FEventGameNarrationClientNotificationMessage
	{
	public:
		ENotificationType                                          NotificationType;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_51F7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Sender;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerSendOutDirectTextMessage
	 * Size -> 0x0040
	 */
	struct FEventPlayerSendOutDirectTextMessage
	{
	public:
		class APlayerState*                                        Sender;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                Message;                                                 // 0x0008(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_WG9T[0x20];                                  // 0x0020(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.EventSendNewTextMessageToServer
	 * Size -> 0x0038
	 */
	struct FEventSendNewTextMessageToServer
	{
	public:
		class FText                                                Message;                                                 // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_K249[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.EventUINotification
	 * Size -> 0x0000
	 */
	struct FEventUINotification
	{	};

	/**
	 * ScriptStruct Athena.NotificationStickiness
	 * Size -> 0x0008
	 */
	struct FNotificationStickiness
	{
	public:
		EStickinessType                                            Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MKRA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   StickDurationMs;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerTextChatMessage
	 * Size -> 0x0048
	 */
	struct FPlayerTextChatMessage
	{
	public:
		struct FUniqueNetIdRepl                                    SenderNetId;                                             // 0x0000(0x0018)
		class FString                                              GamerTag;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		ENotificationType                                          NotificationType;                                        // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_945F[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNotificationStickiness                             Stickiness;                                              // 0x003C(0x0008)
		unsigned char                                              UnknownData_TDH3[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerTextChatMessageUINotification
	 * Size -> 0x0048
	 */
	struct FEventPlayerTextChatMessageUINotification : public FEventUINotification
	{
	public:
		struct FPlayerTextChatMessage                              PlayerTextChatMessage;                                   // 0x0000(0x0048)
	};

	/**
	 * ScriptStruct Athena.NPCChat
	 * Size -> 0x0040
	 */
	struct FNPCChat
	{
	public:
		class FString                                              SenderName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              Text;                                                    // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		ENPCChatType                                               Type;                                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_M6D9[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Image;                                                   // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    Timeout;                                                 // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QF3O[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventNPCChatUINotification
	 * Size -> 0x0040
	 */
	struct FEventNPCChatUINotification : public FEventUINotification
	{
	public:
		struct FNPCChat                                            NpcMessage;                                              // 0x0000(0x0040)
	};

	/**
	 * ScriptStruct Athena.CutsceneResponseResult
	 * Size -> 0x0008
	 */
	struct FCutsceneResponseResult
	{
	public:
		unsigned char                                              UnknownData_34D3[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QueuedCutsceneData
	 * Size -> 0x001C
	 */
	struct FQueuedCutsceneData
	{
	public:
		class FName                                                CutsceneName;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HT4Y[0x14];                                  // 0x0008(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CutscenePriorityQueueEntry
	 * Size -> 0x0010
	 */
	struct FCutscenePriorityQueueEntry
	{
	public:
		TArray<struct FQueuedCutsceneData>                         QueuedCutscenes;                                         // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CutsceneTimestampData
	 * Size -> 0x0030
	 */
	struct FCutsceneTimestampData
	{
	public:
		unsigned char                                              UnknownData_KXEZ[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CutsceneStateChangedEvent
	 * Size -> 0x0001
	 */
	struct FCutsceneStateChangedEvent
	{
	public:
		ECutsceneActivatonState                                    NewState;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayCutsceneNetworkEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FPlayCutsceneNetworkEvent : public FBoxedRpc
	{
	public:
		class UCutsceneComponent*                                  TargetComponent;                                         // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    GroupIdx;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    PoolIdx;                                                 // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    VariantIdx;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NPBD[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSequencerCutSceneEnded
	 * Size -> 0x0001
	 */
	struct FEventSequencerCutSceneEnded
	{
	public:
		unsigned char                                              UnknownData_OB0D[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSequencerCutSceneStarted
	 * Size -> 0x0001
	 */
	struct FEventSequencerCutSceneStarted
	{
	public:
		unsigned char                                              UnknownData_9WUR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.QuestVariableVectorArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableVectorArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableTextArray
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableTextArray : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.QuestVariableUObject
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableUObject : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.TaleResourceHandle
	 * Size -> 0x0008
	 */
	struct FTaleResourceHandle
	{
	public:
		int32_t                                                    ResourceHandle;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    ValidationId;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.QuestVariableOrientedPoint
	 * Size -> 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
	 */
	struct FQuestVariableOrientedPoint : public FQuestVariable
	{	};

	/**
	 * ScriptStruct Athena.TaleQuestNotificationStepEvent
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FTaleQuestNotificationStepEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FNetActorPtr                                        DiscoveringPlayerStateNetPtr;                            // 0x0018(0x0014)
		unsigned char                                              UnknownData_XK6Y[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TaleQuestFailedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FTaleQuestFailedTelemetryEvent
	{
	public:
		class FString                                              FailReason;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TaleQuestTaskCompleteTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FTaleQuestTaskCompleteTelemetryEvent
	{
	public:
		struct FGuid                                               TaskId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TaleQuestTaskStartedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FTaleQuestTaskStartedTelemetryEvent
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      Context;                                                 // 0x0010(0x0010) ZeroConstructor
		struct FGuid                                               TaskId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TaleQuestProgressTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FTaleQuestProgressTelemetryEvent
	{
	public:
		class FString                                              ProgressDescription;                                     // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		TArray<class FString>                                      Context;                                                 // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TaleQuestStateTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FTaleQuestStateTelemetryEvent
	{
	public:
		class FString                                              TaleState;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TaleQuestFailedNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FTaleQuestFailedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UClass*                                              FailureRunnable;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMastDamageLevelChanged
	 * Size -> 0x0010
	 */
	struct FEventMastDamageLevelChanged
	{
	public:
		class AActor*                                              Mast;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageLevel;                                             // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_KNSA[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MastDamageStateChangedEvent
	 * Size -> 0x0010
	 */
	struct FMastDamageStateChangedEvent
	{
	public:
		EMastDamageState                                           NewMastDamageState;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_H516[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Mast;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastFallingProportionBecameStationaryEvent
	 * Size -> 0x0004
	 */
	struct FMastFallingProportionBecameStationaryEvent
	{
	public:
		float                                                      Proportion;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastReachedFallenPositionEvent
	 * Size -> 0x0001
	 */
	struct FMastReachedFallenPositionEvent
	{
	public:
		unsigned char                                              UnknownData_HET8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MastReachedUprightPositionEvent
	 * Size -> 0x0001
	 */
	struct FMastReachedUprightPositionEvent
	{
	public:
		unsigned char                                              UnknownData_ZGL7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MastFallenAngleChangedEvent
	 * Size -> 0x0004
	 */
	struct FMastFallenAngleChangedEvent
	{
	public:
		float                                                      Angle;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastReceivedDamageEvent
	 * Size -> 0x000C
	 */
	struct FMastReceivedDamageEvent
	{
	public:
		int32_t                                                    OldLevelsOfDamage;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    DamageReceived;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    CurrentLevelsOfDamage;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMastSailsUnbillowed
	 * Size -> 0x0001
	 */
	struct FEventMastSailsUnbillowed
	{
	public:
		unsigned char                                              UnknownData_UHT3[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMastSailsBillowed
	 * Size -> 0x0010
	 */
	struct FEventMastSailsBillowed
	{
	public:
		EMastType                                                  MastType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2QRQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ParentShip;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastSailLoweredProportionBecameStationaryEvent
	 * Size -> 0x0004
	 */
	struct FMastSailLoweredProportionBecameStationaryEvent
	{
	public:
		float                                                      Proportion;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastSailLoweredProportionChangedEvent
	 * Size -> 0x000C
	 */
	struct FMastSailLoweredProportionChangedEvent
	{
	public:
		float                                                      Proportion;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeltaTime;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      MovementRate;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastSailAngleBecameStationaryEvent
	 * Size -> 0x0004
	 */
	struct FMastSailAngleBecameStationaryEvent
	{
	public:
		float                                                      Angle;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.MastSailAngleChangedEvent
	 * Size -> 0x000C
	 */
	struct FMastSailAngleChangedEvent
	{
	public:
		float                                                      Angle;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DeltaTime;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      SailTurnRate;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventMastGotPerfectWind
	 * Size -> 0x0001
	 */
	struct FEventMastGotPerfectWind
	{
	public:
		unsigned char                                              UnknownData_FA0E[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShroudBreakerSoftTearDownEvent
	 * Size -> 0x0010
	 */
	struct FShroudBreakerSoftTearDownEvent
	{
	public:
		struct FGuid                                               ShroudBreakerId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShroudBreakerDeactivateEffectsEvent
	 * Size -> 0x0010
	 */
	struct FShroudBreakerDeactivateEffectsEvent
	{
	public:
		struct FGuid                                               ShroudBreakerId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShroudBreakerActivateEffectsEvent
	 * Size -> 0x0010
	 */
	struct FShroudBreakerActivateEffectsEvent
	{
	public:
		struct FGuid                                               ShroudBreakerId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShroudBreakerDeactivatedEvent
	 * Size -> 0x0010
	 */
	struct FShroudBreakerDeactivatedEvent
	{
	public:
		struct FGuid                                               ShroudBreakerId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShroudBreakerActivatedEvent
	 * Size -> 0x0010
	 */
	struct FShroudBreakerActivatedEvent
	{
	public:
		struct FGuid                                               ShroudBreakerId;                                         // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CannonProjectileHitShipWithStatusEffectsEvent
	 * Size -> 0x0020
	 */
	struct FCannonProjectileHitShipWithStatusEffectsEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FStatus>                                     Statuses;                                                // 0x0008(0x0010) ZeroConstructor
		class AActor*                                              Instigator;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CampaignInfo
	 * Size -> 0x0070
	 */
	struct FCampaignInfo
	{
	public:
		unsigned char                                              UnknownData_Z7XX[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HitRegSnapshotProjectileRecord
	 * Size -> 0x0100
	 */
	struct FHitRegSnapshotProjectileRecord
	{
	public:
		class AActor*                                              AttackingActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EHitRegShotType                                            ShotType;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XV0Z[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     FireTime;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             AimDirection;                                            // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FVector                                             AimPosition;                                             // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      BulletLifetime;                                          // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2X3L[0xC];                                   // 0x0034(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          WeaponMeshTransform;                                     // 0x0040(0x0030) IsPlainOldData, NoDestructor
		class UObject*                                             WeaponMesh;                                              // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    AttackGroupSize;                                         // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    SubAttackGroupId;                                        // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FHitRegTrailData                                    ProjectileTrail;                                         // 0x0080(0x0050) ContainsInstancedReference
		TArray<struct FHitRegCapsuleTargetData>                    PossibleTargetCapsules;                                  // 0x00D0(0x0010) ZeroConstructor
		TArray<struct FHitRegRewindSnapshot>                       RewindSnapshots;                                         // 0x00E0(0x0010) ZeroConstructor
		double                                                     RewoundTime;                                             // 0x00F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		double                                                     PreCorrectionRewoundTime;                                // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HitRegSnapshotDisagreementTelemetryEntry
	 * Size -> 0x0028
	 */
	struct FHitRegSnapshotDisagreementTelemetryEntry
	{
	public:
		int32_t                                                    SubAttackGroupId;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RO6Y[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerHitActor;                                          // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              AttackingClientHitActor;                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HitRegSnapshotStaleDataTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FHitRegSnapshotStaleDataTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EHitRegShotType                                            ShotType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EASY[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHitRegSnapshotDisagreementTelemetryEntry>   Disagreements;                                           // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.HitRegSnapshotDisagreementTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FHitRegSnapshotDisagreementTelemetryEvent
	{
	public:
		struct FGuid                                               TelemetryAttackId;                                       // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EHitRegShotType                                            ShotType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MO3E[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHitRegSnapshotDisagreementTelemetryEntry>   Disagreements;                                           // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ActiveHitRegSnapshot
	 * Size -> 0x0018
	 */
	struct FActiveHitRegSnapshot
	{
	public:
		class AActor*                                              AttackingActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              SnapshotActor;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UHitRegSnapshotComponent*                            SnapshotComponent;                                       // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PartialClientHitRegProjectileSnapshotData
	 * Size -> 0x0018
	 */
	struct FPartialClientHitRegProjectileSnapshotData
	{
	public:
		class AActor*                                              SendingPlayer;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FHitRegSnapshotProjectileRecord>             AttackRecords;                                           // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.PartialHitRegProjectileSnapshotData
	 * Size -> 0x0078
	 */
	struct FPartialHitRegProjectileSnapshotData
	{
	public:
		TArray<struct FHitRegSnapshotProjectileRecord>             AttackerClientRecords;                                   // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference
		TArray<struct FHitRegSnapshotProjectileRecord>             ServerRecords;                                           // 0x0010(0x0010) ZeroConstructor, ContainsInstancedReference
		class AActor*                                              ServerAttacker;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TMap<class AActor*, struct FPartialClientHitRegProjectileSnapshotData> RemoteClientRecords;                                     // 0x0028(0x0050) ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.HitRegToggleHitScanEvent
	 * Size -> 0x0001
	 */
	struct FHitRegToggleHitScanEvent
	{
	public:
		unsigned char                                              UnknownData_SCJC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HitRegRecordProjectileShotRpc
	 * Size -> 0x0110 (FullSize[0x0120] - InheritedSize[0x0010])
	 */
	struct FHitRegRecordProjectileShotRpc : public FBoxedRpc
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FHitRegSnapshotProjectileRecord                     AttackRecord;                                            // 0x0020(0x0100) ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.ShipExitedStormEvent
	 * Size -> 0x0010
	 */
	struct FShipExitedStormEvent
	{
	public:
		TWeakObjectPtr<class AActor>                               Storm;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class AActor>                               Ship;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.ShipEnteredStormEvent
	 * Size -> 0x0010
	 */
	struct FShipEnteredStormEvent
	{
	public:
		TWeakObjectPtr<class AActor>                               Storm;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class AActor>                               Ship;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerExitedStormEvent
	 * Size -> 0x0010
	 */
	struct FPlayerExitedStormEvent
	{
	public:
		TWeakObjectPtr<class AActor>                               Storm;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class AController>                          Player;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.PlayerEnteredStormEvent
	 * Size -> 0x0010
	 */
	struct FPlayerEnteredStormEvent
	{
	public:
		TWeakObjectPtr<class AActor>                               Storm;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		TWeakObjectPtr<class AController>                          Player;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.DeactivateContestZoneEvent
	 * Size -> 0x0001
	 */
	struct FDeactivateContestZoneEvent
	{
	public:
		unsigned char                                              UnknownData_SCQF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ActivateContestZoneEvent
	 * Size -> 0x0001
	 */
	struct FActivateContestZoneEvent
	{
	public:
		unsigned char                                              UnknownData_OU3A[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InitialiseContestZoneEvent
	 * Size -> 0x0001
	 */
	struct FInitialiseContestZoneEvent
	{
	public:
		unsigned char                                              UnknownData_TY69[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestLeaderboardUpdateEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FContestLeaderboardUpdateEvent : public FNetworkEventStruct
	{
	public:
		TArray<struct FCrewScore>                                  Leaderboard;                                             // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayersCompletedContestSpawnInRewardStage
	 * Size -> 0x0001
	 */
	struct FPlayersCompletedContestSpawnInRewardStage
	{
	public:
		unsigned char                                              UnknownData_GBPX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayersCompletedContestSpawn
	 * Size -> 0x0001
	 */
	struct FPlayersCompletedContestSpawn
	{
	public:
		unsigned char                                              UnknownData_DZQZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PrepareTavernForContestMigration
	 * Size -> 0x0001
	 */
	struct FPrepareTavernForContestMigration
	{
	public:
		unsigned char                                              UnknownData_R7FG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ContestParticipantJoinedServerEvent
	 * Size -> 0x0010
	 */
	struct FContestParticipantJoinedServerEvent
	{
	public:
		struct FGuid                                               NewCrewJoining;                                          // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientContestManagerServiceCurrentContestStateRepEvent
	 * Size -> 0x0001
	 */
	struct FClientContestManagerServiceCurrentContestStateRepEvent
	{
	public:
		unsigned char                                              UnknownData_U3MS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientContestManagerServiceDestructionEvent
	 * Size -> 0x0001
	 */
	struct FClientContestManagerServiceDestructionEvent
	{
	public:
		unsigned char                                              UnknownData_G0KH[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerContestManagerServiceInitialisationCompleteEvent
	 * Size -> 0x0010
	 */
	struct FServerContestManagerServiceInitialisationCompleteEvent
	{
	public:
		unsigned char                                              UnknownData_MZG8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerStoppedSwimming
	 * Size -> 0x0008
	 */
	struct FEventPlayerStoppedSwimming
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerStartedSwimming
	 * Size -> 0x0008
	 */
	struct FEventPlayerStartedSwimming
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterStoppedDrowning
	 * Size -> 0x0001
	 */
	struct FEventCharacterStoppedDrowning
	{
	public:
		unsigned char                                              UnknownData_AEYT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCharacterStartedDrowning
	 * Size -> 0x0004
	 */
	struct FEventCharacterStartedDrowning
	{
	public:
		float                                                      TimeTillDrown;                                           // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCharacterDrowning
	 * Size -> 0x0001
	 */
	struct FEventCharacterDrowning
	{
	public:
		bool                                                       Drowning;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EmblemSetRuntimeDefinition
	 * Size -> 0x0010
	 */
	struct FEmblemSetRuntimeDefinition
	{
	public:
		unsigned char                                              UnknownData_MPZ9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EmblemRuntimeDefinition
	 * Size -> 0x0140
	 */
	struct FEmblemRuntimeDefinition
	{
	public:
		unsigned char                                              UnknownData_FPUO[0x130];                                 // 0x0000(0x0130) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPopUpMessageDesc*                                   UnlockPopUp;                                             // 0x0130(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpAudioDesc*                                     UnlockPopUpAudioOverrides;                               // 0x0138(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EmblemProgressRuntimeDefinition
	 * Size -> 0x0018
	 */
	struct FEmblemProgressRuntimeDefinition
	{
	public:
		unsigned char                                              UnknownData_5DK3[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.InteractingActorData
	 * Size -> 0x0014
	 */
	struct FInteractingActorData
	{
	public:
		unsigned char                                              UnknownData_WV0L[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PreviousCollisionProfile;                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MGC6[0x4];                                   // 0x0010(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TimedDoorFinishedLoadingKeySequenceEvent
	 * Size -> 0x0001
	 */
	struct FTimedDoorFinishedLoadingKeySequenceEvent
	{
	public:
		unsigned char                                              UnknownData_L6CE[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TimedDoorStartClosingEvent
	 * Size -> 0x0001
	 */
	struct FTimedDoorStartClosingEvent
	{
	public:
		unsigned char                                              UnknownData_P3BY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TimedDoorStartOpeningEvent
	 * Size -> 0x0001
	 */
	struct FTimedDoorStartOpeningEvent
	{
	public:
		unsigned char                                              UnknownData_U7IW[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TimedDoorClosedEvent
	 * Size -> 0x0001
	 */
	struct FTimedDoorClosedEvent
	{
	public:
		unsigned char                                              UnknownData_S9QY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TimedDoorOpenedEvent
	 * Size -> 0x0001
	 */
	struct FTimedDoorOpenedEvent
	{
	public:
		unsigned char                                              UnknownData_3R3J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ElevatorHeightCallback
	 * Size -> 0x0038
	 */
	struct FElevatorHeightCallback
	{
	public:
		unsigned char                                              UnknownData_D0LL[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ClientRequestExitConcealingObjectNetworkEvent
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FClientRequestExitConcealingObjectNetworkEvent : public FNetworkEventStruct
	{	};

	/**
	 * ScriptStruct Athena.EventConcealingObjectUsed
	 * Size -> 0x0008
	 */
	struct FEventConcealingObjectUsed
	{
	public:
		class AActor*                                              UsingActor;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WreckSpawnBlockingData
	 * Size -> 0x0060
	 */
	struct FWreckSpawnBlockingData
	{
	public:
		unsigned char                                              UnknownData_6TY9[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WreckMatch
	 * Size -> 0x0048
	 */
	struct FWreckMatch
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_9OY5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Wreck[0x10];                                             // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.WreckMatch.Wreck
		unsigned char                                              UnknownData_A1W1[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceData;                                            // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               OwningCrewID;                                            // 0x0034(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1TRS[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.WreckSpawnBlockingObjectArrays
	 * Size -> 0x0078
	 */
	struct FWreckSpawnBlockingObjectArrays
	{
	public:
		unsigned char                                              UnknownData_U271[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     ShipsLocations;                                          // 0x0020(0x0010) ZeroConstructor
		unsigned char                                              AmbientShipwrecks[0x10];                                 // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty Athena.WreckSpawnBlockingObjectArrays.AmbientShipwrecks
		unsigned char                                              ActiveCustomShipwrecks[0x10];                            // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty Athena.WreckSpawnBlockingObjectArrays.ActiveCustomShipwrecks
		TArray<struct FWreckMatch>                                 AmbientWrecksWithoutClosePlayers;                        // 0x0050(0x0010) ZeroConstructor
		TArray<struct FWreckMatch>                                 AmbientWrecksWithClosePlayers;                           // 0x0060(0x0010) ZeroConstructor
		unsigned char                                              UnknownData_ELDU[0x8];                                   // 0x0070(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipwreckDiscoveredRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FShipwreckDiscoveredRpc : public FBoxedRpc
	{
	public:
		class AShipwreck*                                          Wreck;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipwreckDiscoveredNotification
	 * Size -> 0x0038
	 */
	struct FEventShipwreckDiscoveredNotification
	{
	public:
		class FText                                                WreckName;                                               // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_38MR[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredShipwreckVicinity
	 * Size -> 0x0018
	 */
	struct FEventPlayerEnteredShipwreckVicinity
	{
	public:
		class AController*                                         PirateController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              Shipwreck[0x10];                                         // 0x0008(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventPlayerEnteredShipwreckVicinity.Shipwreck
	};

	/**
	 * ScriptStruct Athena.WreckEvictionAfterMigrationFailedTelemetryEvent
	 * Size -> 0x000C
	 */
	struct FWreckEvictionAfterMigrationFailedTelemetryEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.DestroyingUnsafeWreckTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FDestroyingUnsafeWreckTelemetryEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsCustomWreck;                                           // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6BLC[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NoValidWreckLocationFoundTelemetryEvent
	 * Size -> 0x000C
	 */
	struct FNoValidWreckLocationFoundTelemetryEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.DestroyingUnsafeExpiredWreckTelemetryEvent
	 * Size -> 0x000C
	 */
	struct FDestroyingUnsafeExpiredWreckTelemetryEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TaleQuestSelectWreckLocationTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FTaleQuestSelectWreckLocationTelemetryEvent
	{
	public:
		class FString                                              EventIdent;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		int32_t                                                    NumLocations;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    LocationIndex;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    KeyIndex;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_ZLCO[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            FlagResponses;                                           // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.DestroyingUnsafeWreckEvent
	 * Size -> 0x0020
	 */
	struct FDestroyingUnsafeWreckEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsCustomWreck;                                           // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HBOU[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.NoValidWreckLocationFoundEvent
	 * Size -> 0x001C
	 */
	struct FNoValidWreckLocationFoundEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.DestroyingUnsafeExpiredWreckEvent
	 * Size -> 0x001C
	 */
	struct FDestroyingUnsafeExpiredWreckEvent
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ExpireCustomWreckEvent
	 * Size -> 0x0010
	 */
	struct FExpireCustomWreckEvent
	{
	public:
		struct FGuid                                               CrewOwner;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSkeletonFortDoorUnlocked
	 * Size -> 0x0001
	 */
	struct FEventSkeletonFortDoorUnlocked
	{
	public:
		unsigned char                                              UnknownData_O9KD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FishingFishFishingRodDebugDrawInfo
	 * Size -> 0x0040
	 */
	struct FFishingFishFishingRodDebugDrawInfo
	{
	public:
		unsigned char                                              UnknownData_5QCK[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FishingFishFishingRodInfo
	 * Size -> 0x0060
	 */
	struct FFishingFishFishingRodInfo
	{
	public:
		unsigned char                                              UnknownData_G2S7[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerGameFishingTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FPlayerGameFishingTelemetryEvent
	{
	public:
		float                                                      FishingDuration;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EFishSpawnTimeOfDay                                        TimeOfDay;                                               // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       InPool;                                                  // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CloseToActiveFortOrSkellyShip;                           // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       InStorm;                                                 // 0x0007(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       CloseToShipwreck;                                        // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_YA1U[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Sea;                                                     // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              IslandInRange;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		EBaitType                                                  BaitType;                                                // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HODS[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RewardId;                                                // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		EFishingRodServerState                                     ServerState;                                             // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_FPON[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FishingActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FFishingActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.EventFishingFishCollisionDetected
	 * Size -> 0x0001
	 */
	struct FEventFishingFishCollisionDetected
	{
	public:
		unsigned char                                              UnknownData_IRGL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingFishEscaping
	 * Size -> 0x0001
	 */
	struct FEventFishingFishEscaping
	{
	public:
		unsigned char                                              UnknownData_SXLK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingFishCaught
	 * Size -> 0x0008
	 */
	struct FEventFishingFishCaught
	{
	public:
		class AActor*                                              CaughtActor;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFishingFishBecameTired
	 * Size -> 0x0001
	 */
	struct FEventFishingFishBecameTired
	{
	public:
		unsigned char                                              UnknownData_Y23E[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingFishStartedBattling
	 * Size -> 0x0001
	 */
	struct FEventFishingFishStartedBattling
	{
	public:
		unsigned char                                              UnknownData_24WR[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingFishFloatBitten
	 * Size -> 0x0001
	 */
	struct FEventFishingFishFloatBitten
	{
	public:
		unsigned char                                              UnknownData_1XZP[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingReelingWhileBattlingStateChange
	 * Size -> 0x0001
	 */
	struct FEventFishingReelingWhileBattlingStateChange
	{
	public:
		bool                                                       IsReelingWhileBattling;                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetJIPFishingAnimationState
	 * Size -> 0x0001
	 */
	struct FEventSetJIPFishingAnimationState
	{
	public:
		EFishingState                                              State;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFishingRodFishCaught
	 * Size -> 0x0001
	 */
	struct FEventFishingRodFishCaught
	{
	public:
		unsigned char                                              UnknownData_X7XY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventFishingRodFishingStateChanged
	 * Size -> 0x0002
	 */
	struct FEventFishingRodFishingStateChanged
	{
	public:
		bool                                                       IsInFishingState;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsFishHooked;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetFishingIsComedyItem
	 * Size -> 0x0001
	 */
	struct FEventSetFishingIsComedyItem
	{
	public:
		bool                                                       IsComedyItem;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetFishingFloatActor
	 * Size -> 0x0008
	 */
	struct FEventSetFishingFloatActor
	{
	public:
		class AActor*                                              FishingFloat;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSetRemappedPlayerDirection
	 * Size -> 0x0008
	 */
	struct FEventSetRemappedPlayerDirection
	{
	public:
		struct FVector2D                                           PlayerDirection;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetFishingRodWieldedItem
	 * Size -> 0x0008
	 */
	struct FEventSetFishingRodWieldedItem
	{
	public:
		class AActor*                                              FishingRod;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSetFishingLineSnapShake
	 * Size -> 0x0004
	 */
	struct FEventSetFishingLineSnapShake
	{
	public:
		float                                                      LineSnapShake;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSetFishingTensionShake
	 * Size -> 0x0004
	 */
	struct FEventSetFishingTensionShake
	{
	public:
		float                                                      TensionShake;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSetFishingRodBend
	 * Size -> 0x0008
	 */
	struct FEventSetFishingRodBend
	{
	public:
		struct FVector2D                                           RodBend;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSetFishingReelingSpeed
	 * Size -> 0x0004
	 */
	struct FEventSetFishingReelingSpeed
	{
	public:
		float                                                      ReelingSpeed;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSetFishingAnimationState
	 * Size -> 0x0001
	 */
	struct FEventSetFishingAnimationState
	{
	public:
		EFishingState                                              State;                                                   // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventFishingCastingFailed
	 * Size -> 0x0001
	 */
	struct FEventFishingCastingFailed
	{
	public:
		unsigned char                                              UnknownData_NLFZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerStoppedPlayingShanty
	 * Size -> 0x0008
	 */
	struct FEventPlayerStoppedPlayingShanty
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventNewPlayerStartedPlayingShanty
	 * Size -> 0x0018
	 */
	struct FEventNewPlayerStartedPlayingShanty
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Instrument;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AActor*                                              Ensemble;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HuntersCryDisableTimedFail
	 * Size -> 0x0001
	 */
	struct FAthena_FHuntersCryDisableTimedFail
	{
	public:
		unsigned char                                              UnknownData_4XIV[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HuntersCryFailEvent
	 * Size -> 0x0001
	 */
	struct FHuntersCryFailEvent
	{
	public:
		unsigned char                                              UnknownData_5UA0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HuntersCrySuccessEvent
	 * Size -> 0x0001
	 */
	struct FHuntersCrySuccessEvent
	{
	public:
		unsigned char                                              UnknownData_6R3O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventTavernStepsOpened
	 * Size -> 0x0001
	 */
	struct FEventTavernStepsOpened
	{
	public:
		unsigned char                                              UnknownData_VMK2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBellRung
	 * Size -> 0x0001
	 */
	struct FEventBellRung
	{
	public:
		unsigned char                                              UnknownData_OT0H[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBuriedItemRevealed
	 * Size -> 0x0008
	 */
	struct FEventBuriedItemRevealed
	{
	public:
		class AItemInfo*                                           BuriedItem;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerStartedDiggingEvent
	 * Size -> 0x0008
	 */
	struct FPlayerStartedDiggingEvent
	{
	public:
		class AActor*                                              ActorBeingDugUp;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventDiggingStarted
	 * Size -> 0x0010
	 */
	struct FEventDiggingStarted
	{
	public:
		EDigDirection                                              DigDirection;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0KPP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              ActorBeingDugUp;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HiddenActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FHiddenActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.HideInObjectActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
	 */
	struct FHideInObjectActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		struct FNetActorPtr                                        LoadableObject;                                          // 0x0048(0x0014)
		unsigned char                                              UnknownData_PXF0[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationDataPreview
	 * Size -> 0x0010
	 */
	struct FPetAnimationDataPreview
	{
	public:
		struct FStringAssetReference                               MontageData;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventAnimationAllowInterrupt
	 * Size -> 0x0001
	 */
	struct FEventAnimationAllowInterrupt
	{
	public:
		unsigned char                                              UnknownData_Q3I1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAnimationBlockInterrupt
	 * Size -> 0x0001
	 */
	struct FEventAnimationBlockInterrupt
	{
	public:
		unsigned char                                              UnknownData_LJ19[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PetAnimationWeighting
	 * Size -> 0x0008
	 */
	struct FPetAnimationWeighting
	{
	public:
		EAthenaAnimationPetRoamingState                            AnimationState;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8VRS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weighting;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.WeightedPetAnimationSelector
	 * Size -> 0x00A0
	 */
	struct FWeightedPetAnimationSelector
	{
	public:
		TArray<struct FPetAnimationWeighting>                      Weightings;                                              // 0x0000(0x0010) Edit, ZeroConstructor
		unsigned char                                              UnknownData_TULN[0x90];                                  // 0x0010(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LinearTransitionActionStateConstructionInfo
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	struct FLinearTransitionActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class USceneComponent*                                     SceneComponent;                                          // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FVector                                             TargetLocation;                                          // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_RWE5[0xC];                                   // 0x0044(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               TargetRotation;                                          // 0x0050(0x0010) IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_F8TN[0x20];                                  // 0x0060(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLocationMapChestFound
	 * Size -> 0x0001
	 */
	struct FEventLocationMapChestFound
	{
	public:
		unsigned char                                              UnknownData_MCJ7[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventMapPiecedObtained
	 * Size -> 0x0004
	 */
	struct FEventMapPiecedObtained
	{
	public:
		unsigned char                                              UnknownData_1TPP[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelDestinationInfo
	 * Size -> 0x0040
	 */
	struct FTunnelDestinationInfo
	{
	public:
		unsigned char                                              UnknownData_5IOS[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArrivalTunnelOfTheDamnedCompletedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FArrivalTunnelOfTheDamnedCompletedTelemetryEvent
	{
	public:
		struct FVector                                             DestinationLocation;                                     // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FRotator                                            DestinationRotation;                                     // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedMigrationFailedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FTunnelOfTheDamnedMigrationFailedTelemetryEvent
	{
	public:
		class FString                                              Reason;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedMigrationSucceededTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FTunnelOfTheDamnedMigrationSucceededTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_8BBO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LastPlayerArrivedInTunnelOfTheDamnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FLastPlayerArrivedInTunnelOfTheDamnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_B405[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FirstPlayerArrivedInTunnelOfTheDamnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FFirstPlayerArrivedInTunnelOfTheDamnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_NIEC[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMemberLeftTunnelOfTheDamnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewMemberLeftTunnelOfTheDamnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_6PCK[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMemberEnteredTunnelOfTheDamnedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewMemberEnteredTunnelOfTheDamnedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_HBW6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedHandoverCompletedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FTunnelOfTheDamnedHandoverCompletedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_X25X[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedDestroyedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FTunnelOfTheDamnedDestroyedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_7VMJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedInitializedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FTunnelOfTheDamnedInitializedTelemetryEvent
	{
	public:
		class FString                                              RequestedMatchmakingPlayModeTag;                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedBaseTelemetryFragmentInput
	 * Size -> 0x0020
	 */
	struct FTunnelOfTheDamnedBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		struct FGuid                                               TunnelInstanceId;                                        // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              TunnelType;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedBaseTelemetryFragment
	 * Size -> 0x0020
	 */
	struct FTunnelOfTheDamnedBaseTelemetryFragment
	{
	public:
		struct FGuid                                               TunnelInstanceId;                                        // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              TunnelType;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TeleportShipToTunnelEvent
	 * Size -> 0x0008
	 */
	struct FTeleportShipToTunnelEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedTransitionDynamicFogEvent
	 * Size -> 0x0001
	 */
	struct FTunnelOfTheDamnedTransitionDynamicFogEvent
	{
	public:
		unsigned char                                              UnknownData_KI2K[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewEnteredTunnelOfTheDamnedPortalProximityEvent
	 * Size -> 0x0008
	 */
	struct FCrewEnteredTunnelOfTheDamnedPortalProximityEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedFailedNetworkEvent
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FTunnelOfTheDamnedFailedNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedDestroyedEvent
	 * Size -> 0x0004
	 */
	struct FTunnelOfTheDamnedDestroyedEvent
	{
	public:
		unsigned char                                              UnknownData_8OKV[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedMigrationSucceededEvent
	 * Size -> 0x0004
	 */
	struct FTunnelOfTheDamnedMigrationSucceededEvent
	{
	public:
		unsigned char                                              UnknownData_IKOC[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewEnteredTunnelOfTheDamnedEvent
	 * Size -> 0x0004
	 */
	struct FCrewEnteredTunnelOfTheDamnedEvent
	{
	public:
		unsigned char                                              UnknownData_DE5Z[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArrivalTunnelOfTheDamnedActionStateConstructionInfo
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	struct FArrivalTunnelOfTheDamnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    DepartureTunnelStreamingLevelId;                         // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0BC4[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArrivalTunnelOfTheDamnedFadeComplete
	 * Size -> 0x0001
	 */
	struct FArrivalTunnelOfTheDamnedFadeComplete
	{
	public:
		unsigned char                                              UnknownData_JY97[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ArrivalTunnelOfTheDamnedActionStateSerialisableData
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FArrivalTunnelOfTheDamnedActionStateSerialisableData : public FActionStateSerialisableData
	{	};

	/**
	 * ScriptStruct Athena.EjectFromTunnelOfTheDamnedActionStateConstructionInfo
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	struct FEjectFromTunnelOfTheDamnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		int32_t                                                    TunnelId;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TunnelStreamingLevelId;                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTeleportLocation                                   TeleportLocation;                                        // 0x0038(0x0030) ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.EjectFromTunnelOfTheDamnedFadeComplete
	 * Size -> 0x0001
	 */
	struct FEjectFromTunnelOfTheDamnedFadeComplete
	{
	public:
		unsigned char                                              UnknownData_VM2W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EnterTunnelOfTheDamnedActionStateConstructionInfo
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	struct FEnterTunnelOfTheDamnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		int32_t                                                    TunnelId;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TunnelStreamingLevelId;                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FTeleportLocation                                   TeleportLocation;                                        // 0x0038(0x0030) ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.MapTableStateForTunnel
	 * Size -> 0x0010
	 */
	struct FMapTableStateForTunnel
	{
	public:
		class AActor*                                              Table;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       Enabled;                                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FBYP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LastCrewMemberEnteredTunnel
	 * Size -> 0x0010
	 */
	struct FLastCrewMemberEnteredTunnel
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EnterTunnelOfTheDamnedFadeComplete
	 * Size -> 0x0001
	 */
	struct FEnterTunnelOfTheDamnedFadeComplete
	{
	public:
		unsigned char                                              UnknownData_RFBF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ExitTunnelOfTheDamnedActionStateConstructionInfo
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	struct FExitTunnelOfTheDamnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		struct FVector                                             TunnelLocation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4YK4[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCameraAnim*                                         CameraAnim;                                              // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UCurveFloat*                                         CameraBlendCurve;                                        // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SinkingTunnelOfTheDamnedActionStateConstructionInfo
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FSinkingTunnelOfTheDamnedActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{	};

	/**
	 * ScriptStruct Athena.TunnelOfTheDamnedMigrationFailed
	 * Size -> 0x0010
	 */
	struct FTunnelOfTheDamnedMigrationFailed
	{
	public:
		unsigned char                                              UnknownData_1NJ9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TunnelsOfTheDamnedMigrationDataEntry
	 * Size -> 0x0040
	 */
	struct FTunnelsOfTheDamnedMigrationDataEntry
	{
	public:
		struct FTransform                                          ShipsTransform;                                          // 0x0000(0x0030) IsPlainOldData, NoDestructor
		struct FGuid                                               CrewId;                                                  // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TunnelsOfTheDamnedMigrationDataHolder
	 * Size -> 0x0010
	 */
	struct FTunnelsOfTheDamnedMigrationDataHolder
	{
	public:
		TArray<struct FTunnelsOfTheDamnedMigrationDataEntry>       CrewEntries;                                             // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.InvasionDepartureTunnelRivalCrewFoundEvent
	 * Size -> 0x0001
	 */
	struct FInvasionDepartureTunnelRivalCrewFoundEvent
	{
	public:
		unsigned char                                              UnknownData_V9NM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MigrationRequestedAutomationEvent
	 * Size -> 0x0008
	 */
	struct FMigrationRequestedAutomationEvent
	{
	public:
		class UWaitForTunnelOfTheDamnedMigrationTaleQuestStep*     MigrationStep;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ItemBuriedHistoryMetaWrapper
	 * Size -> 0x0140 (FullSize[0x0158] - InheritedSize[0x0018])
	 */
	struct FItemBuriedHistoryMetaWrapper : public FItemMetaBase
	{
	public:
		unsigned char                                              UnknownData_GFGP[0x140];                                 // 0x0018(0x0140) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HaulItemDescSpawnDataKey
	 * Size -> 0x0004
	 */
	struct FHaulItemDescSpawnDataKey
	{
	public:
		unsigned char                                              SeaRegionIndex;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              HaulIndex;                                               // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint16_t                                                   ItemSpawnDataIndex;                                      // 0x0002(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TavernBoardCreateMapFailEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardCreateMapFailEvent
	{
	public:
		unsigned char                                              UnknownData_GN2L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardCreateMapSuccessEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardCreateMapSuccessEvent
	{
	public:
		unsigned char                                              UnknownData_ZEWM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ITavernBoardMap
	 * Size -> 0x0068
	 */
	struct FITavernBoardMap
	{
	public:
		TArray<class FString>                                      Creators;                                                // 0x0000(0x0010) ZeroConstructor
		class FString                                              IconPath;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      IconRotation;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               Id;                                                      // 0x0024(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsAvailable;                                             // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_4VDR[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash
		EWorldRegion                                               WorldRegion;                                             // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Q3X7[0x1F];                                  // 0x0049(0x001F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardCreateMapRequestEvent
	 * Size -> 0x0068
	 */
	struct FTavernBoardCreateMapRequestEvent
	{
	public:
		struct FITavernBoardMap                                    Map;                                                     // 0x0000(0x0068)
	};

	/**
	 * ScriptStruct Athena.TavernBoardTakeMapFailEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardTakeMapFailEvent
	{
	public:
		unsigned char                                              UnknownData_GXCS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardTakeMapSuccessEvent
	 * Size -> 0x0008
	 */
	struct FTavernBoardTakeMapSuccessEvent
	{
	public:
		struct FCappedCount                                        TakeLimit;                                               // 0x0000(0x0008)
	};

	/**
	 * ScriptStruct Athena.TavernBoardTakeMapRequestEvent
	 * Size -> 0x0068
	 */
	struct FTavernBoardTakeMapRequestEvent
	{
	public:
		struct FITavernBoardMap                                    Map;                                                     // 0x0000(0x0068)
	};

	/**
	 * ScriptStruct Athena.TavernBoardForceCloseEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardForceCloseEvent
	{
	public:
		unsigned char                                              UnknownData_TN0F[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardClosedEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardClosedEvent
	{
	public:
		unsigned char                                              UnknownData_EGYM[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardRequestOpenEvent
	 * Size -> 0x0008
	 */
	struct FTavernBoardRequestOpenEvent
	{
	public:
		struct FCappedCount                                        TakeLimit;                                               // 0x0000(0x0008)
	};

	/**
	 * ScriptStruct Athena.TavernBoardAvailableMapsRequestEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardAvailableMapsRequestEvent
	{
	public:
		unsigned char                                              UnknownData_MBTA[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardAvailableMapsEvent
	 * Size -> 0x0010
	 */
	struct FTavernBoardAvailableMapsEvent
	{
	public:
		TArray<struct FITavernBoardMap>                            Maps;                                                    // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TavernBoardMyMapsRequestEvent
	 * Size -> 0x0001
	 */
	struct FTavernBoardMyMapsRequestEvent
	{
	public:
		unsigned char                                              UnknownData_CXZJ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TavernBoardMyMapsEvent
	 * Size -> 0x0010
	 */
	struct FTavernBoardMyMapsEvent
	{
	public:
		TArray<struct FITavernBoardMap>                            MyMaps;                                                  // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceStoreMapsChangedEvent
	 * Size -> 0x0001
	 */
	struct FPlayerBuriedItemServiceStoreMapsChangedEvent
	{
	public:
		unsigned char                                              UnknownData_GGXY[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceCrewMapsChangedEvent
	 * Size -> 0x0010
	 */
	struct FPlayerBuriedItemServiceCrewMapsChangedEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceMapTakenFromTavernBoardEvent
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceMapTakenFromTavernBoardEvent
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceMapAddedToTavernBoardEvent
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceMapAddedToTavernBoardEvent
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceMapBundleGiftedEvent
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceMapBundleGiftedEvent
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceMapBundlePickedUpEvent
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceMapBundlePickedUpEvent
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServiceMapBundlePlacedOnTableEvent
	 * Size -> 0x0018
	 */
	struct FPlayerBuriedItemServiceMapBundlePlacedOnTableEvent
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   PopUpDesc;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemsDeferredRewardCompensationTelemetryEvent
	 * Size -> 0x0060
	 */
	struct FPlayerBuriedItemsDeferredRewardCompensationTelemetryEvent
	{
	public:
		struct FGuid                                               RequestID;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                CompanyAffiliation;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                RewardId;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FString                                              UserId;                                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              PirateId;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       DontRewardCurrency;                                      // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardXp;                                            // 0x0041(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DontRewardSeasonXp;                                      // 0x0042(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_SFQ3[0x5];                                   // 0x0043(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DeferralReason;                                          // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash
		double                                                     RewardMultiplier;                                        // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemsMapTakenFromStoreTelemetryEvent
	 * Size -> 0x0044
	 */
	struct FPlayerBuriedItemsMapTakenFromStoreTelemetryEvent
	{
	public:
		struct FGuid                                               MapBundleId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               TakingCrewId;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               TakingCrewSessionId;                                     // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               MapID;                                                   // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsPlayerGenerated;                                       // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_QJG5[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemsMapAddedToStoreTelemetryEvent
	 * Size -> 0x0044
	 */
	struct FPlayerBuriedItemsMapAddedToStoreTelemetryEvent
	{
	public:
		struct FGuid                                               MapBundleId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OwningCrewID;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OwningCrewSessionId;                                     // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               MapID;                                                   // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		uint32_t                                                   AverageGoldCost;                                         // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemServicePlayerTreasureDiscoveredTelemetryEvent
	 * Size -> 0x0070
	 */
	struct FPlayerBuriedItemServicePlayerTreasureDiscoveredTelemetryEvent
	{
	public:
		EBootyTypes                                                BootyType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0L75[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               BootyId;                                                 // 0x0004(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KKSY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FGuid                                               BuriedByCrewId;                                          // 0x0028(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               DiscoveredByCrewId;                                      // 0x0038(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FGuid>                                       CrewBuryHistory;                                         // 0x0048(0x0010) ZeroConstructor
		TArray<struct FGuid>                                       CrewDiscoverHistory;                                     // 0x0058(0x0010) ZeroConstructor
		bool                                                       WasDeferredRewardSent;                                   // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_OP62[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemsMapBundleBecameVisible
	 * Size -> 0x0001
	 */
	struct FPlayerBuriedItemsMapBundleBecameVisible
	{
	public:
		unsigned char                                              UnknownData_PCB1[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AddMapToContainerRPC
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FAddMapToContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		struct FGuid                                               MapToAddToContainer;                                     // 0x0024(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0W4Y[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ApproachedPlayerGeneratedMapsContainer
	 * Size -> 0x0001
	 */
	struct FApproachedPlayerGeneratedMapsContainer
	{
	public:
		unsigned char                                              UnknownData_BW9O[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerGeneratedMapsContainerHealthChangedCloseInventoryRpc
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FPlayerGeneratedMapsContainerHealthChangedCloseInventoryRpc : public FBoxedRpc
	{	};

	/**
	 * ScriptStruct Athena.PlayerGeneratedMapsContainerUnregisterServerEventsRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FPlayerGeneratedMapsContainerUnregisterServerEventsRpc : public FBoxedRpc
	{
	public:
		class UObject*                                             InPlayerGeneratedMapsContainerOwnerObject;               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TakeMapFromContainerRPC
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FTakeMapFromContainerRPC : public FBoxedRpc
	{
	public:
		struct FNetSubObjectPtr                                    Container;                                               // 0x0010(0x0014)
		struct FGuid                                               MapToTake;                                               // 0x0024(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_KSK8[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBuriedItemsMapBundlePickedUpTelemetryEvent
	 * Size -> 0x0080
	 */
	struct FPlayerBuriedItemsMapBundlePickedUpTelemetryEvent
	{
	public:
		struct FGuid                                               MapBundleId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OwningCrewID;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               PickedUpByPlayerId;                                      // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               PickedUpByCrewId;                                        // 0x0030(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               OwningCrewSessionId;                                     // 0x0040(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               PickedUpByCrewSessionId;                                 // 0x0050(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FGuid>                                       PlayerBuriedItemMapIds;                                  // 0x0060(0x0010) ZeroConstructor
		TArray<struct FGuid>                                       MapIdsOriginalOwners;                                    // 0x0070(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.FortCompletedTelemetryEvent
	 * Size -> 0x0024
	 */
	struct FFortCompletedTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FortIsland;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FortType;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       PresentForCompletion;                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TTXL[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FortStartedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FFortStartedTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FortIsland;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FortType;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortDespawnTelemetryEvent
	 * Size -> 0x001C
	 */
	struct FFortDespawnTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EEventFortDestructionReason                                DestructionReason;                                       // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_4PXA[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FortType;                                                // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortSpawnTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FFortSpawnTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ConfigSpawnId;                                           // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FortName;                                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                FortType;                                                // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortKeyUsedTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FFortKeyUsedTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               FortKeyId;                                               // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FortName;                                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FName                                                KeyType;                                                 // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FortTargetKilledTelemetryEvent
	 * Size -> 0x0030
	 */
	struct FFortTargetKilledTelemetryEvent
	{
	public:
		struct FGuid                                               FortKeyId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              FortTargetName;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             FortKeyDroppedLocation;                                  // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_6LGW[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.FortWaveCompletedTelemetryEvent
	 * Size -> 0x0018
	 */
	struct FFortWaveCompletedTelemetryEvent
	{
	public:
		struct FGuid                                               EncounteredObjectId;                                     // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    FortWaveIndex;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    TotalFortWaves;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeaFortKeyPickedUpNetworkEvent
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSeaFortKeyPickedUpNetworkEvent : public FNetworkEventStruct
	{
	public:
		class UPopUpMessageDesc*                                   KeyDiscoveredPopUpDesc;                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UPopUpMessageDesc*                                   KeyHandInHintPopUpDesc;                                  // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SeaFortStateChangeTelemetryEvent
	 * Size -> 0x001C
	 */
	struct FSeaFortStateChangeTelemetryEvent
	{
	public:
		struct FGuid                                               FortId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                FortIslandName;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESeaFortState                                              OldState;                                                // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESeaFortState                                              NewState;                                                // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_COD3[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCrewShipManifestEntitlementComponentUpdated
	 * Size -> 0x0001
	 */
	struct FEventCrewShipManifestEntitlementComponentUpdated
	{
	public:
		unsigned char                                              UnknownData_J4ZO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCrewShipManifestCurrentActiveVoyageUpdated
	 * Size -> 0x0010
	 */
	struct FEventCrewShipManifestCurrentActiveVoyageUpdated
	{
	public:
		unsigned char                                              UnknownData_HUQ4[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCrewShipManifestCurrentActiveTaleUpdated
	 * Size -> 0x0018
	 */
	struct FEventCrewShipManifestCurrentActiveTaleUpdated
	{
	public:
		unsigned char                                              UnknownData_7IMJ[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipVoyageSaveData
	 * Size -> 0x0020
	 */
	struct FShipVoyageSaveData
	{
	public:
		TArray<struct FShipVoyageModel>                            AddedVoyages;                                            // 0x0000(0x0010) ZeroConstructor
		TArray<struct FShipVoyageModel>                            RemovedVoyages;                                          // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetShipLoadoutPersistenceResponseModel
	 * Size -> 0x0030
	 */
	struct FGetShipLoadoutPersistenceResponseModel : public FPersistenceModel
	{
	public:
		TArray<struct FShipPartCustomizationModel>                 ShipPartCustomisations;                                  // 0x0000(0x0010) ZeroConstructor
		TArray<struct FTrinketLoadoutModelEntry>                   Trinkets;                                                // 0x0010(0x0010) ZeroConstructor
		TArray<struct FShipVoyageModel>                            Voyages;                                                 // 0x0020(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GetShipPersistenceResponseModel
	 * Size -> 0x0078
	 */
	struct FGetShipPersistenceResponseModel : public FPersistenceModel
	{
	public:
		struct FGuid                                               Id;                                                      // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EShipType                                                  ShipType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JME1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FShipPersistenceModel                               State;                                                   // 0x0028(0x0050)
	};

	/**
	 * ScriptStruct Athena.WieldableBookPageRenderer
	 * Size -> 0x0010
	 */
	struct FWieldableBookPageRenderer
	{
	public:
		unsigned char                                              UnknownData_7ACW[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UWieldableBookRendererSettings>       WeakSettingsPtr;                                         // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.WieldableBookPageRenderingTriggerRedraw
	 * Size -> 0x0002
	 */
	struct FWieldableBookPageRenderingTriggerRedraw
	{
	public:
		EWieldableBookPageRenderingMode                            PreviousMode;                                            // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EWieldableBookPageRenderingMode                            NewMode;                                                 // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogSetupContext
	 * Size -> 0x000C
	 */
	struct FCaptainsLogSetupContext
	{
	public:
		unsigned char                                              UnknownData_OJ5G[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogPlayerStatEvent
	 * Size -> 0x0020
	 */
	struct FCaptainsLogPlayerStatEvent
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FPlayerStat                                         PlayerStat;                                              // 0x0010(0x0004)
		unsigned char                                              UnknownData_GSIJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Value;                                                   // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CaptainsLogCrewAccolades
	 * Size -> 0x00E8
	 */
	struct FCaptainsLogCrewAccolades
	{
	public:
		class FText                                                CrewNickname;                                            // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_RAG4[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    PirateTitleIndex;                                        // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_0DV3[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                AccoladeOne;                                             // 0x0040(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_KB9S[0x20];                                  // 0x0058(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                AccoladeTwo;                                             // 0x0078(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_CSOP[0x20];                                  // 0x0090(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                AccoladeThree;                                           // 0x00B0(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_T2RO[0x20];                                  // 0x00C8(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.CaptainedCrewLog
	 * Size -> 0x00E0
	 */
	struct FCaptainedCrewLog
	{
	public:
		unsigned char                                              UnknownData_VLEE[0xE0];                                  // 0x0000(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogAccoladesCommittedEvent
	 * Size -> 0x0020
	 */
	struct FCaptainsLogAccoladesCommittedEvent
	{
	public:
		TArray<class FString>                                      PirateAccolades;                                         // 0x0000(0x0010) ZeroConstructor
		TArray<class FString>                                      ShipAccolades;                                           // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CaptainsLogInteractableActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FCaptainsLogInteractableActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		TWeakObjectPtr<class AActor>                               OwningActor;                                             // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
	};

	/**
	 * ScriptStruct Athena.EventCaptainsLogbookRequestUndock
	 * Size -> 0x0001
	 */
	struct FEventCaptainsLogbookRequestUndock
	{
	public:
		unsigned char                                              UnknownData_VMPT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CaptainsLogbookPageRenderer
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FCaptainsLogbookPageRenderer : public FWieldableBookPageRenderer
	{
	public:
		unsigned char                                              UnknownData_1FCY[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipsLogServiceForceUpdateRpc
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FShipsLogServiceForceUpdateRpc : public FBoxedRpc
	{
	public:
		class AController*                                         Controller;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected
		struct FCaptainsLogAccoladesCommittedEvent                 UpdateEvent;                                             // 0x0028(0x0020) Protected
	};

	/**
	 * ScriptStruct Athena.EventSwimmingCreatureUnderwaterStateChange
	 * Size -> 0x0001
	 */
	struct FEventSwimmingCreatureUnderwaterStateChange
	{
	public:
		bool                                                       IsAboveWater;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventSwimmingCreatureDeathCustomEvent
	 * Size -> 0x0001
	 */
	struct FEventSwimmingCreatureDeathCustomEvent
	{
	public:
		ESwimmingCreatureDeathCustomEventEnum                      EventType;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSwimmingCreatureCollided
	 * Size -> 0x0010
	 */
	struct FEventSwimmingCreatureCollided
	{
	public:
		class AActor*                                              SwimmingCreatureActor;                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_VVT3[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSwimmingCreatureCrested
	 * Size -> 0x0001
	 */
	struct FEventSwimmingCreatureCrested
	{
	public:
		unsigned char                                              UnknownData_3D4K[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventClientQueryCrewBeckonTagsFromCrewShipManifest
	 * Size -> 0x0001
	 */
	struct FEventClientQueryCrewBeckonTagsFromCrewShipManifest
	{
	public:
		unsigned char                                              UnknownData_R35T[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventServerQueryCrewBeckonTagsFromBeckonService
	 * Size -> 0x0010
	 */
	struct FEventServerQueryCrewBeckonTagsFromBeckonService
	{
	public:
		unsigned char                                              UnknownData_0JF2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSyncBeckonTagsToBeckonServiceForMigratedCrew
	 * Size -> 0x0020
	 */
	struct FEventSyncBeckonTagsToBeckonServiceForMigratedCrew
	{
	public:
		unsigned char                                              UnknownData_8E1K[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventCrewBeckonTags
	 * Size -> 0x0020
	 */
	struct FEventCrewBeckonTags
	{
	public:
		unsigned char                                              UnknownData_AOC1[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRemoveCrewBeckonTag
	 * Size -> 0x0014
	 */
	struct FEventRemoveCrewBeckonTag
	{
	public:
		unsigned char                                              UnknownData_NYTF[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAddCrewBeckonTag
	 * Size -> 0x0014
	 */
	struct FEventAddCrewBeckonTag
	{
	public:
		unsigned char                                              UnknownData_HLQK[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRemoveCrewFromBeingBeckonedByNPCGroup
	 * Size -> 0x0014
	 */
	struct FEventRemoveCrewFromBeingBeckonedByNPCGroup
	{
	public:
		unsigned char                                              UnknownData_45LB[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAddCrewToBeBeckoned
	 * Size -> 0x0014
	 */
	struct FEventAddCrewToBeBeckoned
	{
	public:
		unsigned char                                              UnknownData_I4AR[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipSpawnedRewardsTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FAggressiveGhostShipSpawnedRewardsTelemetryEvent
	{
	public:
		TArray<class FString>                                      RewardTypes;                                             // 0x0000(0x0010) ZeroConstructor
		struct FGuid                                               ShipId;                                                  // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipPortalJumpedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipPortalJumpedTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipAnchorDropTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipAnchorDropTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipDroppedMineTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipDroppedMineTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipProjectileCollidedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FAggressiveGhostShipProjectileCollidedTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileType;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipProjectileShotTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FAggressiveGhostShipProjectileShotTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               ProjectileAttackId;                                      // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileType;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		EAggressiveGhostShipTarget                                 Target;                                                  // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NPIF[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipDespawnTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FAggressiveGhostShipDespawnTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EAggressiveGhostShipType                                   ShipType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_DVEW[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               EncounterId;                                             // 0x0014(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EEncounterActorRemovedReason                               Reason;                                                  // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2KYV[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipSpawnTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FAggressiveGhostShipSpawnTelemetryEvent
	{
	public:
		struct FGuid                                               ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EAggressiveGhostShipType                                   ShipType;                                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_IDWT[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGuid                                               EncounterId;                                             // 0x0014(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    WaveIndex;                                               // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterEndTelemetryEvent
	 * Size -> 0x0014
	 */
	struct FAggressiveGhostShipEncounterEndTelemetryEvent
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       WasSuccessfullyCompleted;                                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_C366[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AggressiveGhostShipEncounterStartTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FAggressiveGhostShipEncounterStartTelemetryEvent
	{
	public:
		struct FGuid                                               EncounterId;                                             // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AshenLordNewHealthStageTelemetryEvent
	 * Size -> 0x0008
	 */
	struct FAshenLordNewHealthStageTelemetryEvent
	{
	public:
		uint32_t                                                   CurrentStage;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		uint32_t                                                   NumStages;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AshenWindSkullUseItemTelemetryEvent
	 * Size -> 0x0014
	 */
	struct FAshenWindSkullUseItemTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Charge;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PotentialChainNode
	 * Size -> 0x0008
	 */
	struct FPotentialChainNode
	{
	public:
		class AActor*                                              NodeActor;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.HauntedFortPhaseChanged
	 * Size -> 0x0001
	 */
	struct FHauntedFortPhaseChanged
	{
	public:
		unsigned char                                              UnknownData_EMJ2[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.HauntedFortTargetDestroyed
	 * Size -> 0x0001
	 */
	struct FHauntedFortTargetDestroyed
	{
	public:
		unsigned char                                              UnknownData_MCR6[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRevealableHidden
	 * Size -> 0x0001
	 */
	struct FEventRevealableHidden
	{
	public:
		unsigned char                                              UnknownData_EQT0[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRevealableFarReveal
	 * Size -> 0x0001
	 */
	struct FEventRevealableFarReveal
	{
	public:
		unsigned char                                              UnknownData_19XQ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventRevealableCloseReveal
	 * Size -> 0x0001
	 */
	struct FEventRevealableCloseReveal
	{
	public:
		unsigned char                                              UnknownData_LS2L[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealerDisabledEvent
	 * Size -> 0x0010
	 */
	struct FRevealerDisabledEvent
	{
	public:
		unsigned char                                              UnknownData_QFXB[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealerEnabledEvent
	 * Size -> 0x0010
	 */
	struct FRevealerEnabledEvent
	{
	public:
		unsigned char                                              UnknownData_B0FR[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealableComponentDespawnedEvent
	 * Size -> 0x0010
	 */
	struct FRevealableComponentDespawnedEvent
	{
	public:
		unsigned char                                              UnknownData_CYPD[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealableComponentSpawnedEvent
	 * Size -> 0x0010
	 */
	struct FRevealableComponentSpawnedEvent
	{
	public:
		unsigned char                                              UnknownData_TSEB[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealableStateChangeServerRpc
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FRevealableStateChangeServerRpc : public FBoxedRpc
	{
	public:
		class URevealableComponent*                                RevealableComponent;                                     // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		ERevealState                                               RevealState;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		unsigned char                                              UnknownData_0O2Q[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.RevealRequirementContext
	 * Size -> 0x0018
	 */
	struct FRevealRequirementContext
	{
	public:
		class UObject*                                             Revealable;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             Revealer;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UObject*                                             WorldContextObject;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementCacheEntry
	 * Size -> 0x0010
	 */
	struct FShipAnnouncementCacheEntry
	{
	public:
		unsigned char                                              UnknownData_ERPP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementCinematicEventServer
	 * Size -> 0x00F0
	 */
	struct FShipAnnouncementCinematicEventServer
	{
	public:
		class FText                                                ShipName;                                                // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_HXCP[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ShipScrambledName;                                       // 0x0038(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_MVAP[0x20];                                  // 0x0050(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                ShipTitle;                                               // 0x0070(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_TMVG[0x20];                                  // 0x0088(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              CaptainName;                                             // 0x00A8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FText                                                CaptainScrambledName;                                    // 0x00B8(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_CPQ8[0x20];                                  // 0x00D0(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementCinematicEvent
	 * Size -> 0x0098
	 */
	struct FShipAnnouncementCinematicEvent
	{
	public:
		class FString                                              ShipName;                                                // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FText                                                ShipTitle;                                               // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH Edit
		unsigned char                                              UnknownData_PBNJ[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FString                                              CaptainName;                                             // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              Alignment;                                               // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              AlignmentId;                                             // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              Icon;                                                    // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
		class FString                                              AudioCue;                                                // 0x0088(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementBuildAnnouncementRpc
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FShipAnnouncementBuildAnnouncementRpc : public FBoxedRpc
	{
	public:
		class AController*                                         Controller;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		class AActor*                                              Ship;                                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementProximityEvent
	 * Size -> 0x0008
	 */
	struct FShipAnnouncementProximityEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementShipSpottedEvent
	 * Size -> 0x0008
	 */
	struct FShipAnnouncementShipSpottedEvent
	{
	public:
		class AActor*                                              ShipSpotted;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SendShipStatsServerRpc
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSendShipStatsServerRpc : public FBoxedRpc
	{
	public:
		class AController*                                         Controller;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		struct FGuid                                               SpottedShipId;                                           // 0x0018(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected
	};

	/**
	 * ScriptStruct Athena.ShipAnnouncementSubmitAnnouncementRpc
	 * Size -> 0x0100 (FullSize[0x0110] - InheritedSize[0x0010])
	 */
	struct FShipAnnouncementSubmitAnnouncementRpc : public FBoxedRpc
	{
	public:
		class AController*                                         Controller;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		class AActor*                                              ShipActor;                                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash
		struct FShipAnnouncementCinematicEventServer               ServerAnnouncementEvent;                                 // 0x0020(0x00F0) Protected
	};

	/**
	 * ScriptStruct Athena.ShipStorageJettisonRequest
	 * Size -> 0x0070
	 */
	struct FShipStorageJettisonRequest
	{
	public:
		class UClass*                                              LoadedAsset;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<struct FStorageContainerNode>                       CachedContainerNodes;                                    // 0x0008(0x0010) ZeroConstructor, Transient
		unsigned char                                              UnknownData_YFJG[0x58];                                  // 0x0018(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ShipStorageJettisonServiceAssetLoader
	 * Size -> 0x0020
	 */
	struct FShipStorageJettisonServiceAssetLoader
	{
	public:
		TWeakObjectPtr<class AShipStorageJettisonService>          OwnerService;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper
		unsigned char                                              UnknownData_AJ45[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LeaveGhostShipActionStateConstructionInfo
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FLeaveGhostShipActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		int32_t                                                    GhostShipLevelId;                                        // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QBCP[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventGhostShipLevelLoaded
	 * Size -> 0x0004
	 */
	struct FEventGhostShipLevelLoaded
	{
	public:
		int32_t                                                    LevelId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSpawnedAsGhostNotification
	 * Size -> 0x0038
	 */
	struct FEventSpawnedAsGhostNotification
	{
	public:
		class FText                                                NotificationText;                                        // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH BlueprintVisible
		unsigned char                                              UnknownData_DF3D[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct Athena.EventGhostShipDoorDestroyed
	 * Size -> 0x0008
	 */
	struct FEventGhostShipDoorDestroyed
	{
	public:
		class AGhostShipDoor*                                      GhostShipDoor;                                           // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventGhostShipDoorCreated
	 * Size -> 0x0008
	 */
	struct FEventGhostShipDoorCreated
	{
	public:
		class AGhostShipDoor*                                      GhostShipDoor;                                           // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.LaunchableProjectileCreator
	 * Size -> 0x0078
	 */
	struct FLaunchableProjectileCreator
	{
	public:
		unsigned char                                              UnknownData_1FTV[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 AimBase;                                                 // 0x0050(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class AActor*>                                      IgnoredActors;                                           // 0x0058(0x0010) ZeroConstructor
		TArray<class UActorComponent*>                             IgnoredComponents;                                       // 0x0068(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference
	};

	/**
	 * ScriptStruct Athena.FlashbangEffectEvent
	 * Size -> 0x0001
	 */
	struct FFlashbangEffectEvent
	{
	public:
		bool                                                       IsFlashbanged;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ClientProjectileImpactHitRegInfoTelemetryEvent
	 * Size -> 0x0070
	 */
	struct FClientProjectileImpactHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              DamagerTypeId;                                           // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             HitLocation;                                             // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1ST9[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InstigatorObjectId;                                      // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorObjectType;                                    // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorActorName;                                     // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ServerProjectileImpactHitRegInfoTelemetryEvent
	 * Size -> 0x0070
	 */
	struct FServerProjectileImpactHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              DamagerTypeId;                                           // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             HitLocation;                                             // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_TLTV[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InstigatorObjectId;                                      // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorObjectType;                                    // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorActorName;                                     // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ProjectileImpactTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FProjectileImpactTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              DamagerTypeId;                                           // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorObjectId;                                      // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorObjectType;                                    // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ClientProjectileHitRegInfoTelemetryEvent
	 * Size -> 0x0060
	 */
	struct FClientProjectileHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectType;                                           // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitActorName;                                            // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             HitLocation;                                             // 0x0050(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsHitScanShot;                                           // 0x005C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DIWW[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerProjectileHitRegInfoTelemetryEvent
	 * Size -> 0x0070
	 */
	struct FServerProjectileHitRegInfoTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectType;                                           // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitActorName;                                            // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              InstigatorName;                                          // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             HitLocation;                                             // 0x0060(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       IsHitScanShot;                                           // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_GHK2[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ProjectileHitTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FProjectileHitTelemetryEvent
	{
	public:
		struct FGuid                                               AttackId;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              ProjectileId;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectId;                                             // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              HitObjectType;                                           // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.OnLiquidProjectileImpactEvent
	 * Size -> 0x0001
	 */
	struct FOnLiquidProjectileImpactEvent
	{
	public:
		bool                                                       ImpactFilledShip;                                        // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.LiquidProjectileImpactEvent
	 * Size -> 0x0008
	 */
	struct FLiquidProjectileImpactEvent
	{
	public:
		class UClass*                                              ProjectileType;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.SittingActionStateConstructionInfo
	 * Size -> 0x00A0 (FullSize[0x00E8] - InheritedSize[0x0048])
	 */
	struct FSittingActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		struct FSittingActionStateParams                           SittingActionStateParams;                                // 0x0048(0x00A0)
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerEnteredSittingThirdPersonCameraState
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerEnteredSittingThirdPersonCameraState
	{
	public:
		unsigned char                                              UnknownData_SL98[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerExittedSittingState
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerExittedSittingState
	{
	public:
		unsigned char                                              UnknownData_OR05[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredSittingState
	 * Size -> 0x0008
	 */
	struct FEventPlayerEnteredSittingState
	{
	public:
		class UClass*                                              SeatAnimationId;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventLocalPlayerEnteredSittingState
	 * Size -> 0x0001
	 */
	struct FEventLocalPlayerEnteredSittingState
	{
	public:
		bool                                                       SeatSupportsThirdPersonCamera;                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.SittingActionStateSerialisableData
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	struct FSittingActionStateSerialisableData : public FControlObjectActionStateSerialisableData
	{	};

	/**
	 * ScriptStruct Athena.SittingThirdPersonCameraActionStateConstructionInfo
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FSittingThirdPersonCameraActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class UAthenaSpringArmComponentParams*                     SpringArmParams;                                         // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      VerticalOffsetFactorWhenZoomed;                          // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_X1B3[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SleepingActionStateConstructionInfo
	 * Size -> 0x0050 (FullSize[0x0098] - InheritedSize[0x0048])
	 */
	struct FSleepingActionStateConstructionInfo : public FControlObjectActionStateConstructionInfo
	{
	public:
		struct FSleepingActionStateParams                          SleepingActionStateParams;                               // 0x0048(0x0050)
	};

	/**
	 * ScriptStruct Athena.EventPlayerExittedSleepingState
	 * Size -> 0x0001
	 */
	struct FEventPlayerExittedSleepingState
	{
	public:
		bool                                                       NoFarting;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredSleepingState
	 * Size -> 0x000C
	 */
	struct FEventPlayerEnteredSleepingState
	{
	public:
		float                                                      AudioEventDelay;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      AudioStateDelay;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       NoFarting;                                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_P3H2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SleepingActionStateSerialisableData
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	struct FSleepingActionStateSerialisableData : public FControlObjectActionStateSerialisableData
	{	};

	/**
	 * ScriptStruct Athena.EventActorStoppedUsingSeat
	 * Size -> 0x0001
	 */
	struct FEventActorStoppedUsingSeat
	{
	public:
		unsigned char                                              UnknownData_0MSL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventActorStartedUsingSeat
	 * Size -> 0x0001
	 */
	struct FEventActorStartedUsingSeat
	{
	public:
		unsigned char                                              UnknownData_34B8[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.LoadRequestAssetInfo
	 * Size -> 0x0038
	 */
	struct FLoadRequestAssetInfo
	{
	public:
		float                                                      LoadDuration;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3NBA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AnimationsStructName;                                    // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LoadingForCharacterName;                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              ItemName;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.FallbackAnimUsageInfo
	 * Size -> 0x0038
	 */
	struct FFallbackAnimUsageInfo
	{
	public:
		class FString                                              AnimationsStructName;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              FallbackForCharacterName;                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
		float                                                      DurationOfUsage;                                         // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_JHFU[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemName;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AssetLoadSkipInfo
	 * Size -> 0x0018
	 */
	struct FAssetLoadSkipInfo
	{
	public:
		class FString                                              AnimationsStructName;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		unsigned char                                              SkipCount;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_N6OJ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AnimInfo
	 * Size -> 0x0020
	 */
	struct FAnimInfo
	{
	public:
		class FString                                              AnimationsStructName;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              CharacterName;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.DynamicAnimationAllocationTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FDynamicAnimationAllocationTelemetryEvent
	{
	public:
		TArray<struct FLoadRequestAssetInfo>                       LoadAssetFailedInfo;                                     // 0x0000(0x0010) ZeroConstructor
		TArray<struct FLoadRequestAssetInfo>                       LoadAssetSuccessInfo;                                    // 0x0010(0x0010) ZeroConstructor
		TArray<struct FFallbackAnimUsageInfo>                      FallbackAnimUsageInfo;                                   // 0x0020(0x0010) ZeroConstructor
		TArray<struct FAssetLoadSkipInfo>                          AssetLoadSkipInfo;                                       // 0x0030(0x0010) ZeroConstructor
		TArray<struct FAnimInfo>                                   LoadOrderMismatchOccuranceAnimInfo;                      // 0x0040(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCharacterSelect
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationCharacterSelect
	{
	public:
		class UAnimSequence*                                       Idle;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IntoHighlight;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Highlighted;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       OutOfHighlight;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Selected;                                                // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCameraAdditiveAnimData
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationCameraAdditiveAnimData
	{
	public:
		class UAnimSequence*                                       CameraDefaultYaw;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraDefaultPitch;                                      // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraWheelYaw;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraWheelPitch;                                        // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraCapstanYaw;                                        // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraCapstanPitch;                                      // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraSailYaw;                                           // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraSailPitch;                                         // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraLadderYaw;                                         // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       CameraLadderPitch;                                       // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationIKFootplantingAnimData
	 * Size -> 0x001C
	 */
	struct FAthenaAnimationIKFootplantingAnimData
	{
	public:
		bool                                                       Active;                                                  // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_LLXF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HipHeight;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      HipPullStrength;                                         // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistance;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistanceRangeStart;                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      DownDistanceRangeEnd;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      IKLegStretch;                                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationIdlesAnimData
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationIdlesAnimData
	{
	public:
		TArray<class UAnimSequence*>                               IdleAnimations;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationJumpingFirstPersonAnimData
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationJumpingFirstPersonAnimData
	{
	public:
		class UAnimSequence*                                       JumpStart;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         JumpCycle;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       PreImpact;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LandLight;                                               // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         LandHeavy;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationJumpingThirdPersonAnimData
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationJumpingThirdPersonAnimData
	{
	public:
		TArray<class UBlendSpace*>                                 JumpStart;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 JumpCycle;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 PreImpact;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 LandLight;                                               // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace*>                                 LandHeavy;                                               // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationJumpingAnimData
	 * Size -> 0x0078
	 */
	struct FAthenaAnimationJumpingAnimData
	{
	public:
		struct FAthenaAnimationJumpingFirstPersonAnimData          Jumping1stPerson;                                        // 0x0000(0x0028) Edit, BlueprintVisible
		struct FAthenaAnimationJumpingThirdPersonAnimData          Jumping3rdPerson;                                        // 0x0028(0x0050) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotionAnimData
	 * Size -> 0x0050
	 */
	struct FAthenaAnimationLocomotionAnimData
	{
	public:
		class UBlendSpace*                                         MainMovement;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLocomotionTurningAnimData           TurningLeft;                                             // 0x0008(0x0008) Edit, BlueprintVisible
		struct FAthenaAnimationLocomotionTurningAnimData           TurningRight;                                            // 0x0010(0x0008) Edit, BlueprintVisible
		class UAnimSequence*                                       MovementOutOf;                                           // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TurnOut;                                                 // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         RunStop;                                                 // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLocomotionStairsAnimData            StairsLocomotion;                                        // 0x0030(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLocomotionTurningAnimDataPitchOverride
	 * Size -> 0x0008
	 */
	struct FAthenaAnimationLocomotionTurningAnimDataPitchOverride
	{
	public:
		class UBlendSpace1D*                                       Turn90;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSwimmingSprintAnimData
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationSwimmingSprintAnimData
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Loop;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       IntoUnderwater;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       LoopUnderwater;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSwimmingAnimData
	 * Size -> 0x0068
	 */
	struct FAthenaAnimationSwimmingAnimData
	{
	public:
		class UBlendSpace*                                         SwimmingMovement;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace*                                         SwimmingMovementUnderwater;                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       UnderwaterTreadwater;                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLocomotionTurningAnimData           TurningLeft;                                             // 0x0018(0x0008) Edit, BlueprintVisible
		struct FAthenaAnimationLocomotionTurningAnimData           TurningRight;                                            // 0x0020(0x0008) Edit, BlueprintVisible
		TArray<class UAnimSequence*>                               Idles;                                                   // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               IdlesUnderwater;                                         // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor
		struct FAthenaAnimationSwimmingSprintAnimData              SwimSprint;                                              // 0x0048(0x0020) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationSpawnAnimData
	 * Size -> 0x0020
	 */
	struct FAthenaAnimationSpawnAnimData
	{
	public:
		TArray<class UAnimSequence*>                               Spawn;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               Despawn;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationCapstanAnimData
	 * Size -> 0x0068
	 */
	struct FAthenaAnimationCapstanAnimData
	{
	public:
		class UAnimSequence*                                       Attach;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Detach;                                                  // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		TArray<class UBlendSpace1D*>                               NeutralForce;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               PushForce;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UBlendSpace1D*>                               PullForce;                                               // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor
		class UBlendSpace1D*                                       PullToNeutral;                                           // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       PushToPull;                                              // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       PullToPush;                                              // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		float                                                      RemapSpeed;                                              // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XW86[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlendSpace1D*                                       UpperIntent;                                             // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationActionRelevancy
	 * Size -> 0x0004
	 */
	struct FAthenaAnimationActionRelevancy
	{
	public:
		bool                                                       UsePrimary;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UsePrimaryAlt;                                           // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseSecondary;                                            // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       UseSecondaryAlt;                                         // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLadderTransitionsAnimData
	 * Size -> 0x0028
	 */
	struct FAthenaAnimationLadderTransitionsAnimData
	{
	public:
		class UAnimSequence*                                       ClimbOnTop;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ClimbOffTop;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ClimbOnBottom;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ClimbOffBottom;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       ClamberOffTop;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationLadderAnimData
	 * Size -> 0x0068
	 */
	struct FAthenaAnimationLadderAnimData
	{
	public:
		class UAnimSequence*                                       Climb;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       Slide;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       SlideStop;                                               // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationLadderTransitionsAnimData           Mast;                                                    // 0x0018(0x0028) Edit, BlueprintVisible
		struct FAthenaAnimationLadderTransitionsAnimData           ShipSide;                                                // 0x0040(0x0028) Edit, BlueprintVisible
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationMapTable
	 * Size -> 0x0030
	 */
	struct FAthenaAnimationMapTable
	{
	public:
		TArray<class UAnimSequence*>                               Into;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               IdleCycle;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               Outof;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWeapon
	 * Size -> 0x00B8
	 */
	struct FAthenaAnimationWeapon
	{
	public:
		unsigned char                                              UnknownData_3XHL[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationActiveItemComplexAnimData           AnimData;                                                // 0x0018(0x0038) BlueprintVisible, BlueprintReadOnly
		bool                                                       Attacking;                                               // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       NewAttack;                                               // 0x0051(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DUVI[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAthenaAnimationWeaponData                          WeaponData;                                              // 0x0058(0x0048)
		unsigned char                                              UnknownData_A296[0x18];                                  // 0x00A0(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWheelTurnsAnimData
	 * Size -> 0x0018
	 */
	struct FAthenaAnimationWheelTurnsAnimData
	{
	public:
		class UAnimSequence*                                       Turn;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TurnFast;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UAnimSequence*                                       TurnFast180;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWheelArmOverlayAnimData
	 * Size -> 0x0010
	 */
	struct FAthenaAnimationWheelArmOverlayAnimData
	{
	public:
		class UBlendSpace1D*                                       ArmLower;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UBlendSpace1D*                                       ArmRaise;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.AthenaAnimationWheelAnimData
	 * Size -> 0x0088
	 */
	struct FAthenaAnimationWheelAnimData
	{
	public:
		class UAnimSequence*                                       Into;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FAthenaAnimationWheelTurnsAnimData                  LeftTurn;                                                // 0x0008(0x0018) Edit, BlueprintVisible
		struct FAthenaAnimationWheelTurnsAnimData                  RightTurn;                                               // 0x0020(0x0018) Edit, BlueprintVisible
		struct FAthenaAnimationWheelArmOverlayAnimData             LeftArm;                                                 // 0x0038(0x0010) Edit, BlueprintVisible
		struct FAthenaAnimationWheelArmOverlayAnimData             RightArm;                                                // 0x0048(0x0010) Edit, BlueprintVisible
		TArray<class UAnimSequence*>                               Idles;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               LeftFingerIdles;                                         // 0x0068(0x0010) Edit, BlueprintVisible, ZeroConstructor
		TArray<class UAnimSequence*>                               RightFingerIdles;                                        // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.EventDASFishingAnimationsLoaded
	 * Size -> 0x0001
	 */
	struct FEventDASFishingAnimationsLoaded
	{
	public:
		unsigned char                                              UnknownData_UMGZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.AISpawnActionStateConstructionInfo
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	struct FAISpawnActionStateConstructionInfo : public FActorActionStateConstructionInfo
	{
	public:
		class UClass*                                              HeldItemToBeginSpawn;                                    // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		EAthenaAISpawnType                                         SpawnType;                                               // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       QuickSpawn;                                              // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_VIW0[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.IslandShipVisitor
	 * Size -> 0x0008
	 */
	struct FIslandShipVisitor
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.IslandTeleportLocation
	 * Size -> 0x0028
	 */
	struct FIslandTeleportLocation
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             TeleportLocation;                                        // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      TeleportYaw;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class UClass*                                              SeaId;                                                   // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipEnteredIslandVicinity
	 * Size -> 0x0008
	 */
	struct FEventShipEnteredIslandVicinity
	{
	public:
		unsigned char                                              UnknownData_WL82[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventIslandsSucessfullyCached
	 * Size -> 0x0001
	 */
	struct FEventIslandsSucessfullyCached
	{
	public:
		unsigned char                                              UnknownData_5C2Q[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventIslandDiscoveredServer
	 * Size -> 0x0001
	 */
	struct FEventIslandDiscoveredServer
	{
	public:
		unsigned char                                              UnknownData_XFCO[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventAllIslandsLoaded
	 * Size -> 0x0001
	 */
	struct FEventAllIslandsLoaded
	{
	public:
		unsigned char                                              UnknownData_TVJF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventIslandDiscoveredNotification
	 * Size -> 0x0048
	 */
	struct FEventIslandDiscoveredNotification
	{
	public:
		class FText                                                IslandName;                                              // 0x0000(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_YE3F[0x20];                                  // 0x0018(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EIslandType                                                IslandType;                                              // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8S7Y[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SeaName;                                                 // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EIslandActiveEventType                                     IslandActiveEventType;                                   // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_Y0BG[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerSetFootOnIsland
	 * Size -> 0x0010
	 */
	struct FEventPlayerSetFootOnIsland
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_EKO5[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerLeftIslandVicinity
	 * Size -> 0x0020
	 */
	struct FEventPlayerLeftIslandVicinity
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_8IEG[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IslandName;                                              // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HB9D[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerEnteredIslandVicinity
	 * Size -> 0x0020
	 */
	struct FEventPlayerEnteredIslandVicinity
	{
	public:
		class AActor*                                              Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_D7IP[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IslandName;                                              // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_2YKA[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventSpawnComponentRequest
	 * Size -> 0x0010
	 */
	struct FEventSpawnComponentRequest
	{
	public:
		class USalvageItemSpawnComponent*                          SalvageItemSpawnComponent;                               // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfLocationsRequested;                              // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GBU9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SpawnLocationReservation
	 * Size -> 0x0020
	 */
	struct FSpawnLocationReservation
	{
	public:
		class UClass*                                              LocationType;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
		struct FIslandItemSpawnLocationData                        SpawnData;                                               // 0x0008(0x0018)
	};

	/**
	 * ScriptStruct Athena.IslandDiscoveredRpc
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FIslandDiscoveredRpc : public FBoxedRpc
	{
	public:
		class FName                                                IslandName;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventSpawnedAsSalvageItem
	 * Size -> 0x0001
	 */
	struct FEventSpawnedAsSalvageItem
	{
	public:
		bool                                                       SpawnedAsSunkenItem;                                     // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.GameEventExclusionZone
	 * Size -> 0x000C
	 */
	struct FGameEventExclusionZone
	{
	public:
		struct FVector2D                                           Location;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor
		float                                                      Radius;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerSettingsChangeTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FGameEventSchedulerSettingsChangeTelemetryEvent
	{
	public:
		struct FStringAssetReference                               SettingsAssetPath;                                       // 0x0000(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerConfigTelemetry
	 * Size -> 0x0008
	 */
	struct FGameEventSchedulerConfigTelemetry
	{
	public:
		EGameEventSchedulerEventType                               TrackedActorType;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_GOD9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumAllowed;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.GameEventSchedulerConfigChangeTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FGameEventSchedulerConfigChangeTelemetryEvent
	{
	public:
		struct FGuid                                               ConfigId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		TArray<struct FGameEventSchedulerConfigTelemetry>          Events;                                                  // 0x0010(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.BootyItemShipDroppedInfo
	 * Size -> 0x0014
	 */
	struct FBootyItemShipDroppedInfo
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DroppedOnOwnShip;                                        // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       DroppedOnAnotherShip;                                    // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AKIC[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootyItemDroppedOnShipEvent
	 * Size -> 0x0018
	 */
	struct FBootyItemDroppedOnShipEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AItemInfo*                                           ItemOnShip;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		bool                                                       FirstTimeDroppedOnOwnOrAnotherShipByCrew;                // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_HQ7H[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BootyItemTransferredToVendor
	 * Size -> 0x0018
	 */
	struct FBootyItemTransferredToVendor
	{
	public:
		class ABootyItemInfo*                                      ItemInfo;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FGuid                                               CrewId;                                                  // 0x0008(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.BootyItemOwnershipChangedParams
	 * Size -> 0x0048
	 */
	struct FBootyItemOwnershipChangedParams
	{
	public:
		struct FGuid                                               NewCrewId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               PreviousCrewId;                                          // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               BootyId;                                                 // 0x0020(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_HVM4[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Rarity;                                                  // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_061G[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemInfo*                                           BootyItemInfo;                                           // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.BootyItemShipOwnershipChangeEvent
	 * Size -> 0x0010
	 */
	struct FBootyItemShipOwnershipChangeEvent
	{
	public:
		class AActor*                                              Ship;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AItemInfo*                                           ItemOnShip;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCargoRunCrateDelivered
	 * Size -> 0x0018
	 */
	struct FEventCargoRunCrateDelivered
	{
	public:
		struct FGuid                                               PickUpId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class ABootyItemInfo*                                      ItemInfo;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCargoRunCratePickedUp
	 * Size -> 0x0040
	 */
	struct FEventCargoRunCratePickedUp
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               BatchId;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               PickUpId;                                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
		class ABootyItemInfo*                                      ItemInfo;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class AWieldableItem*                                      Item;                                                    // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventCargoRunCrateSetDropOff
	 * Size -> 0x0028
	 */
	struct FEventCargoRunCrateSetDropOff
	{
	public:
		struct FGuid                                               PickUpId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               DropOffLocationId;                                       // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		int64_t                                                    DeliveryDeadlineAbsolute;                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.RewardPouchGivenRewardTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FRewardPouchGivenRewardTelemetryEvent
	{
	public:
		struct FGuid                                               PouchId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                RewardId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		EBootyTypes                                                BootyType;                                               // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_I70K[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Rarity;                                                  // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ETrackedActorType                                          TrackedActorType;                                        // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_3SJY[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ConsumedIngestibleTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FConsumedIngestibleTelemetryEvent
	{
	public:
		class FString                                              ItemName;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
		ECookingState                                              CookState;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_MFD8[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      StatusesApplied;                                         // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.ItemSpawnTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FItemSpawnTelemetryEvent
	{
	public:
		struct FGuid                                               ItemId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FName                                                SpawnedClass;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		ESpawnedItemSource                                         Source;                                                  // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_U2KA[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SourceId;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             SpawnLocation;                                           // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_0H52[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.MessageInABottleGivenVoyageTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FMessageInABottleGivenVoyageTelemetryEvent
	{
	public:
		struct FGuid                                               BottleId;                                                // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               VoyageId;                                                // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.TreasureBuriedTelemetryEvent
	 * Size -> 0x0058
	 */
	struct FTreasureBuriedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NEFC[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             TreasureLocation;                                        // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               MapID;                                                   // 0x0034(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               BuriedByCrewId;                                          // 0x0044(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_IXLR[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureSpawnedTelemetryEvent
	 * Size -> 0x0050
	 */
	struct FTreasureSpawnedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_XVXM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		ESpawnedItemSource                                         Source;                                                  // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_QEUE[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SourceId;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
		struct FVector                                             TreasureLocation;                                        // 0x0040(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_1U5D[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureSoldTelemetryEvent
	 * Size -> 0x0040
	 */
	struct FTreasureSoldTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_NIDX[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       GoldAwarded;                                             // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		ESpawnedItemSource                                         Source;                                                  // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_1UTG[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TreasurePurchaser;                                       // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureDroppedTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FTreasureDroppedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_79VI[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
		class FString                                              LocationOnShip;                                          // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasurePickedUpTelemetryEvent
	 * Size -> 0x0028
	 */
	struct FTreasurePickedUpTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		EBootyTypes                                                BootyType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_RAM3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Rarity;                                                  // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureSurfacedTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FTreasureSurfacedTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Rarity;                                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureFoundTelemetryEvent
	 * Size -> 0x0038
	 */
	struct FTreasureFoundTelemetryEvent
	{
	public:
		struct FGuid                                               BootyId;                                                 // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               QuestId;                                                 // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		class FString                                              Rarity;                                                  // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsBoobyTrapped;                                          // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_AP5T[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.TreasureChestSoldClientPredictionEvent
	 * Size -> 0x0008
	 */
	struct FTreasureChestSoldClientPredictionEvent
	{
	public:
		class UClass*                                              Company;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureChestSoldInContestNetworkEvent
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FTreasureChestSoldInContestNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FName                                                RewardId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		class FText                                                CrewName;                                                // 0x0018(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_HHUQ[0x20];                                  // 0x0030(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FStringAssetReference                               ToastBackgroundImage;                                    // 0x0050(0x0010) ZeroConstructor
		struct FStringAssetReference                               BackgroundImage;                                         // 0x0060(0x0010) ZeroConstructor
		class FName                                                AudioEventName;                                          // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.TreasureChestSoldInAllianceNetworkEvent
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FTreasureChestSoldInAllianceNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FName                                                RewardId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               AllianceIcon;                                            // 0x0018(0x0010) ZeroConstructor
		struct FStringAssetReference                               StampIcon;                                               // 0x0028(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.TreasureChestSoldNetworkEvent
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FTreasureChestSoldNetworkEvent : public FNetworkEventStruct
	{
	public:
		class FName                                                RewardId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		struct FStringAssetReference                               StampIcon;                                               // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewCaptainedSessionData
	 * Size -> 0x0040
	 */
	struct FCrewCaptainedSessionData
	{
	public:
		unsigned char                                              UnknownData_C18Q[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewMember
	 * Size -> 0x0010
	 */
	struct FCrewMember
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipHighestAlignmentChangedEvent
	 * Size -> 0x0010
	 */
	struct FShipHighestAlignmentChangedEvent
	{
	public:
		class FString                                              AlignmentId;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipIdChangedEvent
	 * Size -> 0x0010
	 */
	struct FShipIdChangedEvent
	{
	public:
		class FString                                              ShipId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.PlayerIsCaptainChangedEvent
	 * Size -> 0x0001
	 */
	struct FPlayerIsCaptainChangedEvent
	{
	public:
		bool                                                       IsCaptain;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ShipCustomizationCaptainOnlyChangedEvent
	 * Size -> 0x0001
	 */
	struct FShipCustomizationCaptainOnlyChangedEvent
	{
	public:
		bool                                                       IsShipCustomizationCaptainOnly;                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.CaptainedSessionChangedEvent
	 * Size -> 0x0001
	 */
	struct FCaptainedSessionChangedEvent
	{
	public:
		bool                                                       IsCaptainedSession;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.PlayerJoinedCrew
	 * Size -> 0x0078 (FullSize[0x0088] - InheritedSize[0x0010])
	 */
	struct FPlayerJoinedCrew : public FNetworkEventStruct
	{
	public:
		class FText                                                PlayerName;                                              // 0x0010(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_0C2G[0x20];                                  // 0x0028(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FText                                                PlayerNameOverride;                                      // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH
		unsigned char                                              UnknownData_G3KM[0x20];                                  // 0x0060(0x0020) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       IsJoining;                                               // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_FTLG[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventChangeMatchmakingVisibility
	 * Size -> 0x0001
	 */
	struct FEventChangeMatchmakingVisibility
	{
	public:
		bool                                                       MatchmakingEnabled;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventScuttleShip
	 * Size -> 0x0001
	 */
	struct FEventScuttleShip
	{
	public:
		unsigned char                                              UnknownData_RBGD[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventPlayerRemovedFromCrew
	 * Size -> 0x0018
	 */
	struct FEventPlayerRemovedFromCrew
	{
	public:
		unsigned char                                              UnknownData_MBEW[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                        UniqueId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerAddedToCrew
	 * Size -> 0x0018
	 */
	struct FEventPlayerAddedToCrew
	{
	public:
		unsigned char                                              UnknownData_XUP0[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerState*                                        UniqueId;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventShipRemovedFromCrew
	 * Size -> 0x0010
	 */
	struct FEventShipRemovedFromCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.EventShipAddedToCrew
	 * Size -> 0x0018
	 */
	struct FEventShipAddedToCrew
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		class AActor*                                              ShipActor;                                               // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.EventPlayerTaleProgressUpdated
	 * Size -> 0x0004
	 */
	struct FEventPlayerTaleProgressUpdated
	{
	public:
		unsigned char                                              UnknownData_O0T3[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.ServerMigrationCrewMigrationStatus
	 * Size -> 0x0028
	 */
	struct FServerMigrationCrewMigrationStatus
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		bool                                                       Migratable;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_DUXB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector2D>                                   Locations;                                               // 0x0018(0x0010) ZeroConstructor
	};

	/**
	 * ScriptStruct Athena.CrewBaseTelemetryFragmentPlayerControllerLookupInput
	 * Size -> 0x0008
	 */
	struct FCrewBaseTelemetryFragmentPlayerControllerLookupInput : public FTelemetryFragmentInput
	{
	public:
		class APlayerState*                                        CrewMemberPlayerState;                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewBaseTelemetryFragmentPlayerCharacterLookupInput
	 * Size -> 0x0008
	 */
	struct FCrewBaseTelemetryFragmentPlayerCharacterLookupInput : public FTelemetryFragmentInput
	{
	public:
		class ACharacter*                                          CrewMemberCharacter;                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewBaseTelemetryFragmentInput
	 * Size -> 0x0010
	 */
	struct FCrewBaseTelemetryFragmentInput : public FTelemetryFragmentInput
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
	};

	/**
	 * ScriptStruct Athena.ServerPopulationTelemetryFragment
	 * Size -> 0x0008
	 */
	struct FServerPopulationTelemetryFragment
	{
	public:
		int32_t                                                    NumberOfPlayers;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		int32_t                                                    NumberOfCrews;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.CrewBaseTelemetryFragment
	 * Size -> 0x0060
	 */
	struct FCrewBaseTelemetryFragment
	{
	public:
		struct FGuid                                               CrewId;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               CrewSessionId;                                           // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		struct FGuid                                               AllianceId;                                              // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		int32_t                                                    CurrentCrewCount;                                        // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_PNQ9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SessionType;                                             // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		class FString                                              CrewType;                                                // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash
		bool                                                       IsCaptainedCrew;                                         // 0x0058(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor
		unsigned char                                              UnknownData_V355[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.PlayerBriggedEndTelemetryEvent
	 * Size -> 0x0020
	 */
	struct FPlayerBriggedEndTelemetryEvent
	{
	public:
		struct FGuid                                               BriggedId;                                               // 0x0000(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor
		struct FDateTime                                           BriggedStartDateTime;                                    // 0x0010(0x0008) ZeroConstructor
		EBrigReleaseReason                                         ReleaseReason;                                           // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
		unsigned char                                              UnknownData_97OU[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.SessionVisibilityChangedTelemetryEvent
	 * Size -> 0x0010
	 */
	struct FSessionVisibilityChangedTelemetryEvent
	{
	public:
		class FString                                              SessionVisibility;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash
	};

	/**
	 * ScriptStruct Athena.ShipScuttledTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FShipScuttledTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_PKHZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewPlayerLeftTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewPlayerLeftTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_0FRS[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewPlayerJoinedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewPlayerJoinedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_O8VL[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewDestroyedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewDestroyedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_GK3W[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.CrewCreatedTelemetryEvent
	 * Size -> 0x0001
	 */
	struct FCrewCreatedTelemetryEvent
	{
	public:
		unsigned char                                              UnknownData_Q1UZ[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWaterSplashExitWater
	 * Size -> 0x0001
	 */
	struct FEventWaterSplashExitWater
	{
	public:
		unsigned char                                              UnknownData_QA73[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventWaterSplashEnterWater
	 * Size -> 0x0001
	 */
	struct FEventWaterSplashEnterWater
	{
	public:
		unsigned char                                              UnknownData_TSFB[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.BuoyancyStateChanged
	 * Size -> 0x0010
	 */
	struct FBuoyancyStateChanged
	{
	public:
		unsigned char                                              UnknownData_FEP0[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Athena.EventBuoyantSpawnedObjectOwnershipTransferred
	 * Size -> 0x0010
	 */
	struct FEventBuoyantSpawnedObjectOwnershipTransferred
	{
	public:
		unsigned char                                              BuoyancyInterface[0x10];                                 // 0x0000(0x0010) UNKNOWN PROPERTY: InterfaceProperty Athena.EventBuoyantSpawnedObjectOwnershipTransferred.BuoyancyInterface
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
